

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Oct 24 14:44:59 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F628A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Version 2.40
    15                           ; Generated 17/11/2021 GMT
    16                           ; 
    17                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F628A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0000                     	;# 
    50     0001                     	;# 
    51     0002                     	;# 
    52     0003                     	;# 
    53     0004                     	;# 
    54     0005                     	;# 
    55     0006                     	;# 
    56     000A                     	;# 
    57     000B                     	;# 
    58     000C                     	;# 
    59     000E                     	;# 
    60     000E                     	;# 
    61     000F                     	;# 
    62     0010                     	;# 
    63     0011                     	;# 
    64     0012                     	;# 
    65     0015                     	;# 
    66     0015                     	;# 
    67     0016                     	;# 
    68     0017                     	;# 
    69     0018                     	;# 
    70     0019                     	;# 
    71     001A                     	;# 
    72     001F                     	;# 
    73     0081                     	;# 
    74     0085                     	;# 
    75     0086                     	;# 
    76     008C                     	;# 
    77     008E                     	;# 
    78     0092                     	;# 
    79     0098                     	;# 
    80     0099                     	;# 
    81     009A                     	;# 
    82     009B                     	;# 
    83     009C                     	;# 
    84     009D                     	;# 
    85     009F                     	;# 
    86     0000                     	;# 
    87     0001                     	;# 
    88     0002                     	;# 
    89     0003                     	;# 
    90     0004                     	;# 
    91     0005                     	;# 
    92     0006                     	;# 
    93     000A                     	;# 
    94     000B                     	;# 
    95     000C                     	;# 
    96     000E                     	;# 
    97     000E                     	;# 
    98     000F                     	;# 
    99     0010                     	;# 
   100     0011                     	;# 
   101     0012                     	;# 
   102     0015                     	;# 
   103     0015                     	;# 
   104     0016                     	;# 
   105     0017                     	;# 
   106     0018                     	;# 
   107     0019                     	;# 
   108     001A                     	;# 
   109     001F                     	;# 
   110     0081                     	;# 
   111     0085                     	;# 
   112     0086                     	;# 
   113     008C                     	;# 
   114     008E                     	;# 
   115     0092                     	;# 
   116     0098                     	;# 
   117     0099                     	;# 
   118     009A                     	;# 
   119     009B                     	;# 
   120     009C                     	;# 
   121     009D                     	;# 
   122     009F                     	;# 
   123     0006                     _PORTB	set	6
   124     0001                     _TMR0	set	1
   125     000B                     _INTCON	set	11
   126     0081                     _OPTION_REG	set	129
   127     0086                     _TRISB	set	134
   128     0085                     _TRISA	set	133
   129                           
   130                           	psect	cinit
   131     000B                     start_initialization:	
   132                           ; #config settings
   133                           
   134     000B                     __initialization:
   135                           
   136                           ; Clear objects allocated to COMMON
   137     000B  01F3               	clrf	__pbssCOMMON& (0+127)
   138     000C                     end_of_initialization:	
   139                           ;End of C runtime variable initialization code
   140                           
   141     000C                     __end_of__initialization:
   142     000C  0183               	clrf	3
   143     000D  282E               	ljmp	_main	;jump to C main() function
   144                           
   145                           	psect	bssCOMMON
   146     0073                     __pbssCOMMON:
   147     0073                     _count:
   148     0073                     	ds	1
   149                           
   150                           	psect	cstackCOMMON
   151     0070                     __pcstackCOMMON:
   152     0070                     ?_main:
   153     0070                     ?_ISR:	
   154                           ; 1 bytes @ 0x0
   155                           
   156     0070                     ??_ISR:	
   157                           ; 1 bytes @ 0x0
   158                           
   159                           
   160                           ; 1 bytes @ 0x0
   161     0070                     	ds	3
   162     0073                     ??_main:
   163                           
   164                           	psect	maintext
   165     002E                     __pmaintext:	
   166                           ; 1 bytes @ 0x3
   167 ;;
   168 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   169 ;;
   170 ;; *************** function _main *****************
   171 ;; Defined at:
   172 ;;		line 24 in file "main.c"
   173 ;; Parameters:    Size  Location     Type
   174 ;;		None
   175 ;; Auto vars:     Size  Location     Type
   176 ;;  stato           2    0        int 
   177 ;;  old_button      1    0        unsigned char 
   178 ;;  button          1    0        unsigned char 
   179 ;; Return value:  Size  Location     Type
   180 ;;                  1    wreg      void 
   181 ;; Registers used:
   182 ;;		wreg, status,2
   183 ;; Tracked objects:
   184 ;;		On entry : B00/0
   185 ;;		On exit  : 0/0
   186 ;;		Unchanged: 0/0
   187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   188 ;;      Params:         0       0       0       0
   189 ;;      Locals:         0       0       0       0
   190 ;;      Temps:          0       0       0       0
   191 ;;      Totals:         0       0       0       0
   192 ;;Total ram usage:        0 bytes
   193 ;; Hardware stack levels required when called: 1
   194 ;; This function calls:
   195 ;;		Nothing
   196 ;; This function is called by:
   197 ;;		Startup code after reset
   198 ;; This function uses a non-reentrant model
   199 ;;
   200                           
   201     002E                     _main:	
   202                           ;psect for function _main
   203                           
   204     002E                     l618:	
   205                           ;incstack = 0
   206                           ; Regs used in _main: [wreg+status,2]
   207                           
   208                           
   209                           ;main.c: 25:     TRISA = 0x02;
   210     002E  3002               	movlw	2
   211     002F  1683               	bsf	3,5	;RP0=1, select bank1
   212     0030  1303               	bcf	3,6	;RP1=0, select bank1
   213     0031  0085               	movwf	5	;volatile
   214     0032                     l620:
   215                           
   216                           ;main.c: 26:     TRISB = 0x00;
   217     0032  0186               	clrf	6	;volatile
   218     0033                     l622:
   219                           
   220                           ;main.c: 27:     INTCON = 0xA0;
   221     0033  30A0               	movlw	160
   222     0034  008B               	movwf	11	;volatile
   223     0035                     l624:
   224                           
   225                           ;main.c: 28:     OPTION_REG = 0x87;
   226     0035  3087               	movlw	135
   227     0036  0081               	movwf	1	;volatile
   228     0037                     l626:
   229     0037                     l19:
   230     0037  280A               	ljmp	start
   231     0038                     __end_of_main:
   232                           
   233                           	psect	text1
   234     000E                     __ptext1:	
   235 ;; *************** function _ISR *****************
   236 ;; Defined at:
   237 ;;		line 45 in file "main.c"
   238 ;; Parameters:    Size  Location     Type
   239 ;;		None
   240 ;; Auto vars:     Size  Location     Type
   241 ;;		None
   242 ;; Return value:  Size  Location     Type
   243 ;;                  1    wreg      void 
   244 ;; Registers used:
   245 ;;		wreg, status,2, status,0
   246 ;; Tracked objects:
   247 ;;		On entry : 0/0
   248 ;;		On exit  : 0/0
   249 ;;		Unchanged: 0/0
   250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   251 ;;      Params:         0       0       0       0
   252 ;;      Locals:         0       0       0       0
   253 ;;      Temps:          3       0       0       0
   254 ;;      Totals:         3       0       0       0
   255 ;;Total ram usage:        3 bytes
   256 ;; Hardware stack levels used: 1
   257 ;; This function calls:
   258 ;;		Nothing
   259 ;; This function is called by:
   260 ;;		Interrupt level 1
   261 ;; This function uses a non-reentrant model
   262 ;;
   263                           
   264     000E                     _ISR:	
   265                           ;psect for function _ISR
   266                           
   267     000E                     i1l628:
   268                           
   269                           ;main.c: 47: if (INTCON & 0x02){
   270     000E  1C8B               	btfss	11,1	;volatile
   271     000F  2811               	goto	u1_21
   272     0010  2812               	goto	u1_20
   273     0011                     u1_21:
   274     0011  2825               	goto	i1l640
   275     0012                     u1_20:
   276     0012                     i1l630:
   277                           
   278                           ;main.c: 48:         INTCON &=~0x02;
   279     0012  30FD               	movlw	253
   280     0013  00F0               	movwf	??_ISR
   281     0014  0870               	movf	??_ISR,w
   282     0015  058B               	andwf	11,f	;volatile
   283                           
   284                           ;main.c: 49:         count++;
   285     0016  3001               	movlw	1
   286     0017  00F0               	movwf	??_ISR
   287     0018  0870               	movf	??_ISR,w
   288     0019  07F3               	addwf	_count,f
   289     001A                     i1l632:
   290                           
   291                           ;main.c: 50:         TMR0 = 131;
   292     001A  3083               	movlw	131
   293     001B  1283               	bcf	3,5	;RP0=0, select bank0
   294     001C  1303               	bcf	3,6	;RP1=0, select bank0
   295     001D  0081               	movwf	1	;volatile
   296     001E                     i1l634:
   297                           
   298                           ;main.c: 51:        if(count >=1){
   299     001E  0873               	movf	_count,w
   300     001F  1903               	btfsc	3,2
   301     0020  2822               	goto	u2_21
   302     0021  2823               	goto	u2_20
   303     0022                     u2_21:
   304     0022  2825               	goto	i1l640
   305     0023                     u2_20:
   306     0023                     i1l636:
   307                           
   308                           ;main.c: 52:             PORTB = ~ PORTB;
   309     0023  0986               	comf	6,f	;volatile
   310     0024                     i1l638:
   311                           
   312                           ;main.c: 53:             count = 0;
   313     0024  01F3               	clrf	_count
   314     0025                     i1l640:
   315                           
   316                           ;main.c: 57:  INTCON = 0xF0;
   317     0025  30F0               	movlw	240
   318     0026  008B               	movwf	11	;volatile
   319     0027                     i1l26:
   320     0027  0872               	movf	??_ISR+2,w
   321     0028  008A               	movwf	10
   322     0029  0E71               	swapf	??_ISR+1,w
   323     002A  0083               	movwf	3
   324     002B  0EFE               	swapf	btemp,f
   325     002C  0E7E               	swapf	btemp,w
   326     002D  0009               	retfie
   327     002E                     __end_of_ISR:
   328     007E                     btemp	set	126	;btemp
   329     007E                     wtemp0	set	126
   330                           
   331                           	psect	intentry
   332     0004                     __pintentry:	
   333                           ;incstack = 0
   334                           ; Regs used in _ISR: [wreg+status,2+status,0]
   335                           
   336     0004                     interrupt_function:
   337     007E                     saved_w	set	btemp
   338     0004  00FE               	movwf	btemp
   339     0005  0E03               	swapf	3,w
   340     0006  00F1               	movwf	??_ISR+1
   341     0007  080A               	movf	10,w
   342     0008  00F2               	movwf	??_ISR+2
   343     0009  280E               	ljmp	_ISR
   344                           
   345                           	psect	idloc
   346                           
   347                           ;Config register IDLOC0 @ 0x2000
   348                           ;	unspecified, using default values
   349     2000                     	org	8192
   350     2000  3FFF               	dw	16383
   351                           
   352                           ;Config register IDLOC1 @ 0x2001
   353                           ;	unspecified, using default values
   354     2001                     	org	8193
   355     2001  3FFF               	dw	16383
   356                           
   357                           ;Config register IDLOC2 @ 0x2002
   358                           ;	unspecified, using default values
   359     2002                     	org	8194
   360     2002  3FFF               	dw	16383
   361                           
   362                           ;Config register IDLOC3 @ 0x2003
   363                           ;	unspecified, using default values
   364     2003                     	org	8195
   365     2003  3FFF               	dw	16383
   366                           
   367                           	psect	config
   368                           
   369                           ;Config register CONFIG @ 0x2007
   370                           ;	Oscillator Selection bits
   371                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
   372                           ;	Watchdog Timer Enable bit
   373                           ;	WDTE = OFF, WDT disabled
   374                           ;	Power-up Timer Enable bit
   375                           ;	PWRTE = ON, PWRT enabled
   376                           ;	RA5/MCLR/VPP Pin Function Select bit
   377                           ;	MCLRE = ON, RA5/MCLR/VPP pin function is MCLR
   378                           ;	Brown-out Detect Enable bit
   379                           ;	BOREN = ON, BOD enabled
   380                           ;	Low-Voltage Programming Enable bit
   381                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
   382                           ;	Data EE Memory Code Protection bit
   383                           ;	CPD = OFF, Data memory code protection off
   384                           ;	Flash Program Memory Code Protection bit
   385                           ;	CP = OFF, Code protection off
   386     2007                     	org	8199
   387     2007  3F62               	dw	16226

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       4       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0       4      10        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Oct 24 14:44:59 2022

                     l19 0037                      l620 0032                      l622 0033  
                    l624 0035                      l626 0037                      l618 002E  
                    _ISR 000E                     ?_ISR 0070                     i1l26 0027  
                   _TMR0 0001                     u1_20 0012                     u1_21 0011  
                   u2_20 0023                     u2_21 0022                     _main 002E  
                   btemp 007E                     start 000A                    ??_ISR 0070  
                  ?_main 0070                    i1l630 0012                    i1l632 001A  
                  i1l640 0025                    i1l634 001E                    i1l636 0023  
                  i1l628 000E                    i1l638 0024                    _PORTB 0006  
                  _TRISA 0085                    _TRISB 0086                    _count 0073  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000B             __end_of_main 0038                   ??_main 0073  
                 _INTCON 000B                   saved_w 007E  __end_of__initialization 000C  
         __pcstackCOMMON 0070               __pmaintext 002E               __pintentry 0004  
                __ptext1 000E     end_of_initialization 000C      start_initialization 000B  
            __end_of_ISR 002E              __pbssCOMMON 0073                ___latbits 0000  
      interrupt_function 0004                 intlevel1 0000               _OPTION_REG 0081  
