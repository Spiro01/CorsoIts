

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Jan 26 17:35:53 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28     0000                     
    29                           ; Version 2.40
    30                           ; Generated 17/11/2021 GMT
    31                           ; 
    32                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F877A Definitions
    62                           ; 
    63                           ; SFR Addresses
    64     0000                     	;# 
    65     0001                     	;# 
    66     0002                     	;# 
    67     0003                     	;# 
    68     0004                     	;# 
    69     0005                     	;# 
    70     0006                     	;# 
    71     0007                     	;# 
    72     0008                     	;# 
    73     0009                     	;# 
    74     000A                     	;# 
    75     000B                     	;# 
    76     000C                     	;# 
    77     000D                     	;# 
    78     000E                     	;# 
    79     000E                     	;# 
    80     000F                     	;# 
    81     0010                     	;# 
    82     0011                     	;# 
    83     0012                     	;# 
    84     0013                     	;# 
    85     0014                     	;# 
    86     0015                     	;# 
    87     0015                     	;# 
    88     0016                     	;# 
    89     0017                     	;# 
    90     0018                     	;# 
    91     0019                     	;# 
    92     001A                     	;# 
    93     001B                     	;# 
    94     001B                     	;# 
    95     001C                     	;# 
    96     001D                     	;# 
    97     001E                     	;# 
    98     001F                     	;# 
    99     0081                     	;# 
   100     0085                     	;# 
   101     0086                     	;# 
   102     0087                     	;# 
   103     0088                     	;# 
   104     0089                     	;# 
   105     008C                     	;# 
   106     008D                     	;# 
   107     008E                     	;# 
   108     0091                     	;# 
   109     0092                     	;# 
   110     0093                     	;# 
   111     0094                     	;# 
   112     0098                     	;# 
   113     0099                     	;# 
   114     009C                     	;# 
   115     009D                     	;# 
   116     009E                     	;# 
   117     009F                     	;# 
   118     010C                     	;# 
   119     010D                     	;# 
   120     010E                     	;# 
   121     010F                     	;# 
   122     018C                     	;# 
   123     018D                     	;# 
   124     0000                     	;# 
   125     0001                     	;# 
   126     0002                     	;# 
   127     0003                     	;# 
   128     0004                     	;# 
   129     0005                     	;# 
   130     0006                     	;# 
   131     0007                     	;# 
   132     0008                     	;# 
   133     0009                     	;# 
   134     000A                     	;# 
   135     000B                     	;# 
   136     000C                     	;# 
   137     000D                     	;# 
   138     000E                     	;# 
   139     000E                     	;# 
   140     000F                     	;# 
   141     0010                     	;# 
   142     0011                     	;# 
   143     0012                     	;# 
   144     0013                     	;# 
   145     0014                     	;# 
   146     0015                     	;# 
   147     0015                     	;# 
   148     0016                     	;# 
   149     0017                     	;# 
   150     0018                     	;# 
   151     0019                     	;# 
   152     001A                     	;# 
   153     001B                     	;# 
   154     001B                     	;# 
   155     001C                     	;# 
   156     001D                     	;# 
   157     001E                     	;# 
   158     001F                     	;# 
   159     0081                     	;# 
   160     0085                     	;# 
   161     0086                     	;# 
   162     0087                     	;# 
   163     0088                     	;# 
   164     0089                     	;# 
   165     008C                     	;# 
   166     008D                     	;# 
   167     008E                     	;# 
   168     0091                     	;# 
   169     0092                     	;# 
   170     0093                     	;# 
   171     0094                     	;# 
   172     0098                     	;# 
   173     0099                     	;# 
   174     009C                     	;# 
   175     009D                     	;# 
   176     009E                     	;# 
   177     009F                     	;# 
   178     010C                     	;# 
   179     010D                     	;# 
   180     010E                     	;# 
   181     010F                     	;# 
   182     018C                     	;# 
   183     018D                     	;# 
   184     0000                     	;# 
   185     0001                     	;# 
   186     0002                     	;# 
   187     0003                     	;# 
   188     0004                     	;# 
   189     0005                     	;# 
   190     0006                     	;# 
   191     0007                     	;# 
   192     0008                     	;# 
   193     0009                     	;# 
   194     000A                     	;# 
   195     000B                     	;# 
   196     000C                     	;# 
   197     000D                     	;# 
   198     000E                     	;# 
   199     000E                     	;# 
   200     000F                     	;# 
   201     0010                     	;# 
   202     0011                     	;# 
   203     0012                     	;# 
   204     0013                     	;# 
   205     0014                     	;# 
   206     0015                     	;# 
   207     0015                     	;# 
   208     0016                     	;# 
   209     0017                     	;# 
   210     0018                     	;# 
   211     0019                     	;# 
   212     001A                     	;# 
   213     001B                     	;# 
   214     001B                     	;# 
   215     001C                     	;# 
   216     001D                     	;# 
   217     001E                     	;# 
   218     001F                     	;# 
   219     0081                     	;# 
   220     0085                     	;# 
   221     0086                     	;# 
   222     0087                     	;# 
   223     0088                     	;# 
   224     0089                     	;# 
   225     008C                     	;# 
   226     008D                     	;# 
   227     008E                     	;# 
   228     0091                     	;# 
   229     0092                     	;# 
   230     0093                     	;# 
   231     0094                     	;# 
   232     0098                     	;# 
   233     0099                     	;# 
   234     009C                     	;# 
   235     009D                     	;# 
   236     009E                     	;# 
   237     009F                     	;# 
   238     010C                     	;# 
   239     010D                     	;# 
   240     010E                     	;# 
   241     010F                     	;# 
   242     018C                     	;# 
   243     018D                     	;# 
   244     0000                     	;# 
   245     0001                     	;# 
   246     0002                     	;# 
   247     0003                     	;# 
   248     0004                     	;# 
   249     0005                     	;# 
   250     0006                     	;# 
   251     0007                     	;# 
   252     0008                     	;# 
   253     0009                     	;# 
   254     000A                     	;# 
   255     000B                     	;# 
   256     000C                     	;# 
   257     000D                     	;# 
   258     000E                     	;# 
   259     000E                     	;# 
   260     000F                     	;# 
   261     0010                     	;# 
   262     0011                     	;# 
   263     0012                     	;# 
   264     0013                     	;# 
   265     0014                     	;# 
   266     0015                     	;# 
   267     0015                     	;# 
   268     0016                     	;# 
   269     0017                     	;# 
   270     0018                     	;# 
   271     0019                     	;# 
   272     001A                     	;# 
   273     001B                     	;# 
   274     001B                     	;# 
   275     001C                     	;# 
   276     001D                     	;# 
   277     001E                     	;# 
   278     001F                     	;# 
   279     0081                     	;# 
   280     0085                     	;# 
   281     0086                     	;# 
   282     0087                     	;# 
   283     0088                     	;# 
   284     0089                     	;# 
   285     008C                     	;# 
   286     008D                     	;# 
   287     008E                     	;# 
   288     0091                     	;# 
   289     0092                     	;# 
   290     0093                     	;# 
   291     0094                     	;# 
   292     0098                     	;# 
   293     0099                     	;# 
   294     009C                     	;# 
   295     009D                     	;# 
   296     009E                     	;# 
   297     009F                     	;# 
   298     010C                     	;# 
   299     010D                     	;# 
   300     010E                     	;# 
   301     010F                     	;# 
   302     018C                     	;# 
   303     018D                     	;# 
   304     0000                     	;# 
   305     0001                     	;# 
   306     0002                     	;# 
   307     0003                     	;# 
   308     0004                     	;# 
   309     0005                     	;# 
   310     0006                     	;# 
   311     0007                     	;# 
   312     0008                     	;# 
   313     0009                     	;# 
   314     000A                     	;# 
   315     000B                     	;# 
   316     000C                     	;# 
   317     000D                     	;# 
   318     000E                     	;# 
   319     000E                     	;# 
   320     000F                     	;# 
   321     0010                     	;# 
   322     0011                     	;# 
   323     0012                     	;# 
   324     0013                     	;# 
   325     0014                     	;# 
   326     0015                     	;# 
   327     0015                     	;# 
   328     0016                     	;# 
   329     0017                     	;# 
   330     0018                     	;# 
   331     0019                     	;# 
   332     001A                     	;# 
   333     001B                     	;# 
   334     001B                     	;# 
   335     001C                     	;# 
   336     001D                     	;# 
   337     001E                     	;# 
   338     001F                     	;# 
   339     0081                     	;# 
   340     0085                     	;# 
   341     0086                     	;# 
   342     0087                     	;# 
   343     0088                     	;# 
   344     0089                     	;# 
   345     008C                     	;# 
   346     008D                     	;# 
   347     008E                     	;# 
   348     0091                     	;# 
   349     0092                     	;# 
   350     0093                     	;# 
   351     0094                     	;# 
   352     0098                     	;# 
   353     0099                     	;# 
   354     009C                     	;# 
   355     009D                     	;# 
   356     009E                     	;# 
   357     009F                     	;# 
   358     010C                     	;# 
   359     010D                     	;# 
   360     010E                     	;# 
   361     010F                     	;# 
   362     018C                     	;# 
   363     018D                     	;# 
   364     0000                     	;# 
   365     0001                     	;# 
   366     0002                     	;# 
   367     0003                     	;# 
   368     0004                     	;# 
   369     0005                     	;# 
   370     0006                     	;# 
   371     0007                     	;# 
   372     0008                     	;# 
   373     0009                     	;# 
   374     000A                     	;# 
   375     000B                     	;# 
   376     000C                     	;# 
   377     000D                     	;# 
   378     000E                     	;# 
   379     000E                     	;# 
   380     000F                     	;# 
   381     0010                     	;# 
   382     0011                     	;# 
   383     0012                     	;# 
   384     0013                     	;# 
   385     0014                     	;# 
   386     0015                     	;# 
   387     0015                     	;# 
   388     0016                     	;# 
   389     0017                     	;# 
   390     0018                     	;# 
   391     0019                     	;# 
   392     001A                     	;# 
   393     001B                     	;# 
   394     001B                     	;# 
   395     001C                     	;# 
   396     001D                     	;# 
   397     001E                     	;# 
   398     001F                     	;# 
   399     0081                     	;# 
   400     0085                     	;# 
   401     0086                     	;# 
   402     0087                     	;# 
   403     0088                     	;# 
   404     0089                     	;# 
   405     008C                     	;# 
   406     008D                     	;# 
   407     008E                     	;# 
   408     0091                     	;# 
   409     0092                     	;# 
   410     0093                     	;# 
   411     0094                     	;# 
   412     0098                     	;# 
   413     0099                     	;# 
   414     009C                     	;# 
   415     009D                     	;# 
   416     009E                     	;# 
   417     009F                     	;# 
   418     010C                     	;# 
   419     010D                     	;# 
   420     010E                     	;# 
   421     010F                     	;# 
   422     018C                     	;# 
   423     018D                     	;# 
   424     0000                     	;# 
   425     0001                     	;# 
   426     0002                     	;# 
   427     0003                     	;# 
   428     0004                     	;# 
   429     0005                     	;# 
   430     0006                     	;# 
   431     0007                     	;# 
   432     0008                     	;# 
   433     0009                     	;# 
   434     000A                     	;# 
   435     000B                     	;# 
   436     000C                     	;# 
   437     000D                     	;# 
   438     000E                     	;# 
   439     000E                     	;# 
   440     000F                     	;# 
   441     0010                     	;# 
   442     0011                     	;# 
   443     0012                     	;# 
   444     0013                     	;# 
   445     0014                     	;# 
   446     0015                     	;# 
   447     0015                     	;# 
   448     0016                     	;# 
   449     0017                     	;# 
   450     0018                     	;# 
   451     0019                     	;# 
   452     001A                     	;# 
   453     001B                     	;# 
   454     001B                     	;# 
   455     001C                     	;# 
   456     001D                     	;# 
   457     001E                     	;# 
   458     001F                     	;# 
   459     0081                     	;# 
   460     0085                     	;# 
   461     0086                     	;# 
   462     0087                     	;# 
   463     0088                     	;# 
   464     0089                     	;# 
   465     008C                     	;# 
   466     008D                     	;# 
   467     008E                     	;# 
   468     0091                     	;# 
   469     0092                     	;# 
   470     0093                     	;# 
   471     0094                     	;# 
   472     0098                     	;# 
   473     0099                     	;# 
   474     009C                     	;# 
   475     009D                     	;# 
   476     009E                     	;# 
   477     009F                     	;# 
   478     010C                     	;# 
   479     010D                     	;# 
   480     010E                     	;# 
   481     010F                     	;# 
   482     018C                     	;# 
   483     018D                     	;# 
   484                           
   485                           	psect	strings
   486     0300                     __pstrings:
   487     0300                     stringtab:
   488     0300                     __stringtab:
   489                           
   490                           ;	String table - string pointers are 1 byte each
   491     0300  1BFF               	btfsc	btemp+1,7
   492     0301  2B0A               	ljmp	stringcode
   493     0302  1383               	bcf	3,7
   494     0303  187F               	btfsc	btemp+1,0
   495     0304  1783               	bsf	3,7
   496     0305  0800               	movf	0,w
   497     0306  0A84               	incf	4,f
   498     0307  1903               	skipnz
   499     0308  0AFF               	incf	btemp+1,f
   500     0309  0008               	return
   501     030A                     stringcode:
   502     030A                     stringdir:
   503     030A  3003               	movlw	high stringdir
   504     030B  008A               	movwf	10
   505     030C  0804               	movf	4,w
   506     030D  0A84               	incf	4,f
   507     030E  0782               	addwf	2,f
   508     030F                     __stringbase:
   509     030F  3400               	retlw	0
   510     0310                     __end_of__stringtab:
   511     0310                     _keypad:
   512     0310  342A               	retlw	42
   513     0311  3407               	retlw	7
   514     0312  3404               	retlw	4
   515     0313  3401               	retlw	1
   516     0314  3400               	retlw	0
   517     0315  3408               	retlw	8
   518     0316  3405               	retlw	5
   519     0317  3402               	retlw	2
   520     0318  3423               	retlw	35
   521     0319  3409               	retlw	9
   522     031A  3406               	retlw	6
   523     031B  3403               	retlw	3
   524     031C                     __end_of_keypad:
   525     031C                     SevenSeg_Write@displayPattern:
   526     031C  34EE               	retlw	238
   527     031D  3428               	retlw	40
   528     031E  34CD               	retlw	205
   529     031F  346D               	retlw	109
   530     0320  342B               	retlw	43
   531     0321  3467               	retlw	103
   532     0322  34E7               	retlw	231
   533     0323  342C               	retlw	44
   534     0324  34EF               	retlw	239
   535     0325  346F               	retlw	111
   536     0326                     __end_ofSevenSeg_Write@displayPattern:
   537     0326                     main@Clear_Display_UART:
   538     0326  34A2               	retlw	162
   539     0327  34B3               	retlw	179
   540     0328  3401               	retlw	1
   541     0329  3415               	retlw	21
   542     032A  34FF               	retlw	255
   543     032B  3400               	retlw	0
   544     032C                     __end_ofmain@Clear_Display_UART:
   545     032C                     main@Led_On_UART:
   546     032C  3444               	retlw	68
   547     032D  3472               	retlw	114
   548     032E  3420               	retlw	32
   549     032F  342B               	retlw	43
   550     0330  34FF               	retlw	255
   551     0331  3400               	retlw	0
   552     0332                     __end_ofmain@Led_On_UART:
   553     0009                     _PORTEbits	set	9
   554     0008                     _PORTDbits	set	8
   555     001A                     _RCREG	set	26
   556     0006                     _PORTBbits	set	6
   557     0001                     _TMR0	set	1
   558     0019                     _TXREG	set	25
   559     000C                     _PIR1	set	12
   560     000B                     _INTCON	set	11
   561     0018                     _RCSTA	set	24
   562     0008                     _PORTD	set	8
   563     001E                     _ADRESH	set	30
   564     001F                     _ADCON0	set	31
   565     0006                     _PORTB	set	6
   566     005A                     _T0IF	set	90
   567     0065                     _RCIF	set	101
   568     0089                     _TRISE	set	137
   569     0081                     _OPTION_REG	set	129
   570     0087                     _TRISC	set	135
   571     008C                     _PIE1	set	140
   572     0099                     _SPBRG	set	153
   573     0098                     _TXSTA	set	152
   574     0086                     _TRISB	set	134
   575     0088                     _TRISD	set	136
   576     009E                     _ADRESL	set	158
   577     0085                     _TRISA	set	133
   578     009F                     _ADCON1	set	159
   579     0332                     STR_1:
   580     0332  3448               	retlw	72	;'H'
   581     0333  3465               	retlw	101	;'e'
   582     0334  346C               	retlw	108	;'l'
   583     0335  346C               	retlw	108	;'l'
   584     0336  346F               	retlw	111	;'o'
   585     0337  3420               	retlw	32	;' '
   586     0338  3457               	retlw	87	;'W'
   587     0339  346F               	retlw	111	;'o'
   588     033A  3472               	retlw	114	;'r'
   589     033B  346C               	retlw	108	;'l'
   590     033C  3464               	retlw	100	;'d'
   591     033D  3421               	retlw	33	;'!'
   592     033E  3400               	retlw	0
   593     0332                     
   594                           	psect	cinit
   595     0011                     start_initialization:	
   596                           ; #config settings
   597                           
   598     0011                     __initialization:
   599                           
   600                           ; Clear objects allocated to COMMON
   601     0011  01F7               	clrf	__pbssCOMMON& (0+127)
   602     0012  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   603     0013  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   604                           
   605                           ; Clear objects allocated to BANK0
   606     0014  1283               	bcf	3,5	;RP0=0, select bank0
   607     0015  1303               	bcf	3,6	;RP1=0, select bank0
   608     0016  01B9               	clrf	__pbssBANK0& (0+127)
   609     0017  01BA               	clrf	(__pbssBANK0+1)& (0+127)
   610     0018  01BB               	clrf	(__pbssBANK0+2)& (0+127)
   611     0019  01BC               	clrf	(__pbssBANK0+3)& (0+127)
   612     001A  01BD               	clrf	(__pbssBANK0+4)& (0+127)
   613     001B  01BE               	clrf	(__pbssBANK0+5)& (0+127)
   614     001C  01BF               	clrf	(__pbssBANK0+6)& (0+127)
   615     001D  01C0               	clrf	(__pbssBANK0+7)& (0+127)
   616     001E  01C1               	clrf	(__pbssBANK0+8)& (0+127)
   617     001F  01C2               	clrf	(__pbssBANK0+9)& (0+127)
   618     0020  01C3               	clrf	(__pbssBANK0+10)& (0+127)
   619     0021  01C4               	clrf	(__pbssBANK0+11)& (0+127)
   620     0022  01C5               	clrf	(__pbssBANK0+12)& (0+127)
   621     0023  01C6               	clrf	(__pbssBANK0+13)& (0+127)
   622     0024                     end_of_initialization:	
   623                           ;End of C runtime variable initialization code
   624                           
   625     0024                     __end_of__initialization:
   626     0024  0183               	clrf	3
   627     0025  120A  118A  2828   	ljmp	_main	;jump to C main() function
   628                           
   629                           	psect	bssCOMMON
   630     0077                     __pbssCOMMON:
   631     0077                     ISR@interruptCounter:
   632     0077                     	ds	2
   633     0079                     Numpad_Read@oldKeyVal:
   634     0079                     	ds	1
   635                           
   636                           	psect	bssBANK0
   637     0039                     __pbssBANK0:
   638     0039                     pid_controller@integral:
   639     0039                     	ds	4
   640     003D                     pid_controller@previous_error:
   641     003D                     	ds	4
   642     0041                     _i:
   643     0041                     	ds	1
   644     0042                     _old_button:
   645     0042                     	ds	1
   646     0043                     _button:
   647     0043                     	ds	1
   648     0044                     _received:
   649     0044                     	ds	1
   650     0045                     _dato:
   651     0045                     	ds	2
   652                           
   653                           	psect	cstackCOMMON
   654     0070                     __pcstackCOMMON:
   655     0070                     ?_Lcd_Init:
   656     0070                     ?_Lcd_Write_Char:	
   657                           ; 1 bytes @ 0x0
   658                           
   659     0070                     ?_Lcd_Write_String:	
   660                           ; 1 bytes @ 0x0
   661                           
   662     0070                     ?_Lcd_Clear:	
   663                           ; 1 bytes @ 0x0
   664                           
   665     0070                     ?_Numpad_Read:	
   666                           ; 1 bytes @ 0x0
   667                           
   668     0070                     ?_UART_TxChar:	
   669                           ; 1 bytes @ 0x0
   670                           
   671     0070                     ?_main:	
   672                           ; 1 bytes @ 0x0
   673                           
   674     0070                     ?_ISR:	
   675                           ; 1 bytes @ 0x0
   676                           
   677     0070                     ??_ISR:	
   678                           ; 1 bytes @ 0x0
   679                           
   680     0070                     ?_Lcd_Port:	
   681                           ; 1 bytes @ 0x0
   682                           
   683     0070                     ?_Lcd_Cmd:	
   684                           ; 1 bytes @ 0x0
   685                           
   686                           
   687                           ; 1 bytes @ 0x0
   688     0070                     	ds	4
   689     0074                     ?_isEqual:
   690     0074                     ??_Numpad_Read:	
   691                           ; 1 bytes @ 0x4
   692                           
   693     0074                     ??_UART_TxChar:	
   694                           ; 1 bytes @ 0x4
   695                           
   696     0074                     ??_Lcd_Port:	
   697                           ; 1 bytes @ 0x4
   698                           
   699     0074                     ??___aldiv:	
   700                           ; 1 bytes @ 0x4
   701                           
   702     0074                     isEqual@array2:	
   703                           ; 1 bytes @ 0x4
   704                           
   705     0074                     Lcd_Port@a:	
   706                           ; 1 bytes @ 0x4
   707                           
   708                           
   709                           ; 1 bytes @ 0x4
   710     0074                     	ds	1
   711     0075                     ??_Lcd_Write_Char:
   712     0075                     ??_isEqual:	
   713                           ; 1 bytes @ 0x5
   714                           
   715     0075                     ??_Lcd_Cmd:	
   716                           ; 1 bytes @ 0x5
   717                           
   718     0075                     UART_TxChar@ch:	
   719                           ; 1 bytes @ 0x5
   720                           
   721                           
   722                           ; 1 bytes @ 0x5
   723     0075                     	ds	1
   724     0076                     ??_Lcd_Write_String:
   725     0076                     ??_UART_TxString:	
   726                           ; 1 bytes @ 0x6
   727                           
   728                           
   729                           ; 1 bytes @ 0x6
   730     0076                     	ds	1
   731     0077                     ??_Lcd_Clear:
   732                           
   733                           	psect	cstackBANK0
   734     0020                     __pcstackBANK0:	
   735                           ; 1 bytes @ 0x7
   736                           
   737     0020                     ?_UART_TxString:
   738     0020                     ?___aldiv:	
   739                           ; 1 bytes @ 0x0
   740                           
   741     0020                     Numpad_Read@currentKey:	
   742                           ; 4 bytes @ 0x0
   743                           
   744     0020                     isEqual@array1:	
   745                           ; 1 bytes @ 0x0
   746                           
   747     0020                     Lcd_Cmd@a:	
   748                           ; 1 bytes @ 0x0
   749                           
   750     0020                     Lcd_Write_Char@temp:	
   751                           ; 1 bytes @ 0x0
   752                           
   753     0020                     UART_TxString@str:	
   754                           ; 1 bytes @ 0x0
   755                           
   756     0020                     ___aldiv@divisor:	
   757                           ; 2 bytes @ 0x0
   758                           
   759                           
   760                           ; 4 bytes @ 0x0
   761     0020                     	ds	1
   762     0021                     ??_Lcd_Init:
   763     0021                     Numpad_Read@currentKeyVal:	
   764                           ; 1 bytes @ 0x1
   765                           
   766     0021                     isEqual@j:	
   767                           ; 1 bytes @ 0x1
   768                           
   769     0021                     Lcd_Write_Char@y:	
   770                           ; 1 bytes @ 0x1
   771                           
   772                           
   773                           ; 1 bytes @ 0x1
   774     0021                     	ds	1
   775     0022                     Numpad_Read@colScan:
   776     0022                     UART_TxString@i:	
   777                           ; 1 bytes @ 0x2
   778                           
   779     0022                     Lcd_Write_Char@a:	
   780                           ; 1 bytes @ 0x2
   781                           
   782                           
   783                           ; 1 bytes @ 0x2
   784     0022                     	ds	1
   785     0023                     Numpad_Read@rowScan:
   786     0023                     Lcd_Write_String@i:	
   787                           ; 1 bytes @ 0x3
   788                           
   789                           
   790                           ; 2 bytes @ 0x3
   791     0023                     	ds	1
   792     0024                     ___aldiv@dividend:
   793                           
   794                           ; 4 bytes @ 0x4
   795     0024                     	ds	1
   796     0025                     Lcd_Write_String@a:
   797                           
   798                           ; 1 bytes @ 0x5
   799     0025                     	ds	3
   800     0028                     ___aldiv@counter:
   801                           
   802                           ; 1 bytes @ 0x8
   803     0028                     	ds	1
   804     0029                     ___aldiv@sign:
   805                           
   806                           ; 1 bytes @ 0x9
   807     0029                     	ds	1
   808     002A                     ___aldiv@quotient:
   809                           
   810                           ; 4 bytes @ 0xA
   811     002A                     	ds	4
   812     002E                     ?_UART_init:
   813     002E                     UART_init@baudrate:	
   814                           ; 1 bytes @ 0xE
   815                           
   816                           
   817                           ; 4 bytes @ 0xE
   818     002E                     	ds	4
   819     0032                     ??_UART_init:
   820                           
   821                           ; 1 bytes @ 0x12
   822     0032                     	ds	4
   823     0036                     ??_main:
   824                           
   825                           ; 1 bytes @ 0x16
   826     0036                     	ds	2
   827     0038                     main@numpadSelection:
   828                           
   829                           ; 1 bytes @ 0x18
   830     0038                     	ds	1
   831                           
   832                           	psect	maintext
   833     0028                     __pmaintext:	
   834 ;;
   835 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   836 ;;
   837 ;; *************** function _main *****************
   838 ;; Defined at:
   839 ;;		line 29 in file "main.c"
   840 ;; Parameters:    Size  Location     Type
   841 ;;		None
   842 ;; Auto vars:     Size  Location     Type
   843 ;;  numpadSelect    1   24[BANK0 ] unsigned char 
   844 ;; Return value:  Size  Location     Type
   845 ;;                  1    wreg      void 
   846 ;; Registers used:
   847 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   848 ;; Tracked objects:
   849 ;;		On entry : B00/0
   850 ;;		On exit  : 0/0
   851 ;;		Unchanged: 0/0
   852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   853 ;;      Params:         0       0       0       0       0
   854 ;;      Locals:         0       1       0       0       0
   855 ;;      Temps:          0       2       0       0       0
   856 ;;      Totals:         0       3       0       0       0
   857 ;;Total ram usage:        3 bytes
   858 ;; Hardware stack levels required when called: 4
   859 ;; This function calls:
   860 ;;		_Lcd_Clear
   861 ;;		_Lcd_Init
   862 ;;		_Lcd_Write_Char
   863 ;;		_Lcd_Write_String
   864 ;;		_Numpad_Read
   865 ;;		_UART_TxChar
   866 ;;		_UART_TxString
   867 ;;		_UART_init
   868 ;;		_isEqual
   869 ;; This function is called by:
   870 ;;		Startup code after reset
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           
   874     0028                     _main:	
   875                           ;psect for function _main
   876                           
   877     0028                     l2308:	
   878                           ;incstack = 0
   879                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   880                           
   881                           
   882                           ;main.c: 30:     TRISB &= ~0x80;
   883     0028  307F               	movlw	127
   884     0029  1283               	bcf	3,5	;RP0=0, select bank0
   885     002A  1303               	bcf	3,6	;RP1=0, select bank0
   886     002B  00B6               	movwf	??_main
   887     002C  0836               	movf	??_main,w
   888     002D  1683               	bsf	3,5	;RP0=1, select bank1
   889     002E  1303               	bcf	3,6	;RP1=0, select bank1
   890     002F  0586               	andwf	6,f	;volatile
   891     0030                     l2310:
   892                           
   893                           ;main.c: 31:     PORTB &= ~0xff;
   894     0030  1283               	bcf	3,5	;RP0=0, select bank0
   895     0031  1303               	bcf	3,6	;RP1=0, select bank0
   896     0032  0186               	clrf	6	;volatile
   897     0033                     l2312:
   898                           
   899                           ;main.c: 32:     INTCON |= 0x80;
   900     0033  178B               	bsf	11,7	;volatile
   901     0034                     l2314:
   902                           
   903                           ;main.c: 33:     OPTION_REG |= 0x85;
   904     0034  3085               	movlw	133
   905     0035  00B6               	movwf	??_main
   906     0036  0836               	movf	??_main,w
   907     0037  1683               	bsf	3,5	;RP0=1, select bank1
   908     0038  1303               	bcf	3,6	;RP1=0, select bank1
   909     0039  0481               	iorwf	1,f	;volatile
   910     003A                     l2316:
   911                           
   912                           ;main.c: 34:     UART_init(115200);
   913     003A  3000               	movlw	0
   914     003B  1283               	bcf	3,5	;RP0=0, select bank0
   915     003C  1303               	bcf	3,6	;RP1=0, select bank0
   916     003D  00B1               	movwf	UART_init@baudrate+3
   917     003E  3001               	movlw	1
   918     003F  00B0               	movwf	UART_init@baudrate+2
   919     0040  30C2               	movlw	194
   920     0041  00AF               	movwf	UART_init@baudrate+1
   921     0042  3000               	movlw	0
   922     0043  00AE               	movwf	UART_init@baudrate
   923     0044  120A  118A  233F  120A  118A  	fcall	_UART_init
   924     0049                     l2318:
   925                           
   926                           ;main.c: 35:     Lcd_Init();
   927     0049  120A  118A  223E  120A  118A  	fcall	_Lcd_Init
   928     004E                     l2320:
   929     004E                     l2322:
   930                           
   931                           ;main.c: 43:         numpadSelection = Numpad_Read();
   932     004E  120A  118A  21B1  120A  118A  	fcall	_Numpad_Read
   933     0053  1283               	bcf	3,5	;RP0=0, select bank0
   934     0054  1303               	bcf	3,6	;RP1=0, select bank0
   935     0055  00B8               	movwf	main@numpadSelection
   936                           
   937                           ;main.c: 45:         switch (numpadSelection) {
   938     0056  2872               	goto	l2332
   939     0057                     l2324:
   940                           
   941                           ;main.c: 47:                 UART_TxString("Hello World!");
   942     0057  3023               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   943     0058  00A0               	movwf	UART_TxString@str
   944     0059  3080               	movlw	128
   945     005A  00A1               	movwf	UART_TxString@str+1
   946     005B  120A  118A  23DE  120A  118A  	fcall	_UART_TxString
   947                           
   948                           ;main.c: 48:                 break;
   949     0060  2885               	goto	l169
   950     0061                     l2326:
   951                           
   952                           ;main.c: 50:                 UART_TxChar(7);
   953     0061  3007               	movlw	7
   954     0062  120A  118A  2475  120A  118A  	fcall	_UART_TxChar
   955                           
   956                           ;main.c: 51:                 break;
   957     0067  2885               	goto	l169
   958     0068                     l2328:
   959                           
   960                           ;main.c: 53:                 UART_TxString(Led_On_UART);
   961     0068  301D               	movlw	(low ((main@Led_On_UART-__stringbase)| (0+32768)))& (0+255)
   962     0069  00A0               	movwf	UART_TxString@str
   963     006A  3080               	movlw	128
   964     006B  00A1               	movwf	UART_TxString@str+1
   965     006C  120A  118A  23DE  120A  118A  	fcall	_UART_TxString
   966                           
   967                           ;main.c: 54:                 break;
   968     0071  2885               	goto	l169
   969     0072                     l2332:
   970     0072  0838               	movf	main@numpadSelection,w
   971     0073  00B6               	movwf	??_main
   972     0074  01B7               	clrf	??_main+1
   973                           
   974                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   975                           ; Switch size 1, requested type "simple"
   976                           ; Number of cases is 1, Range of values is 0 to 0
   977                           ; switch strategies available:
   978                           ; Name         Instructions Cycles
   979                           ; simple_byte            4     3 (average)
   980                           ; direct_byte           11     8 (fixed)
   981                           ; jumptable            260     6 (fixed)
   982                           ;	Chosen strategy is simple_byte
   983     0075  0837               	movf	??_main+1,w
   984     0076  3A00               	xorlw	0	; case 0
   985     0077  1903               	skipnz
   986     0078  287A               	goto	l2414
   987     0079  2885               	goto	l169
   988     007A                     l2414:
   989                           
   990                           ; Switch size 1, requested type "simple"
   991                           ; Number of cases is 3, Range of values is 1 to 9
   992                           ; switch strategies available:
   993                           ; Name         Instructions Cycles
   994                           ; simple_byte           10     6 (average)
   995                           ; direct_byte           38    11 (fixed)
   996                           ; jumptable            263     9 (fixed)
   997                           ;	Chosen strategy is simple_byte
   998     007A  0836               	movf	??_main,w
   999     007B  3A01               	xorlw	1	; case 1
  1000     007C  1903               	skipnz
  1001     007D  2857               	goto	l2324
  1002     007E  3A04               	xorlw	4	; case 5
  1003     007F  1903               	skipnz
  1004     0080  2861               	goto	l2326
  1005     0081  3A0C               	xorlw	12	; case 9
  1006     0082  1903               	skipnz
  1007     0083  2868               	goto	l2328
  1008     0084  2885               	goto	l169
  1009     0085                     l169:
  1010                           
  1011                           ;main.c: 58:         TRISB |= 0x02;
  1012     0085  1683               	bsf	3,5	;RP0=1, select bank1
  1013     0086  1303               	bcf	3,6	;RP1=0, select bank1
  1014     0087  1486               	bsf	6,1	;volatile
  1015     0088                     l2334:
  1016                           
  1017                           ;main.c: 60:         if (received) {
  1018     0088  1283               	bcf	3,5	;RP0=0, select bank0
  1019     0089  1303               	bcf	3,6	;RP1=0, select bank0
  1020     008A  0844               	movf	_received,w
  1021     008B  1903               	btfsc	3,2
  1022     008C  288E               	goto	u2261
  1023     008D  288F               	goto	u2260
  1024     008E                     u2261:
  1025     008E  28DB               	goto	l2360
  1026     008F                     u2260:
  1027     008F                     l2336:
  1028                           
  1029                           ;main.c: 61:             if (dato[0] == 7) {
  1030     008F  3007               	movlw	7
  1031     0090  0645               	xorwf	_dato,w
  1032     0091  1D03               	btfss	3,2
  1033     0092  2894               	goto	u2271
  1034     0093  2895               	goto	u2270
  1035     0094                     u2271:
  1036     0094  289C               	goto	l2340
  1037     0095                     u2270:
  1038     0095                     l2338:
  1039                           
  1040                           ;main.c: 62:                 Lcd_Write_Char('7');
  1041     0095  3037               	movlw	55
  1042     0096  120A  118A  237C  120A  118A  	fcall	_Lcd_Write_Char
  1043                           
  1044                           ;main.c: 63:             } else if (isEqual(dato, Led_On_UART)) {
  1045     009B  28D7               	goto	l2356
  1046     009C                     l2340:
  1047     009C  301D               	movlw	(low ((main@Led_On_UART-__stringbase)| (0+32768)))& (0+255)
  1048     009D  00F4               	movwf	isEqual@array2
  1049     009E  3045               	movlw	(low (_dato| 0))& (0+255)
  1050     009F  120A  118A  23B1  120A  118A  	fcall	_isEqual
  1051     00A4  3A00               	xorlw	0
  1052     00A5  1903               	skipnz
  1053     00A6  28A8               	goto	u2281
  1054     00A7  28A9               	goto	u2280
  1055     00A8                     u2281:
  1056     00A8  28B0               	goto	l2348
  1057     00A9                     u2280:
  1058     00A9                     l2342:
  1059                           
  1060                           ;main.c: 64:                 PORTB |= 0x80;
  1061     00A9  1283               	bcf	3,5	;RP0=0, select bank0
  1062     00AA  1303               	bcf	3,6	;RP1=0, select bank0
  1063     00AB  1786               	bsf	6,7	;volatile
  1064     00AC                     l2344:
  1065                           
  1066                           ;main.c: 65:                 TMR0 = 131;
  1067     00AC  3083               	movlw	131
  1068     00AD  0081               	movwf	1	;volatile
  1069     00AE                     l2346:
  1070                           
  1071                           ;main.c: 66:                 INTCON |= 0x20;
  1072     00AE  168B               	bsf	11,5	;volatile
  1073                           
  1074                           ;main.c: 67:             } else if (isEqual(dato, "Hello World!")) {
  1075     00AF  28D7               	goto	l2356
  1076     00B0                     l2348:
  1077     00B0  3023               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1078     00B1  00F4               	movwf	isEqual@array2
  1079     00B2  3045               	movlw	(low (_dato| 0))& (0+255)
  1080     00B3  120A  118A  23B1  120A  118A  	fcall	_isEqual
  1081     00B8  3A00               	xorlw	0
  1082     00B9  1903               	skipnz
  1083     00BA  28BC               	goto	u2291
  1084     00BB  28BD               	goto	u2290
  1085     00BC                     u2291:
  1086     00BC  28C4               	goto	l2352
  1087     00BD                     u2290:
  1088     00BD                     l2350:
  1089                           
  1090                           ;main.c: 68:                 Lcd_Write_String(dato);
  1091     00BD  3045               	movlw	(low (_dato| 0))& (0+255)
  1092     00BE  120A  118A  240B  120A  118A  	fcall	_Lcd_Write_String
  1093                           
  1094                           ;main.c: 69:             } else if (isEqual(dato, Clear_Display_UART)) {
  1095     00C3  28D7               	goto	l2356
  1096     00C4                     l2352:
  1097     00C4  3017               	movlw	(low ((main@Clear_Display_UART-__stringbase)| (0+32768)))& (0+255)
  1098     00C5  00F4               	movwf	isEqual@array2
  1099     00C6  3045               	movlw	(low (_dato| 0))& (0+255)
  1100     00C7  120A  118A  23B1  120A  118A  	fcall	_isEqual
  1101     00CC  3A00               	xorlw	0
  1102     00CD  1903               	skipnz
  1103     00CE  28D0               	goto	u2301
  1104     00CF  28D1               	goto	u2300
  1105     00D0                     u2301:
  1106     00D0  28D7               	goto	l177
  1107     00D1                     u2300:
  1108     00D1                     l2354:
  1109                           
  1110                           ;main.c: 70:                 Lcd_Clear();
  1111     00D1  120A  118A  2489  120A  118A  	fcall	_Lcd_Clear
  1112     00D6  28D7               	goto	l2356
  1113     00D7                     l177:
  1114     00D7                     l2356:
  1115                           
  1116                           ;main.c: 72:             i = 0;
  1117     00D7  1283               	bcf	3,5	;RP0=0, select bank0
  1118     00D8  1303               	bcf	3,6	;RP1=0, select bank0
  1119     00D9  01C1               	clrf	_i
  1120     00DA                     l2358:
  1121                           
  1122                           ;main.c: 73:             received = 0;
  1123     00DA  01C4               	clrf	_received
  1124     00DB                     l2360:
  1125                           
  1126                           ;main.c: 76:         button = PORTBbits.RB1;
  1127     00DB  3000               	movlw	0
  1128     00DC  1886               	btfsc	6,1	;volatile
  1129     00DD  3001               	movlw	1
  1130     00DE  00C3               	movwf	_button
  1131     00DF                     l2362:
  1132                           
  1133                           ;main.c: 77:         if (!button && old_button) {
  1134     00DF  0843               	movf	_button,w
  1135     00E0  1D03               	btfss	3,2
  1136     00E1  28E3               	goto	u2311
  1137     00E2  28E4               	goto	u2310
  1138     00E3                     u2311:
  1139     00E3  290C               	goto	l2376
  1140     00E4                     u2310:
  1141     00E4                     l2364:
  1142     00E4  0842               	movf	_old_button,w
  1143     00E5  1903               	btfsc	3,2
  1144     00E6  28E8               	goto	u2321
  1145     00E7  28E9               	goto	u2320
  1146     00E8                     u2321:
  1147     00E8  290C               	goto	l2376
  1148     00E9                     u2320:
  1149     00E9                     l2366:
  1150                           
  1151                           ;main.c: 78:             _delay((unsigned long)((20)*(20*1000000/4000.0)));
  1152     00E9  3082               	movlw	130
  1153     00EA  1283               	bcf	3,5	;RP0=0, select bank0
  1154     00EB  1303               	bcf	3,6	;RP1=0, select bank0
  1155     00EC  00B7               	movwf	??_main+1
  1156     00ED  30DD               	movlw	221
  1157     00EE  00B6               	movwf	??_main
  1158     00EF                     u2357:
  1159     00EF  0BB6               	decfsz	??_main,f
  1160     00F0  28EF               	goto	u2357
  1161     00F1  0BB7               	decfsz	??_main+1,f
  1162     00F2  28EF               	goto	u2357
  1163     00F3                     l2368:
  1164                           
  1165                           ;main.c: 79:             button = PORTBbits.RB1;
  1166     00F3  3000               	movlw	0
  1167     00F4  1283               	bcf	3,5	;RP0=0, select bank0
  1168     00F5  1303               	bcf	3,6	;RP1=0, select bank0
  1169     00F6  1886               	btfsc	6,1	;volatile
  1170     00F7  3001               	movlw	1
  1171     00F8  00C3               	movwf	_button
  1172     00F9                     l2370:
  1173                           
  1174                           ;main.c: 80:             if (!button && old_button)
  1175     00F9  0843               	movf	_button,w
  1176     00FA  1D03               	btfss	3,2
  1177     00FB  28FD               	goto	u2331
  1178     00FC  28FE               	goto	u2330
  1179     00FD                     u2331:
  1180     00FD  290C               	goto	l2376
  1181     00FE                     u2330:
  1182     00FE                     l2372:
  1183     00FE  0842               	movf	_old_button,w
  1184     00FF  1903               	btfsc	3,2
  1185     0100  2902               	goto	u2341
  1186     0101  2903               	goto	u2340
  1187     0102                     u2341:
  1188     0102  290C               	goto	l2376
  1189     0103                     u2340:
  1190     0103                     l2374:
  1191                           
  1192                           ;main.c: 81:                 UART_TxString(Clear_Display_UART);
  1193     0103  3017               	movlw	(low ((main@Clear_Display_UART-__stringbase)| (0+32768)))& (0+255)
  1194     0104  00A0               	movwf	UART_TxString@str
  1195     0105  3080               	movlw	128
  1196     0106  00A1               	movwf	UART_TxString@str+1
  1197     0107  120A  118A  23DE  120A  118A  	fcall	_UART_TxString
  1198     010C                     l2376:
  1199                           
  1200                           ;main.c: 83:         old_button = button;
  1201     010C  1283               	bcf	3,5	;RP0=0, select bank0
  1202     010D  1303               	bcf	3,6	;RP1=0, select bank0
  1203     010E  0843               	movf	_button,w
  1204     010F  00C2               	movwf	_old_button
  1205     0110  284E               	goto	l2322
  1206     0111  120A  118A  280E   	ljmp	start
  1207     0114                     __end_of_main:
  1208                           
  1209                           	psect	text1
  1210     03B1                     __ptext1:	
  1211 ;; *************** function _isEqual *****************
  1212 ;; Defined at:
  1213 ;;		line 108 in file "main.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;  array1          1    wreg     PTR unsigned char 
  1216 ;;		 -> dato(2), 
  1217 ;;  array2          1    4[COMMON] PTR unsigned char 
  1218 ;;		 -> main@Clear_Display_UART(6), STR_3(13), main@Led_On_UART(6), 
  1219 ;; Auto vars:     Size  Location     Type
  1220 ;;  array1          1    0[BANK0 ] PTR unsigned char 
  1221 ;;		 -> dato(2), 
  1222 ;;  j               1    1[BANK0 ] unsigned char 
  1223 ;; Return value:  Size  Location     Type
  1224 ;;                  1    wreg      unsigned char 
  1225 ;; Registers used:
  1226 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1227 ;; Tracked objects:
  1228 ;;		On entry : 0/0
  1229 ;;		On exit  : 0/0
  1230 ;;		Unchanged: 0/0
  1231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1232 ;;      Params:         1       0       0       0       0
  1233 ;;      Locals:         0       2       0       0       0
  1234 ;;      Temps:          2       0       0       0       0
  1235 ;;      Totals:         3       2       0       0       0
  1236 ;;Total ram usage:        5 bytes
  1237 ;; Hardware stack levels used: 2
  1238 ;; Hardware stack levels required when called: 1
  1239 ;; This function calls:
  1240 ;;		Nothing
  1241 ;; This function is called by:
  1242 ;;		_main
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246     03B1                     _isEqual:	
  1247                           ;psect for function _isEqual
  1248                           
  1249                           
  1250                           ;incstack = 0
  1251                           ; Regs used in _isEqual: [wreg-fsr0h+status,2+status,0+pclath]
  1252                           ;isEqual@array1 stored from wreg
  1253     03B1  1283               	bcf	3,5	;RP0=0, select bank0
  1254     03B2  1303               	bcf	3,6	;RP1=0, select bank0
  1255     03B3  00A0               	movwf	isEqual@array1
  1256     03B4                     l2238:
  1257                           
  1258                           ;main.c: 109:     char j = 0;
  1259     03B4  01A1               	clrf	isEqual@j
  1260                           
  1261                           ;main.c: 110:     while (array1[j] != '\0') {
  1262     03B5  2BD1               	goto	l2248
  1263     03B6                     l2240:
  1264                           
  1265                           ;main.c: 111:         if (array1[j] == array2[j]) {
  1266     03B6  0821               	movf	isEqual@j,w
  1267     03B7  0774               	addwf	isEqual@array2,w
  1268     03B8  0084               	movwf	4
  1269     03B9  120A  118A  230A  120A  118A  	fcall	stringdir
  1270     03BE  00F5               	movwf	??_isEqual
  1271     03BF  0821               	movf	isEqual@j,w
  1272     03C0  0720               	addwf	isEqual@array1,w
  1273     03C1  00F6               	movwf	??_isEqual+1
  1274     03C2  0876               	movf	??_isEqual+1,w
  1275     03C3  0084               	movwf	4
  1276     03C4  0800               	movf	0,w
  1277     03C5  0675               	xorwf	??_isEqual,w
  1278     03C6  1D03               	skipz
  1279     03C7  2BC9               	goto	u2161
  1280     03C8  2BCA               	goto	u2160
  1281     03C9                     u2161:
  1282     03C9  2BCF               	goto	l2244
  1283     03CA                     u2160:
  1284     03CA                     l2242:
  1285                           
  1286                           ;main.c: 112:             j++;
  1287     03CA  3001               	movlw	1
  1288     03CB  00F5               	movwf	??_isEqual
  1289     03CC  0875               	movf	??_isEqual,w
  1290     03CD  07A1               	addwf	isEqual@j,f
  1291                           
  1292                           ;main.c: 113:             continue;
  1293     03CE  2BD1               	goto	l2248
  1294     03CF                     l2244:
  1295                           
  1296                           ;main.c: 115:         return 0;
  1297     03CF  3000               	movlw	0
  1298     03D0  2BDD               	goto	l201
  1299     03D1                     l2248:
  1300                           
  1301                           ;main.c: 110:     while (array1[j] != '\0') {
  1302     03D1  0821               	movf	isEqual@j,w
  1303     03D2  0720               	addwf	isEqual@array1,w
  1304     03D3  00F5               	movwf	??_isEqual
  1305     03D4  0875               	movf	??_isEqual,w
  1306     03D5  0084               	movwf	4
  1307     03D6  1383               	bcf	3,7	;select IRP bank0
  1308     03D7  0800               	movf	0,w
  1309     03D8  1D03               	btfss	3,2
  1310     03D9  2BDB               	goto	u2171
  1311     03DA  2BDC               	goto	u2170
  1312     03DB                     u2171:
  1313     03DB  2BB6               	goto	l2240
  1314     03DC                     u2170:
  1315     03DC                     l2250:
  1316                           
  1317                           ;main.c: 117:     return 1;
  1318     03DC  3001               	movlw	1
  1319     03DD                     l201:
  1320     03DD  0008               	return
  1321     03DE                     __end_of_isEqual:
  1322                           
  1323                           	psect	text2
  1324     033F                     __ptext2:	
  1325 ;; *************** function _UART_init *****************
  1326 ;; Defined at:
  1327 ;;		line 4 in file "../00-Librerie.X/UART.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;  baudrate        4   14[BANK0 ] long 
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;		None
  1332 ;; Return value:  Size  Location     Type
  1333 ;;                  1    wreg      void 
  1334 ;; Registers used:
  1335 ;;		wreg, status,2, status,0, pclath, cstack
  1336 ;; Tracked objects:
  1337 ;;		On entry : 0/0
  1338 ;;		On exit  : 0/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1341 ;;      Params:         0       4       0       0       0
  1342 ;;      Locals:         0       0       0       0       0
  1343 ;;      Temps:          0       4       0       0       0
  1344 ;;      Totals:         0       8       0       0       0
  1345 ;;Total ram usage:        8 bytes
  1346 ;; Hardware stack levels used: 1
  1347 ;; Hardware stack levels required when called: 2
  1348 ;; This function calls:
  1349 ;;		___aldiv
  1350 ;; This function is called by:
  1351 ;;		_main
  1352 ;; This function uses a non-reentrant model
  1353 ;;
  1354                           
  1355     033F                     _UART_init:	
  1356                           ;psect for function _UART_init
  1357                           
  1358     033F                     l2186:	
  1359                           ;incstack = 0
  1360                           ; Regs used in _UART_init: [wreg+status,2+status,0+pclath+cstack]
  1361                           
  1362                           
  1363                           ;../00-Librerie.X/UART.c: 6:     TXSTA |= 0x24;
  1364     033F  3024               	movlw	36
  1365     0340  1283               	bcf	3,5	;RP0=0, select bank0
  1366     0341  1303               	bcf	3,6	;RP1=0, select bank0
  1367     0342  00B2               	movwf	??_UART_init
  1368     0343  0832               	movf	??_UART_init,w
  1369     0344  1683               	bsf	3,5	;RP0=1, select bank1
  1370     0345  1303               	bcf	3,6	;RP1=0, select bank1
  1371     0346  0498               	iorwf	24,f	;volatile
  1372     0347                     l2188:
  1373                           
  1374                           ;../00-Librerie.X/UART.c: 7:     RCSTA = 0x90;
  1375     0347  3090               	movlw	144
  1376     0348  1283               	bcf	3,5	;RP0=0, select bank0
  1377     0349  1303               	bcf	3,6	;RP1=0, select bank0
  1378     034A  0098               	movwf	24	;volatile
  1379     034B                     l2190:
  1380                           
  1381                           ;../00-Librerie.X/UART.c: 8:     SPBRG = (char) (20*1000000 / (long) (64UL * baudrate)) 
      +                          - 1;
  1382     034B  082E               	movf	UART_init@baudrate,w
  1383     034C  00B2               	movwf	??_UART_init
  1384     034D  082F               	movf	UART_init@baudrate+1,w
  1385     034E  00B3               	movwf	??_UART_init+1
  1386     034F  0830               	movf	UART_init@baudrate+2,w
  1387     0350  00B4               	movwf	??_UART_init+2
  1388     0351  0831               	movf	UART_init@baudrate+3,w
  1389     0352  00B5               	movwf	??_UART_init+3
  1390     0353  3006               	movlw	6
  1391     0354                     u2145:
  1392     0354  1003               	clrc
  1393     0355  0DB2               	rlf	??_UART_init,f
  1394     0356  0DB3               	rlf	??_UART_init+1,f
  1395     0357  0DB4               	rlf	??_UART_init+2,f
  1396     0358  0DB5               	rlf	??_UART_init+3,f
  1397     0359                     u2140:
  1398     0359  3EFF               	addlw	-1
  1399     035A  1D03               	skipz
  1400     035B  2B54               	goto	u2145
  1401     035C  0835               	movf	??_UART_init+3,w
  1402     035D  00A3               	movwf	___aldiv@divisor+3
  1403     035E  0834               	movf	??_UART_init+2,w
  1404     035F  00A2               	movwf	___aldiv@divisor+2
  1405     0360  0833               	movf	??_UART_init+1,w
  1406     0361  00A1               	movwf	___aldiv@divisor+1
  1407     0362  0832               	movf	??_UART_init,w
  1408     0363  00A0               	movwf	___aldiv@divisor
  1409     0364  3001               	movlw	1
  1410     0365  00A7               	movwf	___aldiv@dividend+3
  1411     0366  3031               	movlw	49
  1412     0367  00A6               	movwf	___aldiv@dividend+2
  1413     0368  302D               	movlw	45
  1414     0369  00A5               	movwf	___aldiv@dividend+1
  1415     036A  3000               	movlw	0
  1416     036B  00A4               	movwf	___aldiv@dividend
  1417     036C  120A  118A  2114  120A  118A  	fcall	___aldiv
  1418     0371  1283               	bcf	3,5	;RP0=0, select bank0
  1419     0372  1303               	bcf	3,6	;RP1=0, select bank0
  1420     0373  0820               	movf	?___aldiv,w
  1421     0374  3EFF               	addlw	255
  1422     0375  1683               	bsf	3,5	;RP0=1, select bank1
  1423     0376  1303               	bcf	3,6	;RP1=0, select bank1
  1424     0377  0099               	movwf	25	;volatile
  1425     0378                     l2192:
  1426                           
  1427                           ;../00-Librerie.X/UART.c: 9:     INTCON |= 0x80;
  1428     0378  178B               	bsf	11,7	;volatile
  1429     0379                     l2194:
  1430                           
  1431                           ;../00-Librerie.X/UART.c: 10:     INTCON |= 0x40;
  1432     0379  170B               	bsf	11,6	;volatile
  1433     037A                     l2196:
  1434                           
  1435                           ;../00-Librerie.X/UART.c: 11:     PIE1 |= 0x20;
  1436     037A  168C               	bsf	12,5	;volatile
  1437     037B                     l82:
  1438     037B  0008               	return
  1439     037C                     __end_of_UART_init:
  1440                           
  1441                           	psect	text3
  1442     0114                     __ptext3:	
  1443 ;; *************** function ___aldiv *****************
  1444 ;; Defined at:
  1445 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\aldiv.c"
  1446 ;; Parameters:    Size  Location     Type
  1447 ;;  divisor         4    0[BANK0 ] long 
  1448 ;;  dividend        4    4[BANK0 ] long 
  1449 ;; Auto vars:     Size  Location     Type
  1450 ;;  quotient        4   10[BANK0 ] long 
  1451 ;;  sign            1    9[BANK0 ] unsigned char 
  1452 ;;  counter         1    8[BANK0 ] unsigned char 
  1453 ;; Return value:  Size  Location     Type
  1454 ;;                  4    0[BANK0 ] long 
  1455 ;; Registers used:
  1456 ;;		wreg, status,2, status,0
  1457 ;; Tracked objects:
  1458 ;;		On entry : 0/0
  1459 ;;		On exit  : 0/0
  1460 ;;		Unchanged: 0/0
  1461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1462 ;;      Params:         0       8       0       0       0
  1463 ;;      Locals:         0       6       0       0       0
  1464 ;;      Temps:          1       0       0       0       0
  1465 ;;      Totals:         1      14       0       0       0
  1466 ;;Total ram usage:       15 bytes
  1467 ;; Hardware stack levels used: 1
  1468 ;; Hardware stack levels required when called: 1
  1469 ;; This function calls:
  1470 ;;		Nothing
  1471 ;; This function is called by:
  1472 ;;		_UART_init
  1473 ;; This function uses a non-reentrant model
  1474 ;;
  1475                           
  1476     0114                     ___aldiv:	
  1477                           ;psect for function ___aldiv
  1478                           
  1479     0114                     l1344:	
  1480                           ;incstack = 0
  1481                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1482                           
  1483     0114  1283               	bcf	3,5	;RP0=0, select bank0
  1484     0115  1303               	bcf	3,6	;RP1=0, select bank0
  1485     0116  01A9               	clrf	___aldiv@sign
  1486     0117                     l1346:
  1487     0117  1FA3               	btfss	___aldiv@divisor+3,7
  1488     0118  291A               	goto	u611
  1489     0119  291B               	goto	u610
  1490     011A                     u611:
  1491     011A  2928               	goto	l419
  1492     011B                     u610:
  1493     011B                     l1348:
  1494     011B  09A0               	comf	___aldiv@divisor,f
  1495     011C  09A1               	comf	___aldiv@divisor+1,f
  1496     011D  09A2               	comf	___aldiv@divisor+2,f
  1497     011E  09A3               	comf	___aldiv@divisor+3,f
  1498     011F  0AA0               	incf	___aldiv@divisor,f
  1499     0120  1903               	skipnz
  1500     0121  0AA1               	incf	___aldiv@divisor+1,f
  1501     0122  1903               	skipnz
  1502     0123  0AA2               	incf	___aldiv@divisor+2,f
  1503     0124  1903               	skipnz
  1504     0125  0AA3               	incf	___aldiv@divisor+3,f
  1505     0126  01A9               	clrf	___aldiv@sign
  1506     0127  0AA9               	incf	___aldiv@sign,f
  1507     0128                     l419:
  1508     0128  1FA7               	btfss	___aldiv@dividend+3,7
  1509     0129  292B               	goto	u621
  1510     012A  292C               	goto	u620
  1511     012B                     u621:
  1512     012B  293B               	goto	l1354
  1513     012C                     u620:
  1514     012C                     l1350:
  1515     012C  09A4               	comf	___aldiv@dividend,f
  1516     012D  09A5               	comf	___aldiv@dividend+1,f
  1517     012E  09A6               	comf	___aldiv@dividend+2,f
  1518     012F  09A7               	comf	___aldiv@dividend+3,f
  1519     0130  0AA4               	incf	___aldiv@dividend,f
  1520     0131  1903               	skipnz
  1521     0132  0AA5               	incf	___aldiv@dividend+1,f
  1522     0133  1903               	skipnz
  1523     0134  0AA6               	incf	___aldiv@dividend+2,f
  1524     0135  1903               	skipnz
  1525     0136  0AA7               	incf	___aldiv@dividend+3,f
  1526     0137                     l1352:
  1527     0137  3001               	movlw	1
  1528     0138  00F4               	movwf	??___aldiv
  1529     0139  0874               	movf	??___aldiv,w
  1530     013A  06A9               	xorwf	___aldiv@sign,f
  1531     013B                     l1354:
  1532     013B  3000               	movlw	0
  1533     013C  00AD               	movwf	___aldiv@quotient+3
  1534     013D  3000               	movlw	0
  1535     013E  00AC               	movwf	___aldiv@quotient+2
  1536     013F  3000               	movlw	0
  1537     0140  00AB               	movwf	___aldiv@quotient+1
  1538     0141  3000               	movlw	0
  1539     0142  00AA               	movwf	___aldiv@quotient
  1540     0143                     l1356:
  1541     0143  0823               	movf	___aldiv@divisor+3,w
  1542     0144  0422               	iorwf	___aldiv@divisor+2,w
  1543     0145  0421               	iorwf	___aldiv@divisor+1,w
  1544     0146  0420               	iorwf	___aldiv@divisor,w
  1545     0147  1903               	skipnz
  1546     0148  294A               	goto	u631
  1547     0149  294B               	goto	u630
  1548     014A                     u631:
  1549     014A  2998               	goto	l1376
  1550     014B                     u630:
  1551     014B                     l1358:
  1552     014B  01A8               	clrf	___aldiv@counter
  1553     014C  0AA8               	incf	___aldiv@counter,f
  1554     014D  295B               	goto	l1362
  1555     014E                     l1360:
  1556     014E  3001               	movlw	1
  1557     014F  00F4               	movwf	??___aldiv
  1558     0150                     u645:
  1559     0150  1003               	clrc
  1560     0151  0DA0               	rlf	___aldiv@divisor,f
  1561     0152  0DA1               	rlf	___aldiv@divisor+1,f
  1562     0153  0DA2               	rlf	___aldiv@divisor+2,f
  1563     0154  0DA3               	rlf	___aldiv@divisor+3,f
  1564     0155  0BF4               	decfsz	??___aldiv,f
  1565     0156  2950               	goto	u645
  1566     0157  3001               	movlw	1
  1567     0158  00F4               	movwf	??___aldiv
  1568     0159  0874               	movf	??___aldiv,w
  1569     015A  07A8               	addwf	___aldiv@counter,f
  1570     015B                     l1362:
  1571     015B  1FA3               	btfss	___aldiv@divisor+3,7
  1572     015C  295E               	goto	u651
  1573     015D  295F               	goto	u650
  1574     015E                     u651:
  1575     015E  294E               	goto	l1360
  1576     015F                     u650:
  1577     015F                     l1364:
  1578     015F  3001               	movlw	1
  1579     0160  00F4               	movwf	??___aldiv
  1580     0161                     u665:
  1581     0161  1003               	clrc
  1582     0162  0DAA               	rlf	___aldiv@quotient,f
  1583     0163  0DAB               	rlf	___aldiv@quotient+1,f
  1584     0164  0DAC               	rlf	___aldiv@quotient+2,f
  1585     0165  0DAD               	rlf	___aldiv@quotient+3,f
  1586     0166  0BF4               	decfsz	??___aldiv,f
  1587     0167  2961               	goto	u665
  1588     0168                     l1366:
  1589     0168  0823               	movf	___aldiv@divisor+3,w
  1590     0169  0227               	subwf	___aldiv@dividend+3,w
  1591     016A  1D03               	skipz
  1592     016B  2976               	goto	u675
  1593     016C  0822               	movf	___aldiv@divisor+2,w
  1594     016D  0226               	subwf	___aldiv@dividend+2,w
  1595     016E  1D03               	skipz
  1596     016F  2976               	goto	u675
  1597     0170  0821               	movf	___aldiv@divisor+1,w
  1598     0171  0225               	subwf	___aldiv@dividend+1,w
  1599     0172  1D03               	skipz
  1600     0173  2976               	goto	u675
  1601     0174  0820               	movf	___aldiv@divisor,w
  1602     0175  0224               	subwf	___aldiv@dividend,w
  1603     0176                     u675:
  1604     0176  1C03               	skipc
  1605     0177  2979               	goto	u671
  1606     0178  297A               	goto	u670
  1607     0179                     u671:
  1608     0179  2989               	goto	l1372
  1609     017A                     u670:
  1610     017A                     l1368:
  1611     017A  0820               	movf	___aldiv@divisor,w
  1612     017B  02A4               	subwf	___aldiv@dividend,f
  1613     017C  0821               	movf	___aldiv@divisor+1,w
  1614     017D  1C03               	skipc
  1615     017E  0F21               	incfsz	___aldiv@divisor+1,w
  1616     017F  02A5               	subwf	___aldiv@dividend+1,f
  1617     0180  0822               	movf	___aldiv@divisor+2,w
  1618     0181  1C03               	skipc
  1619     0182  0F22               	incfsz	___aldiv@divisor+2,w
  1620     0183  02A6               	subwf	___aldiv@dividend+2,f
  1621     0184  0823               	movf	___aldiv@divisor+3,w
  1622     0185  1C03               	skipc
  1623     0186  0F23               	incfsz	___aldiv@divisor+3,w
  1624     0187  02A7               	subwf	___aldiv@dividend+3,f
  1625     0188                     l1370:
  1626     0188  142A               	bsf	___aldiv@quotient,0
  1627     0189                     l1372:
  1628     0189  3001               	movlw	1
  1629     018A                     u685:
  1630     018A  1003               	clrc
  1631     018B  0CA3               	rrf	___aldiv@divisor+3,f
  1632     018C  0CA2               	rrf	___aldiv@divisor+2,f
  1633     018D  0CA1               	rrf	___aldiv@divisor+1,f
  1634     018E  0CA0               	rrf	___aldiv@divisor,f
  1635     018F  3EFF               	addlw	-1
  1636     0190  1D03               	skipz
  1637     0191  298A               	goto	u685
  1638     0192                     l1374:
  1639     0192  3001               	movlw	1
  1640     0193  02A8               	subwf	___aldiv@counter,f
  1641     0194  1D03               	btfss	3,2
  1642     0195  2997               	goto	u691
  1643     0196  2998               	goto	u690
  1644     0197                     u691:
  1645     0197  295F               	goto	l1364
  1646     0198                     u690:
  1647     0198                     l1376:
  1648     0198  0829               	movf	___aldiv@sign,w
  1649     0199  1903               	btfsc	3,2
  1650     019A  299C               	goto	u701
  1651     019B  299D               	goto	u700
  1652     019C                     u701:
  1653     019C  29A8               	goto	l1380
  1654     019D                     u700:
  1655     019D                     l1378:
  1656     019D  09AA               	comf	___aldiv@quotient,f
  1657     019E  09AB               	comf	___aldiv@quotient+1,f
  1658     019F  09AC               	comf	___aldiv@quotient+2,f
  1659     01A0  09AD               	comf	___aldiv@quotient+3,f
  1660     01A1  0AAA               	incf	___aldiv@quotient,f
  1661     01A2  1903               	skipnz
  1662     01A3  0AAB               	incf	___aldiv@quotient+1,f
  1663     01A4  1903               	skipnz
  1664     01A5  0AAC               	incf	___aldiv@quotient+2,f
  1665     01A6  1903               	skipnz
  1666     01A7  0AAD               	incf	___aldiv@quotient+3,f
  1667     01A8                     l1380:
  1668     01A8  082D               	movf	___aldiv@quotient+3,w
  1669     01A9  00A3               	movwf	?___aldiv+3
  1670     01AA  082C               	movf	___aldiv@quotient+2,w
  1671     01AB  00A2               	movwf	?___aldiv+2
  1672     01AC  082B               	movf	___aldiv@quotient+1,w
  1673     01AD  00A1               	movwf	?___aldiv+1
  1674     01AE  082A               	movf	___aldiv@quotient,w
  1675     01AF  00A0               	movwf	?___aldiv
  1676     01B0                     l429:
  1677     01B0  0008               	return
  1678     01B1                     __end_of___aldiv:
  1679                           
  1680                           	psect	text4
  1681     03DE                     __ptext4:	
  1682 ;; *************** function _UART_TxString *****************
  1683 ;; Defined at:
  1684 ;;		line 23 in file "../00-Librerie.X/UART.c"
  1685 ;; Parameters:    Size  Location     Type
  1686 ;;  str             2    0[BANK0 ] PTR const unsigned char 
  1687 ;;		 -> main@Clear_Display_UART(6), main@Led_On_UART(6), STR_1(13), UART_TxInt@buffer(50), 
  1688 ;; Auto vars:     Size  Location     Type
  1689 ;;  i               1    2[BANK0 ] unsigned char 
  1690 ;; Return value:  Size  Location     Type
  1691 ;;                  1    wreg      void 
  1692 ;; Registers used:
  1693 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1694 ;; Tracked objects:
  1695 ;;		On entry : 0/0
  1696 ;;		On exit  : 0/0
  1697 ;;		Unchanged: 0/0
  1698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1699 ;;      Params:         0       2       0       0       0
  1700 ;;      Locals:         0       1       0       0       0
  1701 ;;      Temps:          1       0       0       0       0
  1702 ;;      Totals:         1       3       0       0       0
  1703 ;;Total ram usage:        4 bytes
  1704 ;; Hardware stack levels used: 1
  1705 ;; Hardware stack levels required when called: 2
  1706 ;; This function calls:
  1707 ;;		_UART_TxChar
  1708 ;; This function is called by:
  1709 ;;		_main
  1710 ;;		_UART_TxInt
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714     03DE                     _UART_TxString:	
  1715                           ;psect for function _UART_TxString
  1716                           
  1717     03DE                     l2198:	
  1718                           ;incstack = 0
  1719                           ; Regs used in _UART_TxString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1720                           
  1721                           
  1722                           ;../00-Librerie.X/UART.c: 24:     unsigned char i = 0;
  1723     03DE  1283               	bcf	3,5	;RP0=0, select bank0
  1724     03DF  1303               	bcf	3,6	;RP1=0, select bank0
  1725     03E0  01A2               	clrf	UART_TxString@i
  1726                           
  1727                           ;../00-Librerie.X/UART.c: 25:     while (str[i] != 0) {
  1728     03E1  2BF9               	goto	l2204
  1729     03E2                     l2200:
  1730                           
  1731                           ;../00-Librerie.X/UART.c: 26:         UART_TxChar(str[i]);
  1732     03E2  0822               	movf	UART_TxString@i,w
  1733     03E3  0720               	addwf	UART_TxString@str,w
  1734     03E4  0084               	movwf	4
  1735     03E5  0821               	movf	UART_TxString@str+1,w
  1736     03E6  1803               	skipnc
  1737     03E7  0A21               	incf	UART_TxString@str+1,w
  1738     03E8  00FF               	movwf	btemp+1
  1739     03E9  120A  118A  2300  120A  118A  	fcall	stringtab
  1740     03EE  120A  118A  2475  120A  118A  	fcall	_UART_TxChar
  1741     03F3                     l2202:
  1742                           
  1743                           ;../00-Librerie.X/UART.c: 27:         i++;
  1744     03F3  3001               	movlw	1
  1745     03F4  00F6               	movwf	??_UART_TxString
  1746     03F5  0876               	movf	??_UART_TxString,w
  1747     03F6  1283               	bcf	3,5	;RP0=0, select bank0
  1748     03F7  1303               	bcf	3,6	;RP1=0, select bank0
  1749     03F8  07A2               	addwf	UART_TxString@i,f
  1750     03F9                     l2204:
  1751                           
  1752                           ;../00-Librerie.X/UART.c: 25:     while (str[i] != 0) {
  1753     03F9  0822               	movf	UART_TxString@i,w
  1754     03FA  0720               	addwf	UART_TxString@str,w
  1755     03FB  0084               	movwf	4
  1756     03FC  0821               	movf	UART_TxString@str+1,w
  1757     03FD  1803               	skipnc
  1758     03FE  0A21               	incf	UART_TxString@str+1,w
  1759     03FF  00FF               	movwf	btemp+1
  1760     0400  120A  118A  2300  120A  118A  	fcall	stringtab
  1761     0405  3A00               	xorlw	0
  1762     0406  1D03               	skipz
  1763     0407  2C09               	goto	u2151
  1764     0408  2C0A               	goto	u2150
  1765     0409                     u2151:
  1766     0409  2BE2               	goto	l2200
  1767     040A                     u2150:
  1768     040A                     l94:
  1769     040A  0008               	return
  1770     040B                     __end_of_UART_TxString:
  1771                           
  1772                           	psect	text5
  1773     0475                     __ptext5:	
  1774 ;; *************** function _UART_TxChar *****************
  1775 ;; Defined at:
  1776 ;;		line 14 in file "../00-Librerie.X/UART.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;  ch              1    wreg     unsigned char 
  1779 ;; Auto vars:     Size  Location     Type
  1780 ;;  ch              1    5[COMMON] unsigned char 
  1781 ;; Return value:  Size  Location     Type
  1782 ;;                  1    wreg      void 
  1783 ;; Registers used:
  1784 ;;		wreg, status,2, status,0
  1785 ;; Tracked objects:
  1786 ;;		On entry : 0/0
  1787 ;;		On exit  : 0/0
  1788 ;;		Unchanged: 0/0
  1789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1790 ;;      Params:         0       0       0       0       0
  1791 ;;      Locals:         1       0       0       0       0
  1792 ;;      Temps:          1       0       0       0       0
  1793 ;;      Totals:         2       0       0       0       0
  1794 ;;Total ram usage:        2 bytes
  1795 ;; Hardware stack levels used: 1
  1796 ;; Hardware stack levels required when called: 1
  1797 ;; This function calls:
  1798 ;;		Nothing
  1799 ;; This function is called by:
  1800 ;;		_UART_TxString
  1801 ;;		_main
  1802 ;; This function uses a non-reentrant model
  1803 ;;
  1804                           
  1805     0475                     _UART_TxChar:	
  1806                           ;psect for function _UART_TxChar
  1807                           
  1808                           
  1809                           ;incstack = 0
  1810                           ; Regs used in _UART_TxChar: [wreg+status,2+status,0]
  1811                           ;UART_TxChar@ch stored from wreg
  1812     0475  00F5               	movwf	UART_TxChar@ch
  1813     0476                     l2096:
  1814                           
  1815                           ;../00-Librerie.X/UART.c: 15:     TRISC &= ~0x40;
  1816     0476  30BF               	movlw	191
  1817     0477  00F4               	movwf	??_UART_TxChar
  1818     0478  0874               	movf	??_UART_TxChar,w
  1819     0479  1683               	bsf	3,5	;RP0=1, select bank1
  1820     047A  1303               	bcf	3,6	;RP1=0, select bank1
  1821     047B  0587               	andwf	7,f	;volatile
  1822     047C                     l2098:
  1823                           
  1824                           ;../00-Librerie.X/UART.c: 16:     TRISC |= 0x80;
  1825     047C  1787               	bsf	7,7	;volatile
  1826     047D                     l85:	
  1827                           ;../00-Librerie.X/UART.c: 17:     while (!(PIR1 & 0x10));
  1828                           
  1829     047D  1283               	bcf	3,5	;RP0=0, select bank0
  1830     047E  1E0C               	btfss	12,4	;volatile
  1831     047F  2C81               	goto	u2031
  1832     0480  2C82               	goto	u2030
  1833     0481                     u2031:
  1834     0481  2C7D               	goto	l85
  1835     0482                     u2030:
  1836     0482                     l2100:
  1837                           
  1838                           ;../00-Librerie.X/UART.c: 18:     PIR1 &= ~0x10;
  1839     0482  30EF               	movlw	239
  1840     0483  00F4               	movwf	??_UART_TxChar
  1841     0484  0874               	movf	??_UART_TxChar,w
  1842     0485  058C               	andwf	12,f	;volatile
  1843     0486                     l2102:
  1844                           
  1845                           ;../00-Librerie.X/UART.c: 19:     TXREG = ch;
  1846     0486  0875               	movf	UART_TxChar@ch,w
  1847     0487  0099               	movwf	25	;volatile
  1848     0488                     l88:
  1849     0488  0008               	return
  1850     0489                     __end_of_UART_TxChar:
  1851                           
  1852                           	psect	text6
  1853     01B1                     __ptext6:	
  1854 ;; *************** function _Numpad_Read *****************
  1855 ;; Defined at:
  1856 ;;		line 20 in file "../00-Librerie.X/numpad.c"
  1857 ;; Parameters:    Size  Location     Type
  1858 ;;		None
  1859 ;; Auto vars:     Size  Location     Type
  1860 ;;  rowScan         1    3[BANK0 ] unsigned char 
  1861 ;;  colScan         1    2[BANK0 ] unsigned char 
  1862 ;;  currentKeyVa    1    1[BANK0 ] unsigned char 
  1863 ;;  currentKey      1    0[BANK0 ] unsigned char 
  1864 ;; Return value:  Size  Location     Type
  1865 ;;                  1    wreg      unsigned char 
  1866 ;; Registers used:
  1867 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1868 ;; Tracked objects:
  1869 ;;		On entry : 0/0
  1870 ;;		On exit  : 0/0
  1871 ;;		Unchanged: 0/0
  1872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1873 ;;      Params:         0       0       0       0       0
  1874 ;;      Locals:         0       4       0       0       0
  1875 ;;      Temps:          2       0       0       0       0
  1876 ;;      Totals:         2       4       0       0       0
  1877 ;;Total ram usage:        6 bytes
  1878 ;; Hardware stack levels used: 2
  1879 ;; Hardware stack levels required when called: 1
  1880 ;; This function calls:
  1881 ;;		Nothing
  1882 ;; This function is called by:
  1883 ;;		_main
  1884 ;; This function uses a non-reentrant model
  1885 ;;
  1886                           
  1887     01B1                     _Numpad_Read:	
  1888                           ;psect for function _Numpad_Read
  1889                           
  1890     01B1                     l2138:	
  1891                           ;incstack = 0
  1892                           ; Regs used in _Numpad_Read: [wreg-fsr0h+status,2+status,0+pclath]
  1893                           
  1894                           
  1895                           ;../00-Librerie.X/numpad.c: 22:     TRISD |= 0x0f;
  1896     01B1  300F               	movlw	15
  1897     01B2  00F4               	movwf	??_Numpad_Read
  1898     01B3  0874               	movf	??_Numpad_Read,w
  1899     01B4  1683               	bsf	3,5	;RP0=1, select bank1
  1900     01B5  1303               	bcf	3,6	;RP1=0, select bank1
  1901     01B6  0488               	iorwf	8,f	;volatile
  1902                           
  1903                           ;../00-Librerie.X/numpad.c: 23:     TRISB &= ~0x07;
  1904     01B7  30F8               	movlw	248
  1905     01B8  00F4               	movwf	??_Numpad_Read
  1906     01B9  0874               	movf	??_Numpad_Read,w
  1907     01BA  0586               	andwf	6,f	;volatile
  1908     01BB                     l2140:
  1909                           
  1910                           ;../00-Librerie.X/numpad.c: 24:     char colScan, rowScan, currentKeyVal, currentKey;;..
      +                          /00-Librerie.X/numpad.c: 25:     static char oldKeyVal;;../00-Librerie.X/numpad.c: 26:  
      +                             for (colScan = 0; colScan < 3; colScan++) {
  1911     01BB  1283               	bcf	3,5	;RP0=0, select bank0
  1912     01BC  1303               	bcf	3,6	;RP1=0, select bank0
  1913     01BD  01A2               	clrf	Numpad_Read@colScan
  1914     01BE                     l2146:
  1915                           
  1916                           ;../00-Librerie.X/numpad.c: 27:         PORTB |= 0x07;
  1917     01BE  3007               	movlw	7
  1918     01BF  00F4               	movwf	??_Numpad_Read
  1919     01C0  0874               	movf	??_Numpad_Read,w
  1920     01C1  0486               	iorwf	6,f	;volatile
  1921                           
  1922                           ;../00-Librerie.X/numpad.c: 28:         PORTB &= ~(1 << colScan);
  1923     01C2  3001               	movlw	1
  1924     01C3  00F4               	movwf	??_Numpad_Read
  1925     01C4  0A22               	incf	Numpad_Read@colScan,w
  1926     01C5  29C8               	goto	u2054
  1927     01C6                     u2055:
  1928     01C6  1003               	clrc
  1929     01C7  0DF4               	rlf	??_Numpad_Read,f
  1930     01C8                     u2054:
  1931     01C8  3EFF               	addlw	-1
  1932     01C9  1D03               	skipz
  1933     01CA  29C6               	goto	u2055
  1934     01CB  0874               	movf	??_Numpad_Read,w
  1935     01CC  3AFF               	xorlw	255
  1936     01CD  00F5               	movwf	??_Numpad_Read+1
  1937     01CE  0875               	movf	??_Numpad_Read+1,w
  1938     01CF  0586               	andwf	6,f	;volatile
  1939     01D0                     l2148:
  1940                           
  1941                           ;../00-Librerie.X/numpad.c: 29:         _delay((unsigned long)((15)*(20*1000000/4000.0))
      +                          );
  1942     01D0  3062               	movlw	98
  1943     01D1  00F5               	movwf	??_Numpad_Read+1
  1944     01D2  3065               	movlw	101
  1945     01D3  00F4               	movwf	??_Numpad_Read
  1946     01D4                     u2367:
  1947     01D4  0BF4               	decfsz	??_Numpad_Read,f
  1948     01D5  29D4               	goto	u2367
  1949     01D6  0BF5               	decfsz	??_Numpad_Read+1,f
  1950     01D7  29D4               	goto	u2367
  1951     01D8  29D9               	nop2
  1952     01D9                     l2150:
  1953                           
  1954                           ;../00-Librerie.X/numpad.c: 30:         for (rowScan = 0; rowScan < 4; rowScan++) {
  1955     01D9  1283               	bcf	3,5	;RP0=0, select bank0
  1956     01DA  1303               	bcf	3,6	;RP1=0, select bank0
  1957     01DB  01A3               	clrf	Numpad_Read@rowScan
  1958     01DC                     l2156:
  1959                           
  1960                           ;../00-Librerie.X/numpad.c: 31:             currentKeyVal = (PORTD & (1 << rowScan));
  1961     01DC  3001               	movlw	1
  1962     01DD  00F4               	movwf	??_Numpad_Read
  1963     01DE  0A23               	incf	Numpad_Read@rowScan,w
  1964     01DF  29E2               	goto	u2064
  1965     01E0                     u2065:
  1966     01E0  1003               	clrc
  1967     01E1  0DF4               	rlf	??_Numpad_Read,f
  1968     01E2                     u2064:
  1969     01E2  3EFF               	addlw	-1
  1970     01E3  1D03               	skipz
  1971     01E4  29E0               	goto	u2065
  1972     01E5  0874               	movf	??_Numpad_Read,w
  1973     01E6  0508               	andwf	8,w	;volatile
  1974     01E7  00A1               	movwf	Numpad_Read@currentKeyVal
  1975                           
  1976                           ;../00-Librerie.X/numpad.c: 33:             if (!currentKeyVal && oldKeyVal) {
  1977     01E8  0821               	movf	Numpad_Read@currentKeyVal,w
  1978     01E9  1D03               	btfss	3,2
  1979     01EA  29EC               	goto	u2071
  1980     01EB  29ED               	goto	u2070
  1981     01EC                     u2071:
  1982     01EC  2A26               	goto	l49
  1983     01ED                     u2070:
  1984     01ED                     l2158:
  1985     01ED  0879               	movf	Numpad_Read@oldKeyVal,w
  1986     01EE  1903               	btfsc	3,2
  1987     01EF  29F1               	goto	u2081
  1988     01F0  29F2               	goto	u2080
  1989     01F1                     u2081:
  1990     01F1  2A26               	goto	l49
  1991     01F2                     u2080:
  1992     01F2                     l2160:
  1993                           
  1994                           ;../00-Librerie.X/numpad.c: 34:                 currentKey = keypad[rowScan + (4 * colSc
      +                          an)];
  1995     01F2  0822               	movf	Numpad_Read@colScan,w
  1996     01F3  00F4               	movwf	??_Numpad_Read
  1997     01F4  3002               	movlw	2
  1998     01F5                     u2095:
  1999     01F5  1003               	clrc
  2000     01F6  0DF4               	rlf	??_Numpad_Read,f
  2001     01F7  3EFF               	addlw	-1
  2002     01F8  1D03               	skipz
  2003     01F9  29F5               	goto	u2095
  2004     01FA  3001               	movlw	(low ((_keypad-__stringbase)| (0+32768)))& (0+255)
  2005     01FB  0774               	addwf	??_Numpad_Read,w
  2006     01FC  00F5               	movwf	??_Numpad_Read+1
  2007     01FD  0823               	movf	Numpad_Read@rowScan,w
  2008     01FE  0775               	addwf	??_Numpad_Read+1,w
  2009     01FF  0084               	movwf	4
  2010     0200  120A  118A  230A  120A  118A  	fcall	stringdir
  2011     0205  00A0               	movwf	Numpad_Read@currentKey
  2012     0206                     l2162:
  2013                           
  2014                           ;../00-Librerie.X/numpad.c: 35:                 oldKeyVal = 0;
  2015     0206  01F9               	clrf	Numpad_Read@oldKeyVal
  2016                           
  2017                           ;../00-Librerie.X/numpad.c: 36:                 while (!currentKeyVal) {
  2018     0207  2A1D               	goto	l2168
  2019     0208                     l2164:
  2020                           
  2021                           ;../00-Librerie.X/numpad.c: 37:                     currentKeyVal = (PORTD & (1 << rowSc
      +                          an));
  2022     0208  3001               	movlw	1
  2023     0209  00F4               	movwf	??_Numpad_Read
  2024     020A  0A23               	incf	Numpad_Read@rowScan,w
  2025     020B  2A0E               	goto	u2104
  2026     020C                     u2105:
  2027     020C  1003               	clrc
  2028     020D  0DF4               	rlf	??_Numpad_Read,f
  2029     020E                     u2104:
  2030     020E  3EFF               	addlw	-1
  2031     020F  1D03               	skipz
  2032     0210  2A0C               	goto	u2105
  2033     0211  0874               	movf	??_Numpad_Read,w
  2034     0212  0508               	andwf	8,w	;volatile
  2035     0213  00A1               	movwf	Numpad_Read@currentKeyVal
  2036     0214                     l2166:
  2037                           
  2038                           ;../00-Librerie.X/numpad.c: 38:                     _delay((unsigned long)((20)*(20*1000
      +                          000/4000.0)));
  2039     0214  3082               	movlw	130
  2040     0215  00F5               	movwf	??_Numpad_Read+1
  2041     0216  30DD               	movlw	221
  2042     0217  00F4               	movwf	??_Numpad_Read
  2043     0218                     u2377:
  2044     0218  0BF4               	decfsz	??_Numpad_Read,f
  2045     0219  2A18               	goto	u2377
  2046     021A  0BF5               	decfsz	??_Numpad_Read+1,f
  2047     021B  2A18               	goto	u2377
  2048     021C  2A1D               	nop2
  2049     021D                     l2168:
  2050                           
  2051                           ;../00-Librerie.X/numpad.c: 36:                 while (!currentKeyVal) {
  2052     021D  1283               	bcf	3,5	;RP0=0, select bank0
  2053     021E  1303               	bcf	3,6	;RP1=0, select bank0
  2054     021F  0821               	movf	Numpad_Read@currentKeyVal,w
  2055     0220  1903               	btfsc	3,2
  2056     0221  2A23               	goto	u2111
  2057     0222  2A24               	goto	u2110
  2058     0223                     u2111:
  2059     0223  2A08               	goto	l2164
  2060     0224                     u2110:
  2061     0224                     l2170:
  2062                           
  2063                           ;../00-Librerie.X/numpad.c: 40:                 return currentKey;
  2064     0224  0820               	movf	Numpad_Read@currentKey,w
  2065     0225  2A3D               	goto	l53
  2066     0226                     l49:	
  2067                           ;../00-Librerie.X/numpad.c: 41:             }
  2068                           
  2069                           
  2070                           ;../00-Librerie.X/numpad.c: 43:             oldKeyVal = 1;
  2071     0226  01F9               	clrf	Numpad_Read@oldKeyVal
  2072     0227  0AF9               	incf	Numpad_Read@oldKeyVal,f
  2073     0228                     l2174:
  2074                           
  2075                           ;../00-Librerie.X/numpad.c: 44:         }
  2076     0228  3001               	movlw	1
  2077     0229  00F4               	movwf	??_Numpad_Read
  2078     022A  0874               	movf	??_Numpad_Read,w
  2079     022B  07A3               	addwf	Numpad_Read@rowScan,f
  2080     022C                     l2176:
  2081     022C  3004               	movlw	4
  2082     022D  0223               	subwf	Numpad_Read@rowScan,w
  2083     022E  1C03               	skipc
  2084     022F  2A31               	goto	u2121
  2085     0230  2A32               	goto	u2120
  2086     0231                     u2121:
  2087     0231  29DC               	goto	l2156
  2088     0232                     u2120:
  2089     0232                     l2178:
  2090                           
  2091                           ;../00-Librerie.X/numpad.c: 45:     }
  2092     0232  3001               	movlw	1
  2093     0233  00F4               	movwf	??_Numpad_Read
  2094     0234  0874               	movf	??_Numpad_Read,w
  2095     0235  07A2               	addwf	Numpad_Read@colScan,f
  2096     0236                     l2180:
  2097     0236  3003               	movlw	3
  2098     0237  0222               	subwf	Numpad_Read@colScan,w
  2099     0238  1C03               	skipc
  2100     0239  2A3B               	goto	u2131
  2101     023A  2A3C               	goto	u2130
  2102     023B                     u2131:
  2103     023B  29BE               	goto	l2146
  2104     023C                     u2130:
  2105     023C                     l2182:
  2106                           
  2107                           ;../00-Librerie.X/numpad.c: 46:     return 0xff;
  2108     023C  30FF               	movlw	255
  2109     023D                     l53:
  2110     023D  0008               	return
  2111     023E                     __end_of_Numpad_Read:
  2112                           
  2113                           	psect	text7
  2114     040B                     __ptext7:	
  2115 ;; *************** function _Lcd_Write_String *****************
  2116 ;; Defined at:
  2117 ;;		line 105 in file "lcd.c"
  2118 ;; Parameters:    Size  Location     Type
  2119 ;;  a               1    wreg     PTR unsigned char 
  2120 ;;		 -> Lcd_Write_Int@buffer(50), dato(2), 
  2121 ;; Auto vars:     Size  Location     Type
  2122 ;;  a               1    5[BANK0 ] PTR unsigned char 
  2123 ;;		 -> Lcd_Write_Int@buffer(50), dato(2), 
  2124 ;;  i               2    3[BANK0 ] int 
  2125 ;; Return value:  Size  Location     Type
  2126 ;;                  1    wreg      void 
  2127 ;; Registers used:
  2128 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/0
  2131 ;;		On exit  : 0/0
  2132 ;;		Unchanged: 0/0
  2133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2134 ;;      Params:         0       0       0       0       0
  2135 ;;      Locals:         0       3       0       0       0
  2136 ;;      Temps:          1       0       0       0       0
  2137 ;;      Totals:         1       3       0       0       0
  2138 ;;Total ram usage:        4 bytes
  2139 ;; Hardware stack levels used: 1
  2140 ;; Hardware stack levels required when called: 3
  2141 ;; This function calls:
  2142 ;;		_Lcd_Write_Char
  2143 ;; This function is called by:
  2144 ;;		_main
  2145 ;; This function uses a non-reentrant model
  2146 ;;
  2147                           
  2148     040B                     _Lcd_Write_String:	
  2149                           ;psect for function _Lcd_Write_String
  2150                           
  2151                           
  2152                           ;incstack = 0
  2153                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2154                           ;Lcd_Write_String@a stored from wreg
  2155     040B  1283               	bcf	3,5	;RP0=0, select bank0
  2156     040C  1303               	bcf	3,6	;RP1=0, select bank0
  2157     040D  00A5               	movwf	Lcd_Write_String@a
  2158     040E                     l2254:
  2159                           
  2160                           ;lcd.c: 106:     int i;;lcd.c: 107:     for (i = 0; a[i] != '\0'; i++)
  2161     040E  01A3               	clrf	Lcd_Write_String@i
  2162     040F  01A4               	clrf	Lcd_Write_String@i+1
  2163     0410  2C24               	goto	l2260
  2164     0411                     l2256:
  2165                           
  2166                           ;lcd.c: 108:         Lcd_Write_Char(a[i]);
  2167     0411  0823               	movf	Lcd_Write_String@i,w
  2168     0412  0725               	addwf	Lcd_Write_String@a,w
  2169     0413  00F6               	movwf	??_Lcd_Write_String
  2170     0414  0876               	movf	??_Lcd_Write_String,w
  2171     0415  0084               	movwf	4
  2172     0416  0800               	movf	0,w
  2173     0417  120A  118A  237C  120A  118A  	fcall	_Lcd_Write_Char
  2174     041C                     l2258:
  2175     041C  3001               	movlw	1
  2176     041D  1283               	bcf	3,5	;RP0=0, select bank0
  2177     041E  1303               	bcf	3,6	;RP1=0, select bank0
  2178     041F  07A3               	addwf	Lcd_Write_String@i,f
  2179     0420  1803               	skipnc
  2180     0421  0AA4               	incf	Lcd_Write_String@i+1,f
  2181     0422  3000               	movlw	0
  2182     0423  07A4               	addwf	Lcd_Write_String@i+1,f
  2183     0424                     l2260:
  2184     0424  0823               	movf	Lcd_Write_String@i,w
  2185     0425  0725               	addwf	Lcd_Write_String@a,w
  2186     0426  00F6               	movwf	??_Lcd_Write_String
  2187     0427  0876               	movf	??_Lcd_Write_String,w
  2188     0428  0084               	movwf	4
  2189     0429  1383               	bcf	3,7	;select IRP bank0
  2190     042A  0800               	movf	0,w
  2191     042B  1D03               	btfss	3,2
  2192     042C  2C2E               	goto	u2181
  2193     042D  2C2F               	goto	u2180
  2194     042E                     u2181:
  2195     042E  2C11               	goto	l2256
  2196     042F                     u2180:
  2197     042F                     l329:
  2198     042F  0008               	return
  2199     0430                     __end_of_Lcd_Write_String:
  2200                           
  2201                           	psect	text8
  2202     037C                     __ptext8:	
  2203 ;; *************** function _Lcd_Write_Char *****************
  2204 ;; Defined at:
  2205 ;;		line 88 in file "lcd.c"
  2206 ;; Parameters:    Size  Location     Type
  2207 ;;  a               1    wreg     unsigned char 
  2208 ;; Auto vars:     Size  Location     Type
  2209 ;;  a               1    2[BANK0 ] unsigned char 
  2210 ;;  y               1    1[BANK0 ] unsigned char 
  2211 ;;  temp            1    0[BANK0 ] unsigned char 
  2212 ;; Return value:  Size  Location     Type
  2213 ;;                  1    wreg      void 
  2214 ;; Registers used:
  2215 ;;		wreg, status,2, status,0, pclath, cstack
  2216 ;; Tracked objects:
  2217 ;;		On entry : 0/0
  2218 ;;		On exit  : 0/0
  2219 ;;		Unchanged: 0/0
  2220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2221 ;;      Params:         0       0       0       0       0
  2222 ;;      Locals:         0       3       0       0       0
  2223 ;;      Temps:          1       0       0       0       0
  2224 ;;      Totals:         1       3       0       0       0
  2225 ;;Total ram usage:        4 bytes
  2226 ;; Hardware stack levels used: 1
  2227 ;; Hardware stack levels required when called: 2
  2228 ;; This function calls:
  2229 ;;		_Lcd_Port
  2230 ;; This function is called by:
  2231 ;;		_main
  2232 ;;		_Lcd_Write_String
  2233 ;; This function uses a non-reentrant model
  2234 ;;
  2235                           
  2236     037C                     _Lcd_Write_Char:	
  2237                           ;psect for function _Lcd_Write_Char
  2238                           
  2239                           
  2240                           ;incstack = 0
  2241                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2242                           ;Lcd_Write_Char@a stored from wreg
  2243     037C  1283               	bcf	3,5	;RP0=0, select bank0
  2244     037D  1303               	bcf	3,6	;RP1=0, select bank0
  2245     037E  00A2               	movwf	Lcd_Write_Char@a
  2246     037F                     l2104:
  2247                           
  2248                           ;lcd.c: 89:     char temp, y;;lcd.c: 90:     temp = a & 0x0F;
  2249     037F  0822               	movf	Lcd_Write_Char@a,w
  2250     0380  390F               	andlw	15
  2251     0381  00A0               	movwf	Lcd_Write_Char@temp
  2252                           
  2253                           ;lcd.c: 91:     y = a & 0xF0;
  2254     0382  0822               	movf	Lcd_Write_Char@a,w
  2255     0383  39F0               	andlw	240
  2256     0384  00A1               	movwf	Lcd_Write_Char@y
  2257     0385                     l2106:
  2258                           
  2259                           ;lcd.c: 93:     PORTEbits.RE2 = 1;
  2260     0385  1509               	bsf	9,2	;volatile
  2261     0386                     l2108:
  2262                           
  2263                           ;lcd.c: 95:     Lcd_Port(y >> 4);
  2264     0386  0821               	movf	Lcd_Write_Char@y,w
  2265     0387  00F5               	movwf	??_Lcd_Write_Char
  2266     0388  3004               	movlw	4
  2267     0389                     u2045:
  2268     0389  1003               	clrc
  2269     038A  0CF5               	rrf	??_Lcd_Write_Char,f
  2270     038B  3EFF               	addlw	-1
  2271     038C  1D03               	skipz
  2272     038D  2B89               	goto	u2045
  2273     038E  0875               	movf	??_Lcd_Write_Char,w
  2274     038F  120A  118A  2453  120A  118A  	fcall	_Lcd_Port
  2275     0394                     l2110:
  2276                           
  2277                           ;lcd.c: 96:     PORTEbits.RE1 = 1;
  2278     0394  1283               	bcf	3,5	;RP0=0, select bank0
  2279     0395  1303               	bcf	3,6	;RP1=0, select bank0
  2280     0396  1489               	bsf	9,1	;volatile
  2281     0397                     l2112:
  2282                           
  2283                           ;lcd.c: 97:     _delay((unsigned long)((4)*(20*1000000/4000000.0)));
  2284     0397  3006               	movlw	6
  2285     0398  00F5               	movwf	??_Lcd_Write_Char
  2286     0399                     u2387:
  2287     0399  0BF5               	decfsz	??_Lcd_Write_Char,f
  2288     039A  2B99               	goto	u2387
  2289     039B  0000               	nop
  2290     039C                     l2114:
  2291                           
  2292                           ;lcd.c: 98:     PORTEbits.RE1 = 0;
  2293     039C  1283               	bcf	3,5	;RP0=0, select bank0
  2294     039D  1303               	bcf	3,6	;RP1=0, select bank0
  2295     039E  1089               	bcf	9,1	;volatile
  2296     039F                     l2116:
  2297                           
  2298                           ;lcd.c: 99:     Lcd_Port(temp);
  2299     039F  0820               	movf	Lcd_Write_Char@temp,w
  2300     03A0  120A  118A  2453  120A  118A  	fcall	_Lcd_Port
  2301     03A5                     l2118:
  2302                           
  2303                           ;lcd.c: 100:     PORTEbits.RE1 = 1;
  2304     03A5  1283               	bcf	3,5	;RP0=0, select bank0
  2305     03A6  1303               	bcf	3,6	;RP1=0, select bank0
  2306     03A7  1489               	bsf	9,1	;volatile
  2307     03A8                     l2120:
  2308                           
  2309                           ;lcd.c: 101:     _delay((unsigned long)((4)*(20*1000000/4000000.0)));
  2310     03A8  3006               	movlw	6
  2311     03A9  00F5               	movwf	??_Lcd_Write_Char
  2312     03AA                     u2397:
  2313     03AA  0BF5               	decfsz	??_Lcd_Write_Char,f
  2314     03AB  2BAA               	goto	u2397
  2315     03AC  0000               	nop
  2316     03AD                     l2122:
  2317                           
  2318                           ;lcd.c: 102:     PORTEbits.RE1 = 0;
  2319     03AD  1283               	bcf	3,5	;RP0=0, select bank0
  2320     03AE  1303               	bcf	3,6	;RP1=0, select bank0
  2321     03AF  1089               	bcf	9,1	;volatile
  2322     03B0                     l323:
  2323     03B0  0008               	return
  2324     03B1                     __end_of_Lcd_Write_Char:
  2325                           
  2326                           	psect	text9
  2327     023E                     __ptext9:	
  2328 ;; *************** function _Lcd_Init *****************
  2329 ;; Defined at:
  2330 ;;		line 41 in file "lcd.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;		None
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;		None
  2335 ;; Return value:  Size  Location     Type
  2336 ;;                  1    wreg      void 
  2337 ;; Registers used:
  2338 ;;		wreg, status,2, status,0, pclath, cstack
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2344 ;;      Params:         0       0       0       0       0
  2345 ;;      Locals:         0       0       0       0       0
  2346 ;;      Temps:          0       2       0       0       0
  2347 ;;      Totals:         0       2       0       0       0
  2348 ;;Total ram usage:        2 bytes
  2349 ;; Hardware stack levels used: 1
  2350 ;; Hardware stack levels required when called: 3
  2351 ;; This function calls:
  2352 ;;		_Lcd_Cmd
  2353 ;;		_Lcd_Port
  2354 ;; This function is called by:
  2355 ;;		_main
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359     023E                     _Lcd_Init:	
  2360                           ;psect for function _Lcd_Init
  2361                           
  2362     023E                     l2206:	
  2363                           ;incstack = 0
  2364                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2365                           
  2366                           
  2367                           ;lcd.c: 42:     TRISD &= ~0xff;
  2368     023E  1683               	bsf	3,5	;RP0=1, select bank1
  2369     023F  1303               	bcf	3,6	;RP1=0, select bank1
  2370     0240  0188               	clrf	8	;volatile
  2371     0241                     l2208:
  2372                           
  2373                           ;lcd.c: 43:     TRISE &= ~0x06;
  2374     0241  30F9               	movlw	249
  2375     0242  1283               	bcf	3,5	;RP0=0, select bank0
  2376     0243  1303               	bcf	3,6	;RP1=0, select bank0
  2377     0244  00A1               	movwf	??_Lcd_Init
  2378     0245  0821               	movf	??_Lcd_Init,w
  2379     0246  1683               	bsf	3,5	;RP0=1, select bank1
  2380     0247  1303               	bcf	3,6	;RP1=0, select bank1
  2381     0248  0589               	andwf	9,f	;volatile
  2382     0249                     l2210:
  2383                           
  2384                           ;lcd.c: 44:     Lcd_Port(0x00);
  2385     0249  3000               	movlw	0
  2386     024A  120A  118A  2453  120A  118A  	fcall	_Lcd_Port
  2387     024F                     l2212:
  2388                           
  2389                           ;lcd.c: 45:     _delay((unsigned long)((20)*(20*1000000/4000.0)));
  2390     024F  3082               	movlw	130
  2391     0250  1283               	bcf	3,5	;RP0=0, select bank0
  2392     0251  1303               	bcf	3,6	;RP1=0, select bank0
  2393     0252  00A2               	movwf	??_Lcd_Init+1
  2394     0253  30DD               	movlw	221
  2395     0254  00A1               	movwf	??_Lcd_Init
  2396     0255                     u2407:
  2397     0255  0BA1               	decfsz	??_Lcd_Init,f
  2398     0256  2A55               	goto	u2407
  2399     0257  0BA2               	decfsz	??_Lcd_Init+1,f
  2400     0258  2A55               	goto	u2407
  2401     0259                     l2214:
  2402                           
  2403                           ;lcd.c: 46:     Lcd_Cmd(0x03);
  2404     0259  3003               	movlw	3
  2405     025A  120A  118A  2430  120A  118A  	fcall	_Lcd_Cmd
  2406     025F                     l2216:
  2407                           
  2408                           ;lcd.c: 47:     _delay((unsigned long)((5)*(20*1000000/4000.0)));
  2409     025F  3021               	movlw	33
  2410     0260  1283               	bcf	3,5	;RP0=0, select bank0
  2411     0261  1303               	bcf	3,6	;RP1=0, select bank0
  2412     0262  00A2               	movwf	??_Lcd_Init+1
  2413     0263  3075               	movlw	117
  2414     0264  00A1               	movwf	??_Lcd_Init
  2415     0265                     u2417:
  2416     0265  0BA1               	decfsz	??_Lcd_Init,f
  2417     0266  2A65               	goto	u2417
  2418     0267  0BA2               	decfsz	??_Lcd_Init+1,f
  2419     0268  2A65               	goto	u2417
  2420     0269  2A6A               	nop2
  2421     026A                     l2218:
  2422                           
  2423                           ;lcd.c: 48:     Lcd_Cmd(0x03);
  2424     026A  3003               	movlw	3
  2425     026B  120A  118A  2430  120A  118A  	fcall	_Lcd_Cmd
  2426     0270                     l2220:
  2427                           
  2428                           ;lcd.c: 49:     _delay((unsigned long)((10)*(20*1000000/4000.0)));
  2429     0270  3041               	movlw	65
  2430     0271  1283               	bcf	3,5	;RP0=0, select bank0
  2431     0272  1303               	bcf	3,6	;RP1=0, select bank0
  2432     0273  00A2               	movwf	??_Lcd_Init+1
  2433     0274  30ED               	movlw	237
  2434     0275  00A1               	movwf	??_Lcd_Init
  2435     0276                     u2427:
  2436     0276  0BA1               	decfsz	??_Lcd_Init,f
  2437     0277  2A76               	goto	u2427
  2438     0278  0BA2               	decfsz	??_Lcd_Init+1,f
  2439     0279  2A76               	goto	u2427
  2440     027A  2A7B               	nop2
  2441     027B                     l2222:
  2442                           
  2443                           ;lcd.c: 50:     Lcd_Cmd(0x03);
  2444     027B  3003               	movlw	3
  2445     027C  120A  118A  2430  120A  118A  	fcall	_Lcd_Cmd
  2446     0281                     l2224:
  2447                           
  2448                           ;lcd.c: 52:     Lcd_Cmd(0x02);
  2449     0281  3002               	movlw	2
  2450     0282  120A  118A  2430  120A  118A  	fcall	_Lcd_Cmd
  2451     0287                     l2226:
  2452                           
  2453                           ;lcd.c: 54:     Lcd_Cmd(0x02);
  2454     0287  3002               	movlw	2
  2455     0288  120A  118A  2430  120A  118A  	fcall	_Lcd_Cmd
  2456     028D                     l2228:
  2457                           
  2458                           ;lcd.c: 55:     Lcd_Cmd(0x08);
  2459     028D  3008               	movlw	8
  2460     028E  120A  118A  2430  120A  118A  	fcall	_Lcd_Cmd
  2461     0293                     l2230:
  2462                           
  2463                           ;lcd.c: 57:     Lcd_Cmd(0x00);
  2464     0293  3000               	movlw	0
  2465     0294  120A  118A  2430  120A  118A  	fcall	_Lcd_Cmd
  2466     0299                     l2232:
  2467                           
  2468                           ;lcd.c: 58:     Lcd_Cmd(0x0C);
  2469     0299  300C               	movlw	12
  2470     029A  120A  118A  2430  120A  118A  	fcall	_Lcd_Cmd
  2471     029F                     l2234:
  2472                           
  2473                           ;lcd.c: 60:     Lcd_Cmd(0x00);
  2474     029F  3000               	movlw	0
  2475     02A0  120A  118A  2430  120A  118A  	fcall	_Lcd_Cmd
  2476     02A5                     l2236:
  2477                           
  2478                           ;lcd.c: 61:     Lcd_Cmd(0x06);
  2479     02A5  3006               	movlw	6
  2480     02A6  120A  118A  2430  120A  118A  	fcall	_Lcd_Cmd
  2481     02AB                     l311:
  2482     02AB  0008               	return
  2483     02AC                     __end_of_Lcd_Init:
  2484                           
  2485                           	psect	text10
  2486     0489                     __ptext10:	
  2487 ;; *************** function _Lcd_Clear *****************
  2488 ;; Defined at:
  2489 ;;		line 64 in file "lcd.c"
  2490 ;; Parameters:    Size  Location     Type
  2491 ;;		None
  2492 ;; Auto vars:     Size  Location     Type
  2493 ;;		None
  2494 ;; Return value:  Size  Location     Type
  2495 ;;                  1    wreg      void 
  2496 ;; Registers used:
  2497 ;;		wreg, status,2, status,0, pclath, cstack
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2503 ;;      Params:         0       0       0       0       0
  2504 ;;      Locals:         0       0       0       0       0
  2505 ;;      Temps:          0       0       0       0       0
  2506 ;;      Totals:         0       0       0       0       0
  2507 ;;Total ram usage:        0 bytes
  2508 ;; Hardware stack levels used: 1
  2509 ;; Hardware stack levels required when called: 3
  2510 ;; This function calls:
  2511 ;;		_Lcd_Cmd
  2512 ;; This function is called by:
  2513 ;;		_main
  2514 ;; This function uses a non-reentrant model
  2515 ;;
  2516                           
  2517     0489                     _Lcd_Clear:	
  2518                           ;psect for function _Lcd_Clear
  2519                           
  2520     0489                     l2262:	
  2521                           ;incstack = 0
  2522                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2523                           
  2524                           
  2525                           ;lcd.c: 66:     Lcd_Cmd(0);
  2526     0489  3000               	movlw	0
  2527     048A  120A  118A  2430  120A  118A  	fcall	_Lcd_Cmd
  2528                           
  2529                           ;lcd.c: 67:     Lcd_Cmd(1);
  2530     048F  3001               	movlw	1
  2531     0490  120A  118A  2430  120A  118A  	fcall	_Lcd_Cmd
  2532     0495                     l314:
  2533     0495  0008               	return
  2534     0496                     __end_of_Lcd_Clear:
  2535                           
  2536                           	psect	text11
  2537     0430                     __ptext11:	
  2538 ;; *************** function _Lcd_Cmd *****************
  2539 ;; Defined at:
  2540 ;;		line 29 in file "lcd.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;  a               1    wreg     unsigned char 
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;  a               1    0[BANK0 ] unsigned char 
  2545 ;; Return value:  Size  Location     Type
  2546 ;;                  1    wreg      void 
  2547 ;; Registers used:
  2548 ;;		wreg, status,2, status,0, pclath, cstack
  2549 ;; Tracked objects:
  2550 ;;		On entry : 0/0
  2551 ;;		On exit  : 0/0
  2552 ;;		Unchanged: 0/0
  2553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2554 ;;      Params:         0       0       0       0       0
  2555 ;;      Locals:         0       1       0       0       0
  2556 ;;      Temps:          2       0       0       0       0
  2557 ;;      Totals:         2       1       0       0       0
  2558 ;;Total ram usage:        3 bytes
  2559 ;; Hardware stack levels used: 1
  2560 ;; Hardware stack levels required when called: 2
  2561 ;; This function calls:
  2562 ;;		_Lcd_Port
  2563 ;; This function is called by:
  2564 ;;		_Lcd_Init
  2565 ;;		_Lcd_Clear
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569     0430                     _Lcd_Cmd:	
  2570                           ;psect for function _Lcd_Cmd
  2571                           
  2572                           
  2573                           ;incstack = 0
  2574                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2575                           ;Lcd_Cmd@a stored from wreg
  2576     0430  1283               	bcf	3,5	;RP0=0, select bank0
  2577     0431  1303               	bcf	3,6	;RP1=0, select bank0
  2578     0432  00A0               	movwf	Lcd_Cmd@a
  2579     0433                     l2124:
  2580                           
  2581                           ;lcd.c: 30:     TRISD &= ~0xff;
  2582     0433  1683               	bsf	3,5	;RP0=1, select bank1
  2583     0434  1303               	bcf	3,6	;RP1=0, select bank1
  2584     0435  0188               	clrf	8	;volatile
  2585     0436                     l2126:
  2586                           
  2587                           ;lcd.c: 31:     TRISE &= ~0x06;
  2588     0436  30F9               	movlw	249
  2589     0437  00F5               	movwf	??_Lcd_Cmd
  2590     0438  0875               	movf	??_Lcd_Cmd,w
  2591     0439  0589               	andwf	9,f	;volatile
  2592     043A                     l2128:
  2593                           
  2594                           ;lcd.c: 34:     PORTEbits.RE2 = 0;
  2595     043A  1283               	bcf	3,5	;RP0=0, select bank0
  2596     043B  1303               	bcf	3,6	;RP1=0, select bank0
  2597     043C  1109               	bcf	9,2	;volatile
  2598     043D                     l2130:
  2599                           
  2600                           ;lcd.c: 35:     Lcd_Port(a);
  2601     043D  0820               	movf	Lcd_Cmd@a,w
  2602     043E  120A  118A  2453  120A  118A  	fcall	_Lcd_Port
  2603     0443                     l2132:
  2604                           
  2605                           ;lcd.c: 36:     PORTEbits.RE1 = 1;
  2606     0443  1283               	bcf	3,5	;RP0=0, select bank0
  2607     0444  1303               	bcf	3,6	;RP1=0, select bank0
  2608     0445  1489               	bsf	9,1	;volatile
  2609     0446                     l2134:
  2610                           
  2611                           ;lcd.c: 37:     _delay((unsigned long)((4)*(20*1000000/4000.0)));
  2612     0446  301A               	movlw	26
  2613     0447  00F6               	movwf	??_Lcd_Cmd+1
  2614     0448  30F8               	movlw	248
  2615     0449  00F5               	movwf	??_Lcd_Cmd
  2616     044A                     u2437:
  2617     044A  0BF5               	decfsz	??_Lcd_Cmd,f
  2618     044B  2C4A               	goto	u2437
  2619     044C  0BF6               	decfsz	??_Lcd_Cmd+1,f
  2620     044D  2C4A               	goto	u2437
  2621     044E  0000               	nop
  2622     044F                     l2136:
  2623                           
  2624                           ;lcd.c: 38:     PORTEbits.RE1 = 0;
  2625     044F  1283               	bcf	3,5	;RP0=0, select bank0
  2626     0450  1303               	bcf	3,6	;RP1=0, select bank0
  2627     0451  1089               	bcf	9,1	;volatile
  2628     0452                     l308:
  2629     0452  0008               	return
  2630     0453                     __end_of_Lcd_Cmd:
  2631                           
  2632                           	psect	text12
  2633     0453                     __ptext12:	
  2634 ;; *************** function _Lcd_Port *****************
  2635 ;; Defined at:
  2636 ;;		line 14 in file "lcd.c"
  2637 ;; Parameters:    Size  Location     Type
  2638 ;;  a               1    wreg     unsigned char 
  2639 ;; Auto vars:     Size  Location     Type
  2640 ;;  a               1    4[COMMON] unsigned char 
  2641 ;; Return value:  Size  Location     Type
  2642 ;;                  1    wreg      void 
  2643 ;; Registers used:
  2644 ;;		wreg
  2645 ;; Tracked objects:
  2646 ;;		On entry : 0/0
  2647 ;;		On exit  : 0/0
  2648 ;;		Unchanged: 0/0
  2649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2650 ;;      Params:         0       0       0       0       0
  2651 ;;      Locals:         1       0       0       0       0
  2652 ;;      Temps:          0       0       0       0       0
  2653 ;;      Totals:         1       0       0       0       0
  2654 ;;Total ram usage:        1 bytes
  2655 ;; Hardware stack levels used: 1
  2656 ;; Hardware stack levels required when called: 1
  2657 ;; This function calls:
  2658 ;;		Nothing
  2659 ;; This function is called by:
  2660 ;;		_Lcd_Cmd
  2661 ;;		_Lcd_Init
  2662 ;;		_Lcd_Write_Char
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           
  2666     0453                     _Lcd_Port:	
  2667                           ;psect for function _Lcd_Port
  2668                           
  2669                           
  2670                           ;incstack = 0
  2671                           ; Regs used in _Lcd_Port: [wreg]
  2672                           ;Lcd_Port@a stored from wreg
  2673     0453  00F4               	movwf	Lcd_Port@a
  2674     0454                     l2086:
  2675                           
  2676                           ;lcd.c: 16:     if (a & 1) PORTDbits.RD4 = 1;
  2677     0454  1C74               	btfss	Lcd_Port@a,0
  2678     0455  2C57               	goto	u1991
  2679     0456  2C58               	goto	u1990
  2680     0457                     u1991:
  2681     0457  2C5C               	goto	l297
  2682     0458                     u1990:
  2683     0458                     l2088:
  2684     0458  1283               	bcf	3,5	;RP0=0, select bank0
  2685     0459  1303               	bcf	3,6	;RP1=0, select bank0
  2686     045A  1608               	bsf	8,4	;volatile
  2687     045B  2C5F               	goto	l298
  2688     045C                     l297:	
  2689                           ;lcd.c: 17:     else PORTDbits.RD4 = 0;
  2690                           
  2691     045C  1283               	bcf	3,5	;RP0=0, select bank0
  2692     045D  1303               	bcf	3,6	;RP1=0, select bank0
  2693     045E  1208               	bcf	8,4	;volatile
  2694     045F                     l298:
  2695                           
  2696                           ;lcd.c: 19:     if (a & 2) PORTDbits.RD5 = 1;
  2697     045F  1CF4               	btfss	Lcd_Port@a,1
  2698     0460  2C62               	goto	u2001
  2699     0461  2C63               	goto	u2000
  2700     0462                     u2001:
  2701     0462  2C65               	goto	l299
  2702     0463                     u2000:
  2703     0463                     l2090:
  2704     0463  1688               	bsf	8,5	;volatile
  2705     0464  2C66               	goto	l300
  2706     0465                     l299:	
  2707                           ;lcd.c: 20:     else PORTDbits.RD5 = 0;
  2708                           
  2709     0465  1288               	bcf	8,5	;volatile
  2710     0466                     l300:
  2711                           
  2712                           ;lcd.c: 22:     if (a & 4) PORTDbits.RD6 = 1;
  2713     0466  1D74               	btfss	Lcd_Port@a,2
  2714     0467  2C69               	goto	u2011
  2715     0468  2C6A               	goto	u2010
  2716     0469                     u2011:
  2717     0469  2C6C               	goto	l301
  2718     046A                     u2010:
  2719     046A                     l2092:
  2720     046A  1708               	bsf	8,6	;volatile
  2721     046B  2C6D               	goto	l302
  2722     046C                     l301:	
  2723                           ;lcd.c: 23:     else PORTDbits.RD6 = 0;
  2724                           
  2725     046C  1308               	bcf	8,6	;volatile
  2726     046D                     l302:
  2727                           
  2728                           ;lcd.c: 25:     if (a & 8) PORTDbits.RD7 = 1;
  2729     046D  1DF4               	btfss	Lcd_Port@a,3
  2730     046E  2C70               	goto	u2021
  2731     046F  2C71               	goto	u2020
  2732     0470                     u2021:
  2733     0470  2C73               	goto	l303
  2734     0471                     u2020:
  2735     0471                     l2094:
  2736     0471  1788               	bsf	8,7	;volatile
  2737     0472  2C74               	goto	l305
  2738     0473                     l303:	
  2739                           ;lcd.c: 26:     else PORTDbits.RD7 = 0;
  2740                           
  2741     0473  1388               	bcf	8,7	;volatile
  2742     0474                     l305:
  2743     0474  0008               	return
  2744     0475                     __end_of_Lcd_Port:
  2745                           
  2746                           	psect	text13
  2747     02AC                     __ptext13:	
  2748 ;; *************** function _ISR *****************
  2749 ;; Defined at:
  2750 ;;		line 87 in file "main.c"
  2751 ;; Parameters:    Size  Location     Type
  2752 ;;		None
  2753 ;; Auto vars:     Size  Location     Type
  2754 ;;		None
  2755 ;; Return value:  Size  Location     Type
  2756 ;;                  1    wreg      void 
  2757 ;; Registers used:
  2758 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2759 ;; Tracked objects:
  2760 ;;		On entry : 0/0
  2761 ;;		On exit  : 0/0
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2764 ;;      Params:         0       0       0       0       0
  2765 ;;      Locals:         0       0       0       0       0
  2766 ;;      Temps:          4       0       0       0       0
  2767 ;;      Totals:         4       0       0       0       0
  2768 ;;Total ram usage:        4 bytes
  2769 ;; Hardware stack levels used: 1
  2770 ;; This function calls:
  2771 ;;		Nothing
  2772 ;; This function is called by:
  2773 ;;		Interrupt level 1
  2774 ;; This function uses a non-reentrant model
  2775 ;;
  2776                           
  2777     02AC                     _ISR:	
  2778                           ;psect for function _ISR
  2779                           
  2780     02AC                     i1l1850:
  2781                           
  2782                           ;main.c: 88:     if (RCIF) {
  2783     02AC  1283               	bcf	3,5	;RP0=0, select bank0
  2784     02AD  1303               	bcf	3,6	;RP1=0, select bank0
  2785     02AE  1E8C               	btfss	12,5	;volatile
  2786     02AF  2AB1               	goto	u149_21
  2787     02B0  2AB2               	goto	u149_20
  2788     02B1                     u149_21:
  2789     02B1  2AC3               	goto	i1l1862
  2790     02B2                     u149_20:
  2791     02B2                     i1l1852:
  2792                           
  2793                           ;main.c: 89:         dato[i++] = RCREG;
  2794     02B2  0841               	movf	_i,w
  2795     02B3  3E45               	addlw	(low (_dato| 0))& (0+255)
  2796     02B4  0084               	movwf	4
  2797     02B5  081A               	movf	26,w	;volatile
  2798     02B6  1383               	bcf	3,7	;select IRP bank0
  2799     02B7  0080               	movwf	0
  2800     02B8                     i1l1854:
  2801     02B8  3001               	movlw	1
  2802     02B9  00F0               	movwf	??_ISR
  2803     02BA  0870               	movf	??_ISR,w
  2804     02BB  07C1               	addwf	_i,f
  2805     02BC                     i1l1856:
  2806                           
  2807                           ;main.c: 90:         dato[i] = '\0';
  2808     02BC  0841               	movf	_i,w
  2809     02BD  3E45               	addlw	(low (_dato| 0))& (0+255)
  2810     02BE  0084               	movwf	4
  2811     02BF  0180               	clrf	0
  2812     02C0                     i1l1858:
  2813                           
  2814                           ;main.c: 91:         received = 1;
  2815     02C0  01C4               	clrf	_received
  2816     02C1  0AC4               	incf	_received,f
  2817     02C2                     i1l1860:
  2818                           
  2819                           ;main.c: 92:         RCIF = 0;
  2820     02C2  128C               	bcf	12,5	;volatile
  2821     02C3                     i1l1862:
  2822                           
  2823                           ;main.c: 94:     if (T0IF) {
  2824     02C3  1D0B               	btfss	11,2	;volatile
  2825     02C4  2AC6               	goto	u150_21
  2826     02C5  2AC7               	goto	u150_20
  2827     02C6                     u150_21:
  2828     02C6  2AE3               	goto	i1l195
  2829     02C7                     u150_20:
  2830     02C7                     i1l1864:
  2831                           
  2832                           ;main.c: 95:         static unsigned int interruptCounter;;main.c: 96:         interrupt
      +                          Counter++;
  2833     02C7  3001               	movlw	1
  2834     02C8  07F7               	addwf	ISR@interruptCounter,f
  2835     02C9  1803               	skipnc
  2836     02CA  0AF8               	incf	ISR@interruptCounter+1,f
  2837     02CB  3000               	movlw	0
  2838     02CC  07F8               	addwf	ISR@interruptCounter+1,f
  2839                           
  2840                           ;main.c: 97:         if (interruptCounter > 3125) {
  2841     02CD  300C               	movlw	12
  2842     02CE  0278               	subwf	ISR@interruptCounter+1,w
  2843     02CF  3036               	movlw	54
  2844     02D0  1903               	skipnz
  2845     02D1  0277               	subwf	ISR@interruptCounter,w
  2846     02D2  1C03               	skipc
  2847     02D3  2AD5               	goto	u151_21
  2848     02D4  2AD6               	goto	u151_20
  2849     02D5                     u151_21:
  2850     02D5  2AE0               	goto	i1l1872
  2851     02D6                     u151_20:
  2852     02D6                     i1l1866:
  2853                           
  2854                           ;main.c: 98:             interruptCounter = 0;
  2855     02D6  01F7               	clrf	ISR@interruptCounter
  2856     02D7  01F8               	clrf	ISR@interruptCounter+1
  2857     02D8                     i1l1868:
  2858                           
  2859                           ;main.c: 99:             PORTB &= ~0x80;
  2860     02D8  307F               	movlw	127
  2861     02D9  00F0               	movwf	??_ISR
  2862     02DA  0870               	movf	??_ISR,w
  2863     02DB  0586               	andwf	6,f	;volatile
  2864     02DC                     i1l1870:
  2865                           
  2866                           ;main.c: 100:             INTCON &= ~0x20;
  2867     02DC  30DF               	movlw	223
  2868     02DD  00F0               	movwf	??_ISR
  2869     02DE  0870               	movf	??_ISR,w
  2870     02DF  058B               	andwf	11,f	;volatile
  2871     02E0                     i1l1872:
  2872                           
  2873                           ;main.c: 102:         TMR0 = 131;
  2874     02E0  3083               	movlw	131
  2875     02E1  0081               	movwf	1	;volatile
  2876     02E2                     i1l1874:
  2877                           
  2878                           ;main.c: 103:         T0IF = 0;
  2879     02E2  110B               	bcf	11,2	;volatile
  2880     02E3                     i1l195:
  2881     02E3  0873               	movf	??_ISR+3,w
  2882     02E4  008A               	movwf	10
  2883     02E5  0872               	movf	??_ISR+2,w
  2884     02E6  0084               	movwf	4
  2885     02E7  0E71               	swapf	??_ISR+1,w
  2886     02E8  0083               	movwf	3
  2887     02E9  0EFE               	swapf	btemp,f
  2888     02EA  0E7E               	swapf	btemp,w
  2889     02EB  0009               	retfie
  2890     02EC                     __end_of_ISR:
  2891     007E                     btemp	set	126	;btemp
  2892     007E                     wtemp0	set	126
  2893                           
  2894                           	psect	intentry
  2895     0004                     __pintentry:	
  2896                           ;incstack = 0
  2897                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0]
  2898                           
  2899     0004                     interrupt_function:
  2900     007E                     saved_w	set	btemp
  2901     0004  00FE               	movwf	btemp
  2902     0005  0E03               	swapf	3,w
  2903     0006  00F1               	movwf	??_ISR+1
  2904     0007  0804               	movf	4,w
  2905     0008  00F2               	movwf	??_ISR+2
  2906     0009  080A               	movf	10,w
  2907     000A  00F3               	movwf	??_ISR+3
  2908     000B  120A  118A  2AAC   	ljmp	_ISR
  2909                           
  2910                           	psect	idloc
  2911                           
  2912                           ;Config register IDLOC0 @ 0x2000
  2913                           ;	unspecified, using default values
  2914     2000                     	org	8192
  2915     2000  3FFF               	dw	16383
  2916                           
  2917                           ;Config register IDLOC1 @ 0x2001
  2918                           ;	unspecified, using default values
  2919     2001                     	org	8193
  2920     2001  3FFF               	dw	16383
  2921                           
  2922                           ;Config register IDLOC2 @ 0x2002
  2923                           ;	unspecified, using default values
  2924     2002                     	org	8194
  2925     2002  3FFF               	dw	16383
  2926                           
  2927                           ;Config register IDLOC3 @ 0x2003
  2928                           ;	unspecified, using default values
  2929     2003                     	org	8195
  2930     2003  3FFF               	dw	16383
  2931                           
  2932                           	psect	config
  2933                           
  2934                           ;Config register CONFIG @ 0x2007
  2935                           ;	Oscillator Selection bits
  2936                           ;	FOSC = HS, HS oscillator
  2937                           ;	Watchdog Timer Enable bit
  2938                           ;	WDTE = OFF, WDT disabled
  2939                           ;	Power-up Timer Enable bit
  2940                           ;	PWRTE = ON, PWRT enabled
  2941                           ;	Brown-out Reset Enable bit
  2942                           ;	BOREN = ON, BOR enabled
  2943                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2944                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  2945                           ;	Data EEPROM Memory Code Protection bit
  2946                           ;	CPD = OFF, Data EEPROM code protection off
  2947                           ;	Flash Program Memory Write Enable bits
  2948                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2949                           ;	In-Circuit Debugger Mode bit
  2950                           ;	DEBUG = 0x1, unprogrammed default
  2951                           ;	Flash Program Memory Code Protection bit
  2952                           ;	CP = OFF, Code protection off
  2953     2007                     	org	8199
  2954     2007  3FF2               	dw	16370

Data Sizes:
    Strings     13
    Constant    34
    Data        0
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     25      39
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 50
		 -> Lcd_Write_Int@buffer(BANK0[50]), dato(BANK0[2]), 

    isEqual@array2	PTR unsigned char  size(1) Largest target is 13
		 -> main@Clear_Display_UART(CODE[6]), STR_3(CODE[13]), main@Led_On_UART(CODE[6]), 

    isEqual@array1	PTR unsigned char  size(1) Largest target is 2
		 -> dato(BANK0[2]), 

    UART_TxString@str	PTR const unsigned char  size(2) Largest target is 50
		 -> main@Clear_Display_UART(CODE[6]), main@Led_On_UART(CODE[6]), STR_1(CODE[13]), UART_TxInt@buffer(BANK0[50]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Write_String
    _main->_UART_TxString
    _main->_isEqual
    _UART_init->___aldiv
    _UART_TxString->_UART_TxChar
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_UART_init
    _UART_init->___aldiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3269
                                             22 BANK0      3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Write_Char
                   _Lcd_Write_String
                        _Numpad_Read
                        _UART_TxChar
                      _UART_TxString
                          _UART_init
                            _isEqual
 ---------------------------------------------------------------------------------
 (2) _isEqual                                              5     4      1     570
                                              4 COMMON     3     2      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            8     4      4     573
                                             14 BANK0      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              4 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _UART_TxString                                        4     2      2     521
                                              6 COMMON     1     1      0
                                              0 BANK0      3     1      2
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (2) _UART_TxChar                                          2     2      0      31
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Numpad_Read                                          6     6      0     393
                                              4 COMMON     2     2      0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     4      0     456
                                              6 COMMON     1     1      0
                                              3 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     254
                                              5 COMMON     1     1      0
                                              0 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                              1 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     155
                                              5 COMMON     2     2      0
                                              0 BANK0      1     1      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
   _Numpad_Read
   _UART_TxChar
   _UART_TxString
     _UART_TxChar
   _UART_init
     ___aldiv
   _isEqual

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      31       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      27       5       48.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      31      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Jan 26 17:35:53 2023

                                   _i 0041                                     pc 0002  
                                  l53 023D                                    l49 0226  
                                  l82 037B                                    l85 047D  
                                  l94 040A                                    l88 0488  
__end_ofSevenSeg_Write@displayPattern 0326          SevenSeg_Write@displayPattern 031C  
                                  fsr 0004              Numpad_Read@currentKeyVal 0021  
                                 l201 03DD                                   l300 0466  
                                 l301 046C                                   l302 046D  
                                 l303 0473                                   l311 02AB  
                                 l305 0474                                   l314 0495  
                                 l323 03B0                                   l308 0452  
                                 l329 042F                                   l177 00D7  
                                 l169 0085                                   l419 0128  
                                 l429 01B0                                   l297 045C  
                                 l298 045F                                   l299 0465  
                                 u610 011B                                   u611 011A  
                                 u700 019D                                   u620 012C  
                                 _ISR 02AC                                   u701 019C  
                                 u621 012B                                   u630 014B  
                                 u631 014A                                   u650 015F  
                                 u651 015E                                   u645 0150  
                                 u670 017A                                   u671 0179  
                                 u665 0161                                   u690 0198  
                                 u691 0197                                   u675 0176  
                                 u685 018A                                   fsr0 0004  
                                 indf 0000                                  ?_ISR 0070  
                                l2100 0482                                  l2110 0394  
                                l2102 0486                                  l2120 03A8  
                                l2112 0397                                  l2104 037F  
                                l2200 03E2                                  l2130 043D  
                                l2210 0249                                  l2122 03AD  
                                l2114 039C                                  l2106 0385  
                                l2202 03F3                                  l2132 0443  
                                l2124 0433                                  l2220 0270  
                                l2212 024F                                  l2116 039F  
                                l2108 0386                                  l2140 01BB  
                                l2204 03F9                                  l2134 0446  
                                l2126 0436                                  l2230 0293  
                                l2222 027B                                  l2214 0259  
                                l2206 023E                                  l2118 03A5  
                                l2150 01D9                                  l1350 012C  
                                l2310 0030                                  l2136 044F  
                                l2128 043A                                  l2232 0299  
                                l2224 0281                                  l2216 025F  
                                l2208 0241                                  l2160 01F2  
                                l1360 014E                                  l1352 0137  
                                l1344 0114                                  l2240 03B6  
                                l2320 004E                                  l2312 0033  
                                l2090 0463                                  l2234 029F  
                                l2226 0287                                  l2218 026A  
                                l2170 0224                                  l2162 0206  
                                l2146 01BE                                  l2138 01B1  
                                l1370 0188                                  l1362 015B  
                                l1354 013B                                  l1346 0117  
                                l2250 03DC                                  l2242 03CA  
                                l2322 004E                                  l2314 0034  
                                l2092 046A                                  l2236 02A5  
                                l2228 028D                                  l2260 0424  
                                l2180 0236                                  l2164 0208  
                                l2156 01DC                                  l2148 01D0  
                                l1380 01A8                                  l1372 0189  
                                l1364 015F                                  l1356 0143  
                                l1348 011B                                  l2244 03CF  
                                l2340 009C                                  l2324 0057  
                                l2332 0072                                  l2316 003A  
                                l2308 0028                                  l2094 0471  
                                l2086 0454                                  l2262 0489  
                                l2254 040E                                  l2182 023C  
                                l2174 0228                                  l2166 0214  
                                l2158 01ED                                  l1374 0192  
                                l1366 0168                                  l1358 014B  
                                l2190 034B                                  l2238 03B4  
                                l2350 00BD                                  l2342 00A9  
                                l2334 0088                                  l2414 007A  
                                l2326 0061                                  l2318 0049  
                                l2088 0458                                  l2256 0411  
                                l2176 022C                                  l2168 021D  
                                l2096 0476                                  l1368 017A  
                                l1376 0198                                  l2192 0378  
                                l2248 03D1                                  l2352 00C4  
                                l2344 00AC                                  l2336 008F  
                                l2360 00DB                                  l2328 0068  
                                l2258 041C                                  l2178 0232  
                                l2098 047C                                  l1378 019D  
                                l2194 0379                                  l2186 033F  
                                l2370 00F9                                  l2362 00DF  
                                l2354 00D1                                  l2346 00AE  
                                l2338 0095                                  l2196 037A  
                                l2188 0347                                  l2372 00FE  
                                l2364 00E4                                  l2348 00B0  
                                l2356 00D7                                  l2198 03DE  
                                l2374 0103                                  l2366 00E9  
                                l2358 00DA                                  l2368 00F3  
                                l2376 010C                                  STR_1 0332  
                                STR_3 0332                                  _T0IF 005A  
                                u2000 0463                                  u2001 0462  
                                u2010 046A                                  u2011 0469  
                                u2020 0471                                  u2021 0470  
                                u2110 0224                                  u2030 0482  
                                u2111 0223                                  u2031 0481  
                                u2120 0232                                  u2104 020E  
                                u2121 0231                                  u2105 020C  
                                u2130 023C                                  u2131 023B  
                                u2140 0359                                  u2300 00D1  
                                u2045 0389                                  u2301 00D0  
                                u2070 01ED                                  u2054 01C8  
                                u2150 040A                                  u2310 00E4  
                                u2071 01EC                                  u2055 01C6  
                                u2151 0409                                  u2311 00E3  
                                u2080 01F2                                  u2064 01E2  
                                u2160 03CA                                  u2320 00E9  
                                u2081 01F1                                  u2065 01E0  
                                u2145 0354                                  u2161 03C9  
                                u2321 00E8                                  u2170 03DC  
                                u2330 00FE                                  u2171 03DB  
                                u2331 00FD                                  u2180 042F  
                                u2340 0103                                  u2260 008F  
                                u2181 042E                                  u2341 0102  
                                u2261 008E                                  u2270 0095  
                                u2407 0255                                  u2095 01F5  
                                u2271 0094                                  u2280 00A9  
                                u2417 0265                                  u2281 00A8  
                                u2290 00BD                                  u2427 0276  
                                u2291 00BC                                  u2437 044A  
                                u2357 00EF                                  u2367 01D4  
                                _PIE1 008C                                  u2377 0218  
                                u2387 0399                                  u2397 03AA  
                                u1990 0458                                  u1991 0457  
                                _RCIF 0065                                  _PIR1 000C  
                                _TMR0 0001                     ?_Lcd_Write_String 0070  
                                _dato 0045                                  _main 0028  
                                btemp 007E                                  start 000E  
                  ??_Lcd_Write_String 0076                         isEqual@array1 0020  
                       isEqual@array2 0074                       __end_of_Lcd_Cmd 0453  
              main@Clear_Display_UART 0326                                 ??_ISR 0070  
                     __end_of___aldiv 01B1                                 ?_main 0070  
                               i1l195 02E3                                 _RCREG 001A  
                               _RCSTA 0018                                 _SPBRG 0099  
                               _PORTB 0006                                 _PORTD 0008  
                               _TRISA 0085                                 _TRISB 0086  
                               _TRISC 0087                                 _TRISD 0088  
                               _TRISE 0089                                 _TXREG 0019  
                               _TXSTA 0098                       __end_of_isEqual 03DE  
                     main@Led_On_UART 032C                                 pclath 000A  
                               status 0003                                 wtemp0 007E  
                    __end_of_Lcd_Init 02AC                      __end_of_Lcd_Port 0475  
                     __initialization 0011                          __end_of_main 0114  
        pid_controller@previous_error 003D                                ??_main 0036  
                              _ADCON0 001F                                _ADCON1 009F  
                              _ADRESH 001E                                _ADRESL 009E  
                              i1l1850 02AC                                i1l1860 02C2  
                              i1l1852 02B2                                i1l1870 02DC  
                              i1l1854 02B8                                i1l1862 02C3  
                              i1l1872 02E0                                i1l1864 02C7  
                              i1l1856 02BC                                i1l1874 02E2  
                              i1l1866 02D6                                i1l1858 02C0  
                              i1l1868 02D8                                u150_20 02C7  
                              u150_21 02C6                                u151_20 02D6  
                              u151_21 02D5                                _INTCON 000B  
                              u149_20 02B2                                u149_21 02B1  
                           ??_Lcd_Cmd 0075                          ?_UART_TxChar 0070  
                           ??___aldiv 0074                     __end_of_UART_init 037C  
              pid_controller@integral 0039                                _button 0043  
                              _keypad 0310               __end_ofmain@Led_On_UART 0332  
                           ??_isEqual 0075                         ??_Numpad_Read 0074  
                              saved_w 007E               __end_of__initialization 0024  
                   __end_of_Lcd_Clear 0496                 __end_of_UART_TxString 040B  
                      __pcstackCOMMON 0070                   ISR@interruptCounter 0077  
                           ?_Lcd_Init 0070                             ?_Lcd_Port 0070  
                 __end_of_Numpad_Read 023E                            __pbssBANK0 0039  
                          __pmaintext 0028                            __pintentry 0004  
                          ??_Lcd_Init 0021                            ??_Lcd_Port 0074  
                          __stringtab 0300                        _Lcd_Write_Char 037C  
                             _Lcd_Cmd 0430        __end_ofmain@Clear_Display_UART 032C  
                             ___aldiv 0114                               __ptext1 03B1  
                             __ptext2 033F                               __ptext3 0114  
                             __ptext4 03DE                               __ptext5 0475  
                             __ptext6 01B1                               __ptext7 040B  
                             __ptext8 037C                               __ptext9 023E  
                             _isEqual 03B1                            _old_button 0042  
                         _Numpad_Read 01B1                      ___aldiv@dividend 0024  
                Numpad_Read@oldKeyVal 0079                __end_of_Lcd_Write_Char 03B1  
                end_of_initialization 0024                        UART_TxString@i 0022  
                 main@numpadSelection 0038                      ___aldiv@quotient 002A  
                           Lcd_Port@a 0074                             _PORTBbits 0006  
                           _UART_init 033F                             _PORTDbits 0008  
                           _PORTEbits 0009                       ?_Lcd_Write_Char 0070  
                   Lcd_Write_String@a 0025                     Lcd_Write_String@i 0023  
                           _Lcd_Clear 0489                      _Lcd_Write_String 040B  
                          ?_UART_init 002E                        __end_of_keypad 031C  
                 start_initialization 0011                           __end_of_ISR 02EC  
                  Numpad_Read@colScan 0022                            ?_Lcd_Clear 0070  
                     Lcd_Write_Char@a 0022                       Lcd_Write_Char@y 0021  
                  Numpad_Read@rowScan 0023                           __pbssCOMMON 0077  
                           ___latbits 0002                         __pcstackBANK0 0020  
                            ?_Lcd_Cmd 0070                              ?___aldiv 0020  
                           __pstrings 0300                           ??_UART_init 0032  
                            ?_isEqual 0074                          ?_Numpad_Read 0070  
                       UART_TxChar@ch 0075                       ___aldiv@divisor 0020  
                   interrupt_function 0004                       ___aldiv@counter 0028  
                       ??_UART_TxChar 0074                         _UART_TxString 03DE  
                            Lcd_Cmd@a 0020                           ??_Lcd_Clear 0077  
                         __stringbase 030F                      ??_Lcd_Write_Char 0075  
                            _Lcd_Init 023E                              _Lcd_Port 0453  
            __end_of_Lcd_Write_String 0430                        ?_UART_TxString 0020  
                 __end_of_UART_TxChar 0489                    __end_of__stringtab 0310  
                            __ptext10 0489                              __ptext11 0430  
                            __ptext12 0453                              __ptext13 02AC  
                    UART_TxString@str 0020                              _received 0044  
                            isEqual@j 0021                 Numpad_Read@currentKey 0020  
                  Lcd_Write_Char@temp 0020                              intlevel1 0000  
                   UART_init@baudrate 002E                       ??_UART_TxString 0076  
                           stringcode 030A                           _UART_TxChar 0475  
                          _OPTION_REG 0081                              stringdir 030A  
                            stringtab 0300                          ___aldiv@sign 0029  
