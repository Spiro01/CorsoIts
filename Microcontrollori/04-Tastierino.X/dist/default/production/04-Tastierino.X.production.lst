

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Dec 19 13:06:13 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18     0000                     
    19                           ; Version 2.40
    20                           ; Generated 17/11/2021 GMT
    21                           ; 
    22                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54     0000                     	;# 
    55     0001                     	;# 
    56     0002                     	;# 
    57     0003                     	;# 
    58     0004                     	;# 
    59     0005                     	;# 
    60     0006                     	;# 
    61     0007                     	;# 
    62     0008                     	;# 
    63     0009                     	;# 
    64     000A                     	;# 
    65     000B                     	;# 
    66     000C                     	;# 
    67     000D                     	;# 
    68     000E                     	;# 
    69     000E                     	;# 
    70     000F                     	;# 
    71     0010                     	;# 
    72     0011                     	;# 
    73     0012                     	;# 
    74     0013                     	;# 
    75     0014                     	;# 
    76     0015                     	;# 
    77     0015                     	;# 
    78     0016                     	;# 
    79     0017                     	;# 
    80     0018                     	;# 
    81     0019                     	;# 
    82     001A                     	;# 
    83     001B                     	;# 
    84     001B                     	;# 
    85     001C                     	;# 
    86     001D                     	;# 
    87     001E                     	;# 
    88     001F                     	;# 
    89     0081                     	;# 
    90     0085                     	;# 
    91     0086                     	;# 
    92     0087                     	;# 
    93     0088                     	;# 
    94     0089                     	;# 
    95     008C                     	;# 
    96     008D                     	;# 
    97     008E                     	;# 
    98     0091                     	;# 
    99     0092                     	;# 
   100     0093                     	;# 
   101     0094                     	;# 
   102     0098                     	;# 
   103     0099                     	;# 
   104     009C                     	;# 
   105     009D                     	;# 
   106     009E                     	;# 
   107     009F                     	;# 
   108     010C                     	;# 
   109     010D                     	;# 
   110     010E                     	;# 
   111     010F                     	;# 
   112     018C                     	;# 
   113     018D                     	;# 
   114     0000                     	;# 
   115     0001                     	;# 
   116     0002                     	;# 
   117     0003                     	;# 
   118     0004                     	;# 
   119     0005                     	;# 
   120     0006                     	;# 
   121     0007                     	;# 
   122     0008                     	;# 
   123     0009                     	;# 
   124     000A                     	;# 
   125     000B                     	;# 
   126     000C                     	;# 
   127     000D                     	;# 
   128     000E                     	;# 
   129     000E                     	;# 
   130     000F                     	;# 
   131     0010                     	;# 
   132     0011                     	;# 
   133     0012                     	;# 
   134     0013                     	;# 
   135     0014                     	;# 
   136     0015                     	;# 
   137     0015                     	;# 
   138     0016                     	;# 
   139     0017                     	;# 
   140     0018                     	;# 
   141     0019                     	;# 
   142     001A                     	;# 
   143     001B                     	;# 
   144     001B                     	;# 
   145     001C                     	;# 
   146     001D                     	;# 
   147     001E                     	;# 
   148     001F                     	;# 
   149     0081                     	;# 
   150     0085                     	;# 
   151     0086                     	;# 
   152     0087                     	;# 
   153     0088                     	;# 
   154     0089                     	;# 
   155     008C                     	;# 
   156     008D                     	;# 
   157     008E                     	;# 
   158     0091                     	;# 
   159     0092                     	;# 
   160     0093                     	;# 
   161     0094                     	;# 
   162     0098                     	;# 
   163     0099                     	;# 
   164     009C                     	;# 
   165     009D                     	;# 
   166     009E                     	;# 
   167     009F                     	;# 
   168     010C                     	;# 
   169     010D                     	;# 
   170     010E                     	;# 
   171     010F                     	;# 
   172     018C                     	;# 
   173     018D                     	;# 
   174                           
   175                           	psect	strings
   176     0003                     __pstrings:
   177     0003                     stringtab:
   178     0003                     __stringtab:
   179     0003                     stringcode:	
   180                           ;	String table - string pointers are 1 byte each
   181                           
   182     0003                     stringdir:
   183     0003  3000               	movlw	high stringdir
   184     0004  008A               	movwf	10
   185     0005  0804               	movf	4,w
   186     0006  0A84               	incf	4,f
   187     0007  0782               	addwf	2,f
   188     0008                     __stringbase:
   189     0008  3400               	retlw	0
   190     0009                     __end_of__stringtab:
   191     0009                     _keypad:
   192     0009  342A               	retlw	42
   193     000A  3407               	retlw	7
   194     000B  3404               	retlw	4
   195     000C  3401               	retlw	1
   196     000D  3400               	retlw	0
   197     000E  3408               	retlw	8
   198     000F  3405               	retlw	5
   199     0010  3402               	retlw	2
   200     0011  3423               	retlw	35
   201     0012  3409               	retlw	9
   202     0013  3406               	retlw	6
   203     0014  3403               	retlw	3
   204     0015                     __end_of_keypad:
   205     0008                     _PORTD	set	8
   206     0006                     _PORTB	set	6
   207     0086                     _TRISB	set	134
   208     0088                     _TRISD	set	136
   209                           
   210                           	psect	cinit
   211     07F9                     start_initialization:	
   212                           ; #config settings
   213                           
   214     07F9                     __initialization:
   215                           
   216                           ; Clear objects allocated to BANK0
   217     07F9  1283               	bcf	3,5	;RP0=0, select bank0
   218     07FA  1303               	bcf	3,6	;RP1=0, select bank0
   219     07FB  01A6               	clrf	__pbssBANK0& (0+127)
   220     07FC                     end_of_initialization:	
   221                           ;End of C runtime variable initialization code
   222                           
   223     07FC                     __end_of__initialization:
   224     07FC  0183               	clrf	3
   225     07FD  120A  118A  2E4A   	ljmp	_main	;jump to C main() function
   226                           
   227                           	psect	bssBANK0
   228     0026                     __pbssBANK0:
   229     0026                     Numpad_Read@oldKeyVal:
   230     0026                     	ds	1
   231                           
   232                           	psect	cstackCOMMON
   233     0070                     __pcstackCOMMON:
   234     0070                     ?_NumPad_Init:
   235     0070                     ??_NumPad_Init:	
   236                           ; 1 bytes @ 0x0
   237                           
   238     0070                     ?_Numpad_Read:	
   239                           ; 1 bytes @ 0x0
   240                           
   241     0070                     ??_Numpad_Read:	
   242                           ; 1 bytes @ 0x0
   243                           
   244     0070                     ?_Print_Led:	
   245                           ; 1 bytes @ 0x0
   246                           
   247     0070                     ?_main:	
   248                           ; 1 bytes @ 0x0
   249                           
   250     0070                     ?___awdiv:	
   251                           ; 1 bytes @ 0x0
   252                           
   253     0070                     ?___awmod:	
   254                           ; 2 bytes @ 0x0
   255                           
   256     0070                     ___awdiv@divisor:	
   257                           ; 2 bytes @ 0x0
   258                           
   259     0070                     ___awmod@divisor:	
   260                           ; 2 bytes @ 0x0
   261                           
   262                           
   263                           ; 2 bytes @ 0x0
   264     0070                     	ds	2
   265     0072                     Numpad_Read@currentKeyVal:
   266     0072                     ___awdiv@dividend:	
   267                           ; 1 bytes @ 0x2
   268                           
   269     0072                     ___awmod@dividend:	
   270                           ; 2 bytes @ 0x2
   271                           
   272                           
   273                           ; 2 bytes @ 0x2
   274     0072                     	ds	1
   275     0073                     Numpad_Read@currentKey:
   276                           
   277                           ; 1 bytes @ 0x3
   278     0073                     	ds	1
   279     0074                     ??___awdiv:
   280     0074                     ??___awmod:	
   281                           ; 1 bytes @ 0x4
   282                           
   283     0074                     Numpad_Read@colScan:	
   284                           ; 1 bytes @ 0x4
   285                           
   286                           
   287                           ; 1 bytes @ 0x4
   288     0074                     	ds	1
   289     0075                     Numpad_Read@rowScan:
   290     0075                     ___awdiv@counter:	
   291                           ; 1 bytes @ 0x5
   292                           
   293     0075                     ___awmod@counter:	
   294                           ; 1 bytes @ 0x5
   295                           
   296                           
   297                           ; 1 bytes @ 0x5
   298     0075                     	ds	1
   299     0076                     ___awdiv@sign:
   300     0076                     ___awmod@sign:	
   301                           ; 1 bytes @ 0x6
   302                           
   303                           
   304                           ; 1 bytes @ 0x6
   305     0076                     	ds	1
   306     0077                     ___awdiv@quotient:
   307                           
   308                           ; 2 bytes @ 0x7
   309     0077                     	ds	2
   310     0079                     ??_Print_Led:
   311                           
   312                           ; 1 bytes @ 0x9
   313     0079                     	ds	4
   314     007D                     Print_Led@value:
   315                           
   316                           ; 1 bytes @ 0xD
   317     007D                     	ds	1
   318                           
   319                           	psect	cstackBANK0
   320     0020                     __pcstackBANK0:
   321     0020                     ??_main:
   322                           
   323                           ; 1 bytes @ 0x0
   324     0020                     	ds	1
   325     0021                     main@risultato:
   326                           
   327                           ; 1 bytes @ 0x1
   328     0021                     	ds	1
   329     0022                     main@operatore:
   330                           
   331                           ; 2 bytes @ 0x2
   332     0022                     	ds	2
   333     0024                     main@selettore:
   334                           
   335                           ; 1 bytes @ 0x4
   336     0024                     	ds	1
   337     0025                     main@read:
   338                           
   339                           ; 1 bytes @ 0x5
   340     0025                     	ds	1
   341                           
   342                           	psect	maintext
   343     064A                     __pmaintext:	
   344 ;;
   345 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   346 ;;
   347 ;; *************** function _main *****************
   348 ;; Defined at:
   349 ;;		line 27 in file "main.c"
   350 ;; Parameters:    Size  Location     Type
   351 ;;		None
   352 ;; Auto vars:     Size  Location     Type
   353 ;;  operatore       2    2[BANK0 ] unsigned char [2]
   354 ;;  read            1    5[BANK0 ] unsigned char 
   355 ;;  selettore       1    4[BANK0 ] unsigned char 
   356 ;;  risultato       1    1[BANK0 ] unsigned char 
   357 ;; Return value:  Size  Location     Type
   358 ;;                  1    wreg      void 
   359 ;; Registers used:
   360 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   361 ;; Tracked objects:
   362 ;;		On entry : B00/0
   363 ;;		On exit  : 0/0
   364 ;;		Unchanged: 0/0
   365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   366 ;;      Params:         0       0       0       0       0
   367 ;;      Locals:         0       5       0       0       0
   368 ;;      Temps:          0       1       0       0       0
   369 ;;      Totals:         0       6       0       0       0
   370 ;;Total ram usage:        6 bytes
   371 ;; Hardware stack levels required when called: 2
   372 ;; This function calls:
   373 ;;		_NumPad_Init
   374 ;;		_Numpad_Read
   375 ;;		_Print_Led
   376 ;; This function is called by:
   377 ;;		Startup code after reset
   378 ;; This function uses a non-reentrant model
   379 ;;
   380                           
   381     064A                     _main:	
   382                           ;psect for function _main
   383                           
   384     064A                     l922:	
   385                           ;incstack = 0
   386                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   387                           
   388                           
   389                           ;main.c: 28:     NumPad_Init();
   390     064A  120A  118A  2644  120A  118A  	fcall	_NumPad_Init
   391     064F                     l924:
   392     064F                     l926:
   393                           
   394                           ;main.c: 34:         read = Numpad_Read();
   395     064F  120A  118A  272C  120A  118A  	fcall	_Numpad_Read
   396     0654  1283               	bcf	3,5	;RP0=0, select bank0
   397     0655  1303               	bcf	3,6	;RP1=0, select bank0
   398     0656  00A5               	movwf	main@read
   399     0657                     l928:
   400                           
   401                           ;main.c: 36:         if (read >= 0 && read <= 9) {
   402     0657  300A               	movlw	10
   403     0658  0225               	subwf	main@read,w
   404     0659  1803               	skipnc
   405     065A  2E5C               	goto	u611
   406     065B  2E5D               	goto	u610
   407     065C                     u611:
   408     065C  2E64               	goto	l932
   409     065D                     u610:
   410     065D                     l930:
   411                           
   412                           ;main.c: 37:             operatore[selettore] = read;
   413     065D  0824               	movf	main@selettore,w
   414     065E  3E22               	addlw	(low (main@operatore| 0))& (0+255)
   415     065F  0084               	movwf	4
   416     0660  0825               	movf	main@read,w
   417     0661  1383               	bcf	3,7	;select IRP bank0
   418     0662  0080               	movwf	0
   419                           
   420                           ;main.c: 38:         } else if (read == '*') {
   421     0663  2E4F               	goto	l926
   422     0664                     l932:
   423     0664  302A               	movlw	42
   424     0665  0625               	xorwf	main@read,w
   425     0666  1D03               	btfss	3,2
   426     0667  2E69               	goto	u621
   427     0668  2E6A               	goto	u620
   428     0669                     u621:
   429     0669  2E74               	goto	l938
   430     066A                     u620:
   431     066A                     l934:
   432                           
   433                           ;main.c: 39:             if (selettore < 1)selettore++;
   434     066A  0824               	movf	main@selettore,w
   435     066B  1D03               	btfss	3,2
   436     066C  2E6E               	goto	u631
   437     066D  2E6F               	goto	u630
   438     066E                     u631:
   439     066E  2E85               	goto	l35
   440     066F                     u630:
   441     066F                     l936:
   442     066F  3001               	movlw	1
   443     0670  00A0               	movwf	??_main
   444     0671  0820               	movf	??_main,w
   445     0672  07A4               	addwf	main@selettore,f
   446     0673  2E4F               	goto	l926
   447     0674                     l938:
   448     0674  3023               	movlw	35
   449     0675  0625               	xorwf	main@read,w
   450     0676  1D03               	btfss	3,2
   451     0677  2E79               	goto	u641
   452     0678  2E7A               	goto	u640
   453     0679                     u641:
   454     0679  2E85               	goto	l35
   455     067A                     u640:
   456     067A                     l940:
   457                           
   458                           ;main.c: 41:             risultato = operatore[0] + operatore[1];
   459     067A  0822               	movf	main@operatore,w
   460     067B  0723               	addwf	main@operatore+1,w
   461     067C  00A1               	movwf	main@risultato
   462     067D                     l942:
   463                           
   464                           ;main.c: 42:             selettore = 0;
   465     067D  01A4               	clrf	main@selettore
   466     067E                     l944:
   467                           
   468                           ;main.c: 43:             Print_Led(risultato);
   469     067E  0821               	movf	main@risultato,w
   470     067F  120A  118A  2689  120A  118A  	fcall	_Print_Led
   471     0684  2E4F               	goto	l926
   472     0685                     l35:
   473     0685  2E4F               	goto	l926
   474     0686  120A  118A  2800   	ljmp	start
   475     0689                     __end_of_main:
   476                           
   477                           	psect	text1
   478     0689                     __ptext1:	
   479 ;; *************** function _Print_Led *****************
   480 ;; Defined at:
   481 ;;		line 4 in file "./ledpint.h"
   482 ;; Parameters:    Size  Location     Type
   483 ;;  value           1    wreg     unsigned char 
   484 ;; Auto vars:     Size  Location     Type
   485 ;;  value           1   13[COMMON] unsigned char 
   486 ;; Return value:  Size  Location     Type
   487 ;;                  1    wreg      void 
   488 ;; Registers used:
   489 ;;		wreg, status,2, status,0, pclath, cstack
   490 ;; Tracked objects:
   491 ;;		On entry : 0/0
   492 ;;		On exit  : 0/0
   493 ;;		Unchanged: 0/0
   494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   495 ;;      Params:         0       0       0       0       0
   496 ;;      Locals:         1       0       0       0       0
   497 ;;      Temps:          4       0       0       0       0
   498 ;;      Totals:         5       0       0       0       0
   499 ;;Total ram usage:        5 bytes
   500 ;; Hardware stack levels used: 1
   501 ;; Hardware stack levels required when called: 1
   502 ;; This function calls:
   503 ;;		___awdiv
   504 ;;		___awmod
   505 ;; This function is called by:
   506 ;;		_main
   507 ;; This function uses a non-reentrant model
   508 ;;
   509                           
   510     0689                     _Print_Led:	
   511                           ;psect for function _Print_Led
   512                           
   513                           
   514                           ;incstack = 0
   515                           ; Regs used in _Print_Led: [wreg+status,2+status,0+pclath+cstack]
   516                           ;Print_Led@value stored from wreg
   517     0689  00FD               	movwf	Print_Led@value
   518     068A                     l916:
   519                           
   520                           ;./ledpint.h: 5:     PORTD &= 0x0f;
   521     068A  300F               	movlw	15
   522     068B  00F9               	movwf	??_Print_Led
   523     068C  0879               	movf	??_Print_Led,w
   524     068D  1283               	bcf	3,5	;RP0=0, select bank0
   525     068E  1303               	bcf	3,6	;RP1=0, select bank0
   526     068F  0588               	andwf	8,f	;volatile
   527                           
   528                           ;./ledpint.h: 6:     PORTB &= 0x07;
   529     0690  3007               	movlw	7
   530     0691  00F9               	movwf	??_Print_Led
   531     0692  0879               	movf	??_Print_Led,w
   532     0693  0586               	andwf	6,f	;volatile
   533     0694                     l918:
   534                           
   535                           ;./ledpint.h: 9:     PORTD |= (value/10) <<4;
   536     0694  300A               	movlw	10
   537     0695  00F0               	movwf	___awdiv@divisor
   538     0696  3000               	movlw	0
   539     0697  00F1               	movwf	___awdiv@divisor+1
   540     0698  087D               	movf	Print_Led@value,w
   541     0699  00F9               	movwf	??_Print_Led
   542     069A  01FA               	clrf	??_Print_Led+1
   543     069B  0879               	movf	??_Print_Led,w
   544     069C  00F2               	movwf	___awdiv@dividend
   545     069D  087A               	movf	??_Print_Led+1,w
   546     069E  00F3               	movwf	___awdiv@dividend+1
   547     069F  120A  118A  2792  120A  118A  	fcall	___awdiv
   548     06A4  0870               	movf	?___awdiv,w
   549     06A5  00FB               	movwf	??_Print_Led+2
   550     06A6  3003               	movlw	3
   551     06A7                     u595:
   552     06A7  1003               	clrc
   553     06A8  0DFB               	rlf	??_Print_Led+2,f
   554     06A9  3EFF               	addlw	-1
   555     06AA  1D03               	skipz
   556     06AB  2EA7               	goto	u595
   557     06AC  1003               	clrc
   558     06AD  0D7B               	rlf	??_Print_Led+2,w
   559     06AE  00FC               	movwf	??_Print_Led+3
   560     06AF  087C               	movf	??_Print_Led+3,w
   561     06B0  1283               	bcf	3,5	;RP0=0, select bank0
   562     06B1  1303               	bcf	3,6	;RP1=0, select bank0
   563     06B2  0488               	iorwf	8,f	;volatile
   564     06B3                     l920:
   565                           
   566                           ;./ledpint.h: 10:     PORTB |= (value%10) <<4;
   567     06B3  300A               	movlw	10
   568     06B4  00F0               	movwf	___awmod@divisor
   569     06B5  3000               	movlw	0
   570     06B6  00F1               	movwf	___awmod@divisor+1
   571     06B7  087D               	movf	Print_Led@value,w
   572     06B8  00F9               	movwf	??_Print_Led
   573     06B9  01FA               	clrf	??_Print_Led+1
   574     06BA  0879               	movf	??_Print_Led,w
   575     06BB  00F2               	movwf	___awmod@dividend
   576     06BC  087A               	movf	??_Print_Led+1,w
   577     06BD  00F3               	movwf	___awmod@dividend+1
   578     06BE  120A  118A  26D3  120A  118A  	fcall	___awmod
   579     06C3  0870               	movf	?___awmod,w
   580     06C4  00FB               	movwf	??_Print_Led+2
   581     06C5  3003               	movlw	3
   582     06C6                     u605:
   583     06C6  1003               	clrc
   584     06C7  0DFB               	rlf	??_Print_Led+2,f
   585     06C8  3EFF               	addlw	-1
   586     06C9  1D03               	skipz
   587     06CA  2EC6               	goto	u605
   588     06CB  1003               	clrc
   589     06CC  0D7B               	rlf	??_Print_Led+2,w
   590     06CD  00FC               	movwf	??_Print_Led+3
   591     06CE  087C               	movf	??_Print_Led+3,w
   592     06CF  1283               	bcf	3,5	;RP0=0, select bank0
   593     06D0  1303               	bcf	3,6	;RP1=0, select bank0
   594     06D1  0486               	iorwf	6,f	;volatile
   595     06D2                     l28:
   596     06D2  0008               	return
   597     06D3                     __end_of_Print_Led:
   598                           
   599                           	psect	text2
   600     06D3                     __ptext2:	
   601 ;; *************** function ___awmod *****************
   602 ;; Defined at:
   603 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
   604 ;; Parameters:    Size  Location     Type
   605 ;;  divisor         2    0[COMMON] int 
   606 ;;  dividend        2    2[COMMON] int 
   607 ;; Auto vars:     Size  Location     Type
   608 ;;  sign            1    6[COMMON] unsigned char 
   609 ;;  counter         1    5[COMMON] unsigned char 
   610 ;; Return value:  Size  Location     Type
   611 ;;                  2    0[COMMON] int 
   612 ;; Registers used:
   613 ;;		wreg, status,2, status,0
   614 ;; Tracked objects:
   615 ;;		On entry : 0/0
   616 ;;		On exit  : 0/0
   617 ;;		Unchanged: 0/0
   618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   619 ;;      Params:         4       0       0       0       0
   620 ;;      Locals:         2       0       0       0       0
   621 ;;      Temps:          1       0       0       0       0
   622 ;;      Totals:         7       0       0       0       0
   623 ;;Total ram usage:        7 bytes
   624 ;; Hardware stack levels used: 1
   625 ;; This function calls:
   626 ;;		Nothing
   627 ;; This function is called by:
   628 ;;		_Print_Led
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632     06D3                     ___awmod:	
   633                           ;psect for function ___awmod
   634                           
   635     06D3                     l834:	
   636                           ;incstack = 0
   637                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   638                           
   639     06D3  01F6               	clrf	___awmod@sign
   640     06D4                     l836:
   641     06D4  1FF3               	btfss	___awmod@dividend+1,7
   642     06D5  2ED7               	goto	u431
   643     06D6  2ED8               	goto	u430
   644     06D7                     u431:
   645     06D7  2EDF               	goto	l842
   646     06D8                     u430:
   647     06D8                     l838:
   648     06D8  09F2               	comf	___awmod@dividend,f
   649     06D9  09F3               	comf	___awmod@dividend+1,f
   650     06DA  0AF2               	incf	___awmod@dividend,f
   651     06DB  1903               	skipnz
   652     06DC  0AF3               	incf	___awmod@dividend+1,f
   653     06DD                     l840:
   654     06DD  01F6               	clrf	___awmod@sign
   655     06DE  0AF6               	incf	___awmod@sign,f
   656     06DF                     l842:
   657     06DF  1FF1               	btfss	___awmod@divisor+1,7
   658     06E0  2EE2               	goto	u441
   659     06E1  2EE3               	goto	u440
   660     06E2                     u441:
   661     06E2  2EE8               	goto	l846
   662     06E3                     u440:
   663     06E3                     l844:
   664     06E3  09F0               	comf	___awmod@divisor,f
   665     06E4  09F1               	comf	___awmod@divisor+1,f
   666     06E5  0AF0               	incf	___awmod@divisor,f
   667     06E6  1903               	skipnz
   668     06E7  0AF1               	incf	___awmod@divisor+1,f
   669     06E8                     l846:
   670     06E8  0870               	movf	___awmod@divisor,w
   671     06E9  0471               	iorwf	___awmod@divisor+1,w
   672     06EA  1903               	btfsc	3,2
   673     06EB  2EED               	goto	u451
   674     06EC  2EEE               	goto	u450
   675     06ED                     u451:
   676     06ED  2F1D               	goto	l864
   677     06EE                     u450:
   678     06EE                     l848:
   679     06EE  01F5               	clrf	___awmod@counter
   680     06EF  0AF5               	incf	___awmod@counter,f
   681     06F0  2EFC               	goto	l854
   682     06F1                     l850:
   683     06F1  3001               	movlw	1
   684     06F2                     u465:
   685     06F2  1003               	clrc
   686     06F3  0DF0               	rlf	___awmod@divisor,f
   687     06F4  0DF1               	rlf	___awmod@divisor+1,f
   688     06F5  3EFF               	addlw	-1
   689     06F6  1D03               	skipz
   690     06F7  2EF2               	goto	u465
   691     06F8                     l852:
   692     06F8  3001               	movlw	1
   693     06F9  00F4               	movwf	??___awmod
   694     06FA  0874               	movf	??___awmod,w
   695     06FB  07F5               	addwf	___awmod@counter,f
   696     06FC                     l854:
   697     06FC  1FF1               	btfss	___awmod@divisor+1,7
   698     06FD  2EFF               	goto	u471
   699     06FE  2F00               	goto	u470
   700     06FF                     u471:
   701     06FF  2EF1               	goto	l850
   702     0700                     u470:
   703     0700                     l856:
   704     0700  0871               	movf	___awmod@divisor+1,w
   705     0701  0273               	subwf	___awmod@dividend+1,w
   706     0702  1D03               	skipz
   707     0703  2F06               	goto	u485
   708     0704  0870               	movf	___awmod@divisor,w
   709     0705  0272               	subwf	___awmod@dividend,w
   710     0706                     u485:
   711     0706  1C03               	skipc
   712     0707  2F09               	goto	u481
   713     0708  2F0A               	goto	u480
   714     0709                     u481:
   715     0709  2F10               	goto	l860
   716     070A                     u480:
   717     070A                     l858:
   718     070A  0870               	movf	___awmod@divisor,w
   719     070B  02F2               	subwf	___awmod@dividend,f
   720     070C  0871               	movf	___awmod@divisor+1,w
   721     070D  1C03               	skipc
   722     070E  03F3               	decf	___awmod@dividend+1,f
   723     070F  02F3               	subwf	___awmod@dividend+1,f
   724     0710                     l860:
   725     0710  3001               	movlw	1
   726     0711                     u495:
   727     0711  1003               	clrc
   728     0712  0CF1               	rrf	___awmod@divisor+1,f
   729     0713  0CF0               	rrf	___awmod@divisor,f
   730     0714  3EFF               	addlw	-1
   731     0715  1D03               	skipz
   732     0716  2F11               	goto	u495
   733     0717                     l862:
   734     0717  3001               	movlw	1
   735     0718  02F5               	subwf	___awmod@counter,f
   736     0719  1D03               	btfss	3,2
   737     071A  2F1C               	goto	u501
   738     071B  2F1D               	goto	u500
   739     071C                     u501:
   740     071C  2F00               	goto	l856
   741     071D                     u500:
   742     071D                     l864:
   743     071D  0876               	movf	___awmod@sign,w
   744     071E  1903               	btfsc	3,2
   745     071F  2F21               	goto	u511
   746     0720  2F22               	goto	u510
   747     0721                     u511:
   748     0721  2F27               	goto	l868
   749     0722                     u510:
   750     0722                     l866:
   751     0722  09F2               	comf	___awmod@dividend,f
   752     0723  09F3               	comf	___awmod@dividend+1,f
   753     0724  0AF2               	incf	___awmod@dividend,f
   754     0725  1903               	skipnz
   755     0726  0AF3               	incf	___awmod@dividend+1,f
   756     0727                     l868:
   757     0727  0873               	movf	___awmod@dividend+1,w
   758     0728  00F1               	movwf	?___awmod+1
   759     0729  0872               	movf	___awmod@dividend,w
   760     072A  00F0               	movwf	?___awmod
   761     072B                     l294:
   762     072B  0008               	return
   763     072C                     __end_of___awmod:
   764                           
   765                           	psect	text3
   766     0792                     __ptext3:	
   767 ;; *************** function ___awdiv *****************
   768 ;; Defined at:
   769 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
   770 ;; Parameters:    Size  Location     Type
   771 ;;  divisor         2    0[COMMON] int 
   772 ;;  dividend        2    2[COMMON] int 
   773 ;; Auto vars:     Size  Location     Type
   774 ;;  quotient        2    7[COMMON] int 
   775 ;;  sign            1    6[COMMON] unsigned char 
   776 ;;  counter         1    5[COMMON] unsigned char 
   777 ;; Return value:  Size  Location     Type
   778 ;;                  2    0[COMMON] int 
   779 ;; Registers used:
   780 ;;		wreg, status,2, status,0
   781 ;; Tracked objects:
   782 ;;		On entry : 0/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   786 ;;      Params:         4       0       0       0       0
   787 ;;      Locals:         4       0       0       0       0
   788 ;;      Temps:          1       0       0       0       0
   789 ;;      Totals:         9       0       0       0       0
   790 ;;Total ram usage:        9 bytes
   791 ;; Hardware stack levels used: 1
   792 ;; This function calls:
   793 ;;		Nothing
   794 ;; This function is called by:
   795 ;;		_Print_Led
   796 ;; This function uses a non-reentrant model
   797 ;;
   798                           
   799     0792                     ___awdiv:	
   800                           ;psect for function ___awdiv
   801                           
   802     0792                     l790:	
   803                           ;incstack = 0
   804                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   805                           
   806     0792  01F6               	clrf	___awdiv@sign
   807     0793                     l792:
   808     0793  1FF1               	btfss	___awdiv@divisor+1,7
   809     0794  2F96               	goto	u331
   810     0795  2F97               	goto	u330
   811     0796                     u331:
   812     0796  2F9E               	goto	l798
   813     0797                     u330:
   814     0797                     l794:
   815     0797  09F0               	comf	___awdiv@divisor,f
   816     0798  09F1               	comf	___awdiv@divisor+1,f
   817     0799  0AF0               	incf	___awdiv@divisor,f
   818     079A  1903               	skipnz
   819     079B  0AF1               	incf	___awdiv@divisor+1,f
   820     079C                     l796:
   821     079C  01F6               	clrf	___awdiv@sign
   822     079D  0AF6               	incf	___awdiv@sign,f
   823     079E                     l798:
   824     079E  1FF3               	btfss	___awdiv@dividend+1,7
   825     079F  2FA1               	goto	u341
   826     07A0  2FA2               	goto	u340
   827     07A1                     u341:
   828     07A1  2FAB               	goto	l804
   829     07A2                     u340:
   830     07A2                     l800:
   831     07A2  09F2               	comf	___awdiv@dividend,f
   832     07A3  09F3               	comf	___awdiv@dividend+1,f
   833     07A4  0AF2               	incf	___awdiv@dividend,f
   834     07A5  1903               	skipnz
   835     07A6  0AF3               	incf	___awdiv@dividend+1,f
   836     07A7                     l802:
   837     07A7  3001               	movlw	1
   838     07A8  00F4               	movwf	??___awdiv
   839     07A9  0874               	movf	??___awdiv,w
   840     07AA  06F6               	xorwf	___awdiv@sign,f
   841     07AB                     l804:
   842     07AB  01F7               	clrf	___awdiv@quotient
   843     07AC  01F8               	clrf	___awdiv@quotient+1
   844     07AD                     l806:
   845     07AD  0870               	movf	___awdiv@divisor,w
   846     07AE  0471               	iorwf	___awdiv@divisor+1,w
   847     07AF  1903               	btfsc	3,2
   848     07B0  2FB2               	goto	u351
   849     07B1  2FB3               	goto	u350
   850     07B2                     u351:
   851     07B2  2FEA               	goto	l826
   852     07B3                     u350:
   853     07B3                     l808:
   854     07B3  01F5               	clrf	___awdiv@counter
   855     07B4  0AF5               	incf	___awdiv@counter,f
   856     07B5  2FC1               	goto	l814
   857     07B6                     l810:
   858     07B6  3001               	movlw	1
   859     07B7                     u365:
   860     07B7  1003               	clrc
   861     07B8  0DF0               	rlf	___awdiv@divisor,f
   862     07B9  0DF1               	rlf	___awdiv@divisor+1,f
   863     07BA  3EFF               	addlw	-1
   864     07BB  1D03               	skipz
   865     07BC  2FB7               	goto	u365
   866     07BD                     l812:
   867     07BD  3001               	movlw	1
   868     07BE  00F4               	movwf	??___awdiv
   869     07BF  0874               	movf	??___awdiv,w
   870     07C0  07F5               	addwf	___awdiv@counter,f
   871     07C1                     l814:
   872     07C1  1FF1               	btfss	___awdiv@divisor+1,7
   873     07C2  2FC4               	goto	u371
   874     07C3  2FC5               	goto	u370
   875     07C4                     u371:
   876     07C4  2FB6               	goto	l810
   877     07C5                     u370:
   878     07C5                     l816:
   879     07C5  3001               	movlw	1
   880     07C6                     u385:
   881     07C6  1003               	clrc
   882     07C7  0DF7               	rlf	___awdiv@quotient,f
   883     07C8  0DF8               	rlf	___awdiv@quotient+1,f
   884     07C9  3EFF               	addlw	-1
   885     07CA  1D03               	skipz
   886     07CB  2FC6               	goto	u385
   887     07CC  0871               	movf	___awdiv@divisor+1,w
   888     07CD  0273               	subwf	___awdiv@dividend+1,w
   889     07CE  1D03               	skipz
   890     07CF  2FD2               	goto	u395
   891     07D0  0870               	movf	___awdiv@divisor,w
   892     07D1  0272               	subwf	___awdiv@dividend,w
   893     07D2                     u395:
   894     07D2  1C03               	skipc
   895     07D3  2FD5               	goto	u391
   896     07D4  2FD6               	goto	u390
   897     07D5                     u391:
   898     07D5  2FDD               	goto	l822
   899     07D6                     u390:
   900     07D6                     l818:
   901     07D6  0870               	movf	___awdiv@divisor,w
   902     07D7  02F2               	subwf	___awdiv@dividend,f
   903     07D8  0871               	movf	___awdiv@divisor+1,w
   904     07D9  1C03               	skipc
   905     07DA  03F3               	decf	___awdiv@dividend+1,f
   906     07DB  02F3               	subwf	___awdiv@dividend+1,f
   907     07DC                     l820:
   908     07DC  1477               	bsf	___awdiv@quotient,0
   909     07DD                     l822:
   910     07DD  3001               	movlw	1
   911     07DE                     u405:
   912     07DE  1003               	clrc
   913     07DF  0CF1               	rrf	___awdiv@divisor+1,f
   914     07E0  0CF0               	rrf	___awdiv@divisor,f
   915     07E1  3EFF               	addlw	-1
   916     07E2  1D03               	skipz
   917     07E3  2FDE               	goto	u405
   918     07E4                     l824:
   919     07E4  3001               	movlw	1
   920     07E5  02F5               	subwf	___awdiv@counter,f
   921     07E6  1D03               	btfss	3,2
   922     07E7  2FE9               	goto	u411
   923     07E8  2FEA               	goto	u410
   924     07E9                     u411:
   925     07E9  2FC5               	goto	l816
   926     07EA                     u410:
   927     07EA                     l826:
   928     07EA  0876               	movf	___awdiv@sign,w
   929     07EB  1903               	btfsc	3,2
   930     07EC  2FEE               	goto	u421
   931     07ED  2FEF               	goto	u420
   932     07EE                     u421:
   933     07EE  2FF4               	goto	l830
   934     07EF                     u420:
   935     07EF                     l828:
   936     07EF  09F7               	comf	___awdiv@quotient,f
   937     07F0  09F8               	comf	___awdiv@quotient+1,f
   938     07F1  0AF7               	incf	___awdiv@quotient,f
   939     07F2  1903               	skipnz
   940     07F3  0AF8               	incf	___awdiv@quotient+1,f
   941     07F4                     l830:
   942     07F4  0878               	movf	___awdiv@quotient+1,w
   943     07F5  00F1               	movwf	?___awdiv+1
   944     07F6  0877               	movf	___awdiv@quotient,w
   945     07F7  00F0               	movwf	?___awdiv
   946     07F8                     l281:
   947     07F8  0008               	return
   948     07F9                     __end_of___awdiv:
   949                           
   950                           	psect	text4
   951     072C                     __ptext4:	
   952 ;; *************** function _Numpad_Read *****************
   953 ;; Defined at:
   954 ;;		line 21 in file "./numpad.h"
   955 ;; Parameters:    Size  Location     Type
   956 ;;		None
   957 ;; Auto vars:     Size  Location     Type
   958 ;;  rowScan         1    5[COMMON] unsigned char 
   959 ;;  colScan         1    4[COMMON] unsigned char 
   960 ;;  currentKey      1    3[COMMON] unsigned char 
   961 ;;  currentKeyVa    1    2[COMMON] unsigned char 
   962 ;; Return value:  Size  Location     Type
   963 ;;                  1    wreg      unsigned char 
   964 ;; Registers used:
   965 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   966 ;; Tracked objects:
   967 ;;		On entry : 0/0
   968 ;;		On exit  : 0/0
   969 ;;		Unchanged: 0/0
   970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   971 ;;      Params:         0       0       0       0       0
   972 ;;      Locals:         4       0       0       0       0
   973 ;;      Temps:          2       0       0       0       0
   974 ;;      Totals:         6       0       0       0       0
   975 ;;Total ram usage:        6 bytes
   976 ;; Hardware stack levels used: 2
   977 ;; This function calls:
   978 ;;		Nothing
   979 ;; This function is called by:
   980 ;;		_main
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984     072C                     _Numpad_Read:	
   985                           ;psect for function _Numpad_Read
   986                           
   987     072C                     l876:	
   988                           ;incstack = 0
   989                           ; Regs used in _Numpad_Read: [wreg-fsr0h+status,2+status,0+pclath]
   990                           
   991                           
   992                           ;./numpad.h: 22:     char colScan, rowScan, currentKeyVal, currentKey;;./numpad.h: 23:  
      +                             static char oldKeyVal;;./numpad.h: 24:     for (colScan = 0; colScan < 3; colScan++) 
      +                          {
   993     072C  01F4               	clrf	Numpad_Read@colScan
   994     072D                     l882:
   995                           
   996                           ;./numpad.h: 25:         PORTB |= 0x07;
   997     072D  3007               	movlw	7
   998     072E  00F0               	movwf	??_Numpad_Read
   999     072F  0870               	movf	??_Numpad_Read,w
  1000     0730  1283               	bcf	3,5	;RP0=0, select bank0
  1001     0731  1303               	bcf	3,6	;RP1=0, select bank0
  1002     0732  0486               	iorwf	6,f	;volatile
  1003                           
  1004                           ;./numpad.h: 26:         PORTB &= ~(1UL << colScan);
  1005     0733  3001               	movlw	1
  1006     0734  00F0               	movwf	??_Numpad_Read
  1007     0735  0A74               	incf	Numpad_Read@colScan,w
  1008     0736  2F39               	goto	u524
  1009     0737                     u525:
  1010     0737  1003               	clrc
  1011     0738  0DF0               	rlf	??_Numpad_Read,f
  1012     0739                     u524:
  1013     0739  3EFF               	addlw	-1
  1014     073A  1D03               	skipz
  1015     073B  2F37               	goto	u525
  1016     073C  0870               	movf	??_Numpad_Read,w
  1017     073D  3AFF               	xorlw	255
  1018     073E  00F1               	movwf	??_Numpad_Read+1
  1019     073F  0871               	movf	??_Numpad_Read+1,w
  1020     0740  0586               	andwf	6,f	;volatile
  1021     0741                     l884:
  1022                           
  1023                           ;./numpad.h: 27:         _delay((unsigned long)((15)*(20*1000000/4000.0)));
  1024     0741  3062               	movlw	98
  1025     0742  00F1               	movwf	??_Numpad_Read+1
  1026     0743  3065               	movlw	101
  1027     0744  00F0               	movwf	??_Numpad_Read
  1028     0745                     u657:
  1029     0745  0BF0               	decfsz	??_Numpad_Read,f
  1030     0746  2F45               	goto	u657
  1031     0747  0BF1               	decfsz	??_Numpad_Read+1,f
  1032     0748  2F45               	goto	u657
  1033     0749  2F4A               	nop2
  1034     074A                     l886:
  1035                           
  1036                           ;./numpad.h: 28:         for (rowScan = 0; rowScan < 4; rowScan++) {
  1037     074A  01F5               	clrf	Numpad_Read@rowScan
  1038     074B                     l892:
  1039                           
  1040                           ;./numpad.h: 29:             currentKeyVal = (PORTD & (1 << rowScan));
  1041     074B  3001               	movlw	1
  1042     074C  00F0               	movwf	??_Numpad_Read
  1043     074D  0A75               	incf	Numpad_Read@rowScan,w
  1044     074E  2F51               	goto	u534
  1045     074F                     u535:
  1046     074F  1003               	clrc
  1047     0750  0DF0               	rlf	??_Numpad_Read,f
  1048     0751                     u534:
  1049     0751  3EFF               	addlw	-1
  1050     0752  1D03               	skipz
  1051     0753  2F4F               	goto	u535
  1052     0754  0870               	movf	??_Numpad_Read,w
  1053     0755  1283               	bcf	3,5	;RP0=0, select bank0
  1054     0756  1303               	bcf	3,6	;RP1=0, select bank0
  1055     0757  0508               	andwf	8,w	;volatile
  1056     0758  00F2               	movwf	Numpad_Read@currentKeyVal
  1057                           
  1058                           ;./numpad.h: 31:             if (!currentKeyVal && oldKeyVal) {
  1059     0759  0872               	movf	Numpad_Read@currentKeyVal,w
  1060     075A  1D03               	btfss	3,2
  1061     075B  2F5D               	goto	u541
  1062     075C  2F5E               	goto	u540
  1063     075D                     u541:
  1064     075D  2F7A               	goto	l24
  1065     075E                     u540:
  1066     075E                     l894:
  1067     075E  0826               	movf	Numpad_Read@oldKeyVal,w
  1068     075F  1903               	btfsc	3,2
  1069     0760  2F62               	goto	u551
  1070     0761  2F63               	goto	u550
  1071     0762                     u551:
  1072     0762  2F7A               	goto	l24
  1073     0763                     u550:
  1074     0763                     l896:
  1075                           
  1076                           ;./numpad.h: 32:                 currentKey = keypad[rowScan + (4 * colScan)];
  1077     0763  0874               	movf	Numpad_Read@colScan,w
  1078     0764  00F0               	movwf	??_Numpad_Read
  1079     0765  3002               	movlw	2
  1080     0766                     u565:
  1081     0766  1003               	clrc
  1082     0767  0DF0               	rlf	??_Numpad_Read,f
  1083     0768  3EFF               	addlw	-1
  1084     0769  1D03               	skipz
  1085     076A  2F66               	goto	u565
  1086     076B  3001               	movlw	(low ((_keypad-__stringbase)| (0+32768)))& (0+255)
  1087     076C  0770               	addwf	??_Numpad_Read,w
  1088     076D  00F1               	movwf	??_Numpad_Read+1
  1089     076E  0875               	movf	Numpad_Read@rowScan,w
  1090     076F  0771               	addwf	??_Numpad_Read+1,w
  1091     0770  0084               	movwf	4
  1092     0771  120A  118A  2003  120A  118A  	fcall	stringdir
  1093     0776  00F3               	movwf	Numpad_Read@currentKey
  1094     0777                     l898:
  1095                           
  1096                           ;./numpad.h: 33:                 oldKeyVal = 0;
  1097     0777  01A6               	clrf	Numpad_Read@oldKeyVal
  1098     0778                     l900:
  1099                           
  1100                           ;./numpad.h: 34:                 return currentKey;
  1101     0778  0873               	movf	Numpad_Read@currentKey,w
  1102     0779  2F91               	goto	l25
  1103     077A                     l24:	
  1104                           ;./numpad.h: 35:             }
  1105                           
  1106                           
  1107                           ;./numpad.h: 37:             oldKeyVal = 1;
  1108     077A  01A6               	clrf	Numpad_Read@oldKeyVal
  1109     077B  0AA6               	incf	Numpad_Read@oldKeyVal,f
  1110     077C                     l904:
  1111                           
  1112                           ;./numpad.h: 38:         }
  1113     077C  3001               	movlw	1
  1114     077D  00F0               	movwf	??_Numpad_Read
  1115     077E  0870               	movf	??_Numpad_Read,w
  1116     077F  07F5               	addwf	Numpad_Read@rowScan,f
  1117     0780                     l906:
  1118     0780  3004               	movlw	4
  1119     0781  0275               	subwf	Numpad_Read@rowScan,w
  1120     0782  1C03               	skipc
  1121     0783  2F85               	goto	u571
  1122     0784  2F86               	goto	u570
  1123     0785                     u571:
  1124     0785  2F4B               	goto	l892
  1125     0786                     u570:
  1126     0786                     l908:
  1127                           
  1128                           ;./numpad.h: 39:     }
  1129     0786  3001               	movlw	1
  1130     0787  00F0               	movwf	??_Numpad_Read
  1131     0788  0870               	movf	??_Numpad_Read,w
  1132     0789  07F4               	addwf	Numpad_Read@colScan,f
  1133     078A                     l910:
  1134     078A  3003               	movlw	3
  1135     078B  0274               	subwf	Numpad_Read@colScan,w
  1136     078C  1C03               	skipc
  1137     078D  2F8F               	goto	u581
  1138     078E  2F90               	goto	u580
  1139     078F                     u581:
  1140     078F  2F2D               	goto	l882
  1141     0790                     u580:
  1142     0790                     l912:
  1143                           
  1144                           ;./numpad.h: 40:     return 0xff;
  1145     0790  30FF               	movlw	255
  1146     0791                     l25:
  1147     0791  0008               	return
  1148     0792                     __end_of_Numpad_Read:
  1149                           
  1150                           	psect	text5
  1151     0644                     __ptext5:	
  1152 ;; *************** function _NumPad_Init *****************
  1153 ;; Defined at:
  1154 ;;		line 14 in file "./numpad.h"
  1155 ;; Parameters:    Size  Location     Type
  1156 ;;		None
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;		None
  1159 ;; Return value:  Size  Location     Type
  1160 ;;                  1    wreg      void 
  1161 ;; Registers used:
  1162 ;;		wreg, status,2
  1163 ;; Tracked objects:
  1164 ;;		On entry : 0/0
  1165 ;;		On exit  : 0/0
  1166 ;;		Unchanged: 0/0
  1167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1168 ;;      Params:         0       0       0       0       0
  1169 ;;      Locals:         0       0       0       0       0
  1170 ;;      Temps:          0       0       0       0       0
  1171 ;;      Totals:         0       0       0       0       0
  1172 ;;Total ram usage:        0 bytes
  1173 ;; Hardware stack levels used: 1
  1174 ;; This function calls:
  1175 ;;		Nothing
  1176 ;; This function is called by:
  1177 ;;		_main
  1178 ;; This function uses a non-reentrant model
  1179 ;;
  1180                           
  1181     0644                     _NumPad_Init:	
  1182                           ;psect for function _NumPad_Init
  1183                           
  1184     0644                     l872:	
  1185                           ;incstack = 0
  1186                           ; Regs used in _NumPad_Init: [wreg+status,2]
  1187                           
  1188                           
  1189                           ;./numpad.h: 15:     TRISD = 0x0f;
  1190     0644  300F               	movlw	15
  1191     0645  1683               	bsf	3,5	;RP0=1, select bank1
  1192     0646  1303               	bcf	3,6	;RP1=0, select bank1
  1193     0647  0088               	movwf	8	;volatile
  1194     0648                     l874:
  1195                           
  1196                           ;./numpad.h: 16:     TRISB = 0x00;
  1197     0648  0186               	clrf	6	;volatile
  1198     0649                     l13:
  1199     0649  0008               	return
  1200     064A                     __end_of_NumPad_Init:
  1201     007E                     btemp	set	126	;btemp
  1202     007E                     wtemp0	set	126
  1203                           
  1204                           	psect	idloc
  1205                           
  1206                           ;Config register IDLOC0 @ 0x2000
  1207                           ;	unspecified, using default values
  1208     2000                     	org	8192
  1209     2000  3FFF               	dw	16383
  1210                           
  1211                           ;Config register IDLOC1 @ 0x2001
  1212                           ;	unspecified, using default values
  1213     2001                     	org	8193
  1214     2001  3FFF               	dw	16383
  1215                           
  1216                           ;Config register IDLOC2 @ 0x2002
  1217                           ;	unspecified, using default values
  1218     2002                     	org	8194
  1219     2002  3FFF               	dw	16383
  1220                           
  1221                           ;Config register IDLOC3 @ 0x2003
  1222                           ;	unspecified, using default values
  1223     2003                     	org	8195
  1224     2003  3FFF               	dw	16383
  1225                           
  1226                           	psect	config
  1227                           
  1228                           ;Config register CONFIG @ 0x2007
  1229                           ;	Oscillator Selection bits
  1230                           ;	FOSC = HS, HS oscillator
  1231                           ;	Watchdog Timer Enable bit
  1232                           ;	WDTE = OFF, WDT disabled
  1233                           ;	Power-up Timer Enable bit
  1234                           ;	PWRTE = ON, PWRT enabled
  1235                           ;	Brown-out Reset Enable bit
  1236                           ;	BOREN = ON, BOR enabled
  1237                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1238                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  1239                           ;	Data EEPROM Memory Code Protection bit
  1240                           ;	CPD = OFF, Data EEPROM code protection off
  1241                           ;	Flash Program Memory Write Enable bits
  1242                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1243                           ;	In-Circuit Debugger Mode bit
  1244                           ;	DEBUG = 0x1, unprogrammed default
  1245                           ;	Flash Program Memory Code Protection bit
  1246                           ;	CP = OFF, Code protection off
  1247     2007                     	org	8199
  1248     2007  3FF2               	dw	16370

Data Sizes:
    Strings     0
    Constant    12
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      6       7
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Print_Led
    _Print_Led->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    1398
                                              0 BANK0      6     6      0
                        _NumPad_Init
                        _Numpad_Read
                          _Print_Led
 ---------------------------------------------------------------------------------
 (1) _Print_Led                                            5     5      0     944
                                              9 COMMON     5     5      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _Numpad_Read                                          6     6      0     226
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (1) _NumPad_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _NumPad_Init
   _Numpad_Read
   _Print_Led
     ___awdiv
     ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      15       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6       7       5        8.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      15      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Dec 19 13:06:13 2022

                       pc 0002                        l13 0649                        l24 077A  
                      l25 0791                        l35 0685                        l28 06D2  
            ___awdiv@sign 0076                        fsr 0004  Numpad_Read@currentKeyVal 0072  
                     l281 07F8                       l294 072B                       l800 07A2  
                     l810 07B6                       l802 07A7                       l900 0778  
                     l820 07DC                       l812 07BD                       l804 07AB  
                     l910 078A                       l830 07F4                       l822 07DD  
                     l814 07C1                       l806 07AD                       l912 0790  
                     l904 077C                       l824 07E4                       l816 07C5  
                     l808 07B3                       l840 06DD                       l920 06B3  
                     l906 0780                       l818 07D6                       l826 07EA  
                     l850 06F1                       l842 06DF                       l834 06D3  
                     l930 065D                       l922 064A                       l908 0786  
                     l828 07EF                       l860 0710                       l852 06F8  
                     l844 06E3                       l836 06D4                       l916 068A  
                     l940 067A                       l932 0664                       l924 064F  
                     l790 0792                       l862 0717                       l854 06FC  
                     l846 06E8                       l838 06D8                       l918 0694  
                     l942 067D                       l934 066A                       l926 064F  
                     l872 0644                       l792 0793                       l856 0700  
                     l848 06EE                       l864 071D                       l944 067E  
                     l936 066F                       l928 0657                       l874 0648  
                     l882 072D                       l794 0797                       l866 0722  
                     l858 070A                       l938 0674                       l892 074B  
                     l884 0741                       l876 072C                       l796 079C  
                     l868 0727                       l894 075E                       l886 074A  
                     l798 079E                       l896 0763                       l898 0777  
                     u410 07EA                       u330 0797                       u411 07E9  
                     u331 0796                       u420 07EF                       u340 07A2  
                     u500 071D                       u421 07EE                       u405 07DE  
                     u341 07A1                       u501 071C                       u350 07B3  
                     u510 0722                       u430 06D8                       u351 07B2  
                     u511 0721                       u431 06D7                       u440 06E3  
                     u441 06E2                       u370 07C5                       u450 06EE  
                     u610 065D                       u371 07C4                       u451 06ED  
                     u611 065C                       u540 075E                       u524 0739  
                     u620 066A                       u541 075D                       u525 0737  
                     u365 07B7                       u605 06C6                       u621 0669  
                     u550 0763                       u534 0751                       u390 07D6  
                     u470 0700                       u630 066F                       u551 0762  
                     u535 074F                       u391 07D5                       u471 06FF  
                     u631 066E                       u480 070A                       u640 067A  
                     u385 07C6                       u481 0709                       u465 06F2  
                     u641 0679                       u570 0786                       u571 0785  
                     u395 07D2                       u580 0790                       u581 078F  
                     u565 0766                       u485 0706                       u495 0711  
                     u657 0745                       u595 06A7                       fsr0 0004  
                     indf 0000              ___awmod@sign 0076                      _main 064A  
                    btemp 007E                      start 0000                     ?_main 0070  
         __end_of___awdiv 07F9           __end_of___awmod 072C           ___awdiv@divisor 0070  
         ___awdiv@counter 0075                     _PORTB 0006                     _PORTD 0008  
                   _TRISB 0086                     _TRISD 0088                     pclath 000A  
                   status 0003                     wtemp0 007E           __initialization 07F9  
            __end_of_main 0689                    ??_main 0020             ??_NumPad_Init 0070  
        ___awdiv@dividend 0072                 ??___awdiv 0074                 ??___awmod 0074  
                  _keypad 0009          ___awdiv@quotient 0077             main@selettore 0024  
         ___awmod@divisor 0070             main@operatore 0022           ___awmod@counter 0075  
           ??_Numpad_Read 0070             main@risultato 0021       __end_of_NumPad_Init 064A  
 __end_of__initialization 07FC            __pcstackCOMMON 0070       __end_of_Numpad_Read 0792  
              __pbssBANK0 0026         __end_of_Print_Led 06D3                __pmaintext 064A  
             _NumPad_Init 0644                __stringtab 0003                   ___awdiv 0792  
                 ___awmod 06D3                   __ptext1 0689                   __ptext2 06D3  
                 __ptext3 0792                   __ptext4 072C                   __ptext5 0644  
        ___awmod@dividend 0072               _Numpad_Read 072C      Numpad_Read@oldKeyVal 0026  
          Print_Led@value 007D      end_of_initialization 07FC            __end_of_keypad 0015  
     start_initialization 07F9        Numpad_Read@colScan 0074                 _Print_Led 0689  
      Numpad_Read@rowScan 0075              ?_NumPad_Init 0070                 ___latbits 0002  
           __pcstackBANK0 0020                  ?___awdiv 0070                  ?___awmod 0070  
              ?_Print_Led 0070                 __pstrings 0003              ?_Numpad_Read 0070  
             __stringbase 0008               ??_Print_Led 0079        __end_of__stringtab 0009  
   Numpad_Read@currentKey 0073                  main@read 0025                 stringcode 0003  
                stringdir 0003                  stringtab 0003  
