

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Jan 18 21:58:53 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17     0000                     
    18                           ; Version 2.40
    19                           ; Generated 17/11/2021 GMT
    20                           ; 
    21                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F877A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53     0000                     	;# 
    54     0001                     	;# 
    55     0002                     	;# 
    56     0003                     	;# 
    57     0004                     	;# 
    58     0005                     	;# 
    59     0006                     	;# 
    60     0007                     	;# 
    61     0008                     	;# 
    62     0009                     	;# 
    63     000A                     	;# 
    64     000B                     	;# 
    65     000C                     	;# 
    66     000D                     	;# 
    67     000E                     	;# 
    68     000E                     	;# 
    69     000F                     	;# 
    70     0010                     	;# 
    71     0011                     	;# 
    72     0012                     	;# 
    73     0013                     	;# 
    74     0014                     	;# 
    75     0015                     	;# 
    76     0015                     	;# 
    77     0016                     	;# 
    78     0017                     	;# 
    79     0018                     	;# 
    80     0019                     	;# 
    81     001A                     	;# 
    82     001B                     	;# 
    83     001B                     	;# 
    84     001C                     	;# 
    85     001D                     	;# 
    86     001E                     	;# 
    87     001F                     	;# 
    88     0081                     	;# 
    89     0085                     	;# 
    90     0086                     	;# 
    91     0087                     	;# 
    92     0088                     	;# 
    93     0089                     	;# 
    94     008C                     	;# 
    95     008D                     	;# 
    96     008E                     	;# 
    97     0091                     	;# 
    98     0092                     	;# 
    99     0093                     	;# 
   100     0094                     	;# 
   101     0098                     	;# 
   102     0099                     	;# 
   103     009C                     	;# 
   104     009D                     	;# 
   105     009E                     	;# 
   106     009F                     	;# 
   107     010C                     	;# 
   108     010D                     	;# 
   109     010E                     	;# 
   110     010F                     	;# 
   111     018C                     	;# 
   112     018D                     	;# 
   113     0000                     	;# 
   114     0001                     	;# 
   115     0002                     	;# 
   116     0003                     	;# 
   117     0004                     	;# 
   118     0005                     	;# 
   119     0006                     	;# 
   120     0007                     	;# 
   121     0008                     	;# 
   122     0009                     	;# 
   123     000A                     	;# 
   124     000B                     	;# 
   125     000C                     	;# 
   126     000D                     	;# 
   127     000E                     	;# 
   128     000E                     	;# 
   129     000F                     	;# 
   130     0010                     	;# 
   131     0011                     	;# 
   132     0012                     	;# 
   133     0013                     	;# 
   134     0014                     	;# 
   135     0015                     	;# 
   136     0015                     	;# 
   137     0016                     	;# 
   138     0017                     	;# 
   139     0018                     	;# 
   140     0019                     	;# 
   141     001A                     	;# 
   142     001B                     	;# 
   143     001B                     	;# 
   144     001C                     	;# 
   145     001D                     	;# 
   146     001E                     	;# 
   147     001F                     	;# 
   148     0081                     	;# 
   149     0085                     	;# 
   150     0086                     	;# 
   151     0087                     	;# 
   152     0088                     	;# 
   153     0089                     	;# 
   154     008C                     	;# 
   155     008D                     	;# 
   156     008E                     	;# 
   157     0091                     	;# 
   158     0092                     	;# 
   159     0093                     	;# 
   160     0094                     	;# 
   161     0098                     	;# 
   162     0099                     	;# 
   163     009C                     	;# 
   164     009D                     	;# 
   165     009E                     	;# 
   166     009F                     	;# 
   167     010C                     	;# 
   168     010D                     	;# 
   169     010E                     	;# 
   170     010F                     	;# 
   171     018C                     	;# 
   172     018D                     	;# 
   173     0000                     	;# 
   174     0001                     	;# 
   175     0002                     	;# 
   176     0003                     	;# 
   177     0004                     	;# 
   178     0005                     	;# 
   179     0006                     	;# 
   180     0007                     	;# 
   181     0008                     	;# 
   182     0009                     	;# 
   183     000A                     	;# 
   184     000B                     	;# 
   185     000C                     	;# 
   186     000D                     	;# 
   187     000E                     	;# 
   188     000E                     	;# 
   189     000F                     	;# 
   190     0010                     	;# 
   191     0011                     	;# 
   192     0012                     	;# 
   193     0013                     	;# 
   194     0014                     	;# 
   195     0015                     	;# 
   196     0015                     	;# 
   197     0016                     	;# 
   198     0017                     	;# 
   199     0018                     	;# 
   200     0019                     	;# 
   201     001A                     	;# 
   202     001B                     	;# 
   203     001B                     	;# 
   204     001C                     	;# 
   205     001D                     	;# 
   206     001E                     	;# 
   207     001F                     	;# 
   208     0081                     	;# 
   209     0085                     	;# 
   210     0086                     	;# 
   211     0087                     	;# 
   212     0088                     	;# 
   213     0089                     	;# 
   214     008C                     	;# 
   215     008D                     	;# 
   216     008E                     	;# 
   217     0091                     	;# 
   218     0092                     	;# 
   219     0093                     	;# 
   220     0094                     	;# 
   221     0098                     	;# 
   222     0099                     	;# 
   223     009C                     	;# 
   224     009D                     	;# 
   225     009E                     	;# 
   226     009F                     	;# 
   227     010C                     	;# 
   228     010D                     	;# 
   229     010E                     	;# 
   230     010F                     	;# 
   231     018C                     	;# 
   232     018D                     	;# 
   233                           
   234                           	psect	strings
   235     0003                     __pstrings:
   236     0003                     stringtab:
   237     0003                     __stringtab:
   238     0003                     stringcode:	
   239                           ;	String table - string pointers are 1 byte each
   240                           
   241     0003                     stringdir:
   242     0003  3000               	movlw	high stringdir
   243     0004  008A               	movwf	10
   244     0005  0804               	movf	4,w
   245     0006  0A84               	incf	4,f
   246     0007  0782               	addwf	2,f
   247     0008                     __stringbase:
   248     0008  3400               	retlw	0
   249     0009                     __end_of__stringtab:
   250     0009                     _keypad:
   251     0009  342A               	retlw	42
   252     000A  3407               	retlw	7
   253     000B  3404               	retlw	4
   254     000C  3401               	retlw	1
   255     000D  3400               	retlw	0
   256     000E  3408               	retlw	8
   257     000F  3405               	retlw	5
   258     0010  3402               	retlw	2
   259     0011  3423               	retlw	35
   260     0012  3409               	retlw	9
   261     0013  3406               	retlw	6
   262     0014  3403               	retlw	3
   263     0015                     __end_of_keypad:
   264     0006                     _PORTB	set	6
   265     0008                     _PORTD	set	8
   266     0086                     _TRISB	set	134
   267     0088                     _TRISD	set	136
   268                           
   269                           	psect	cinit
   270     07F9                     start_initialization:	
   271                           ; #config settings
   272                           
   273     07F9                     __initialization:
   274                           
   275                           ; Clear objects allocated to BANK0
   276     07F9  1283               	bcf	3,5	;RP0=0, select bank0
   277     07FA  1303               	bcf	3,6	;RP1=0, select bank0
   278     07FB  01A6               	clrf	__pbssBANK0& (0+127)
   279     07FC                     end_of_initialization:	
   280                           ;End of C runtime variable initialization code
   281                           
   282     07FC                     __end_of__initialization:
   283     07FC  0183               	clrf	3
   284     07FD  120A  118A  2E29   	ljmp	_main	;jump to C main() function
   285                           
   286                           	psect	bssBANK0
   287     0026                     __pbssBANK0:
   288     0026                     Numpad_Read@oldKeyVal:
   289     0026                     	ds	1
   290                           
   291                           	psect	cstackCOMMON
   292     0070                     __pcstackCOMMON:
   293     0070                     ?_Numpad_Read:
   294     0070                     ??_Numpad_Read:	
   295                           ; 1 bytes @ 0x0
   296                           
   297     0070                     ?_Print_Led:	
   298                           ; 1 bytes @ 0x0
   299                           
   300     0070                     ?_main:	
   301                           ; 1 bytes @ 0x0
   302                           
   303     0070                     ?___awdiv:	
   304                           ; 1 bytes @ 0x0
   305                           
   306     0070                     ?___awmod:	
   307                           ; 2 bytes @ 0x0
   308                           
   309     0070                     ___awdiv@divisor:	
   310                           ; 2 bytes @ 0x0
   311                           
   312     0070                     ___awmod@divisor:	
   313                           ; 2 bytes @ 0x0
   314                           
   315                           
   316                           ; 2 bytes @ 0x0
   317     0070                     	ds	2
   318     0072                     Numpad_Read@currentKey:
   319     0072                     ___awdiv@dividend:	
   320                           ; 1 bytes @ 0x2
   321                           
   322     0072                     ___awmod@dividend:	
   323                           ; 2 bytes @ 0x2
   324                           
   325                           
   326                           ; 2 bytes @ 0x2
   327     0072                     	ds	1
   328     0073                     Numpad_Read@currentKeyVal:
   329                           
   330                           ; 1 bytes @ 0x3
   331     0073                     	ds	1
   332     0074                     ??___awdiv:
   333     0074                     ??___awmod:	
   334                           ; 1 bytes @ 0x4
   335                           
   336     0074                     Numpad_Read@colScan:	
   337                           ; 1 bytes @ 0x4
   338                           
   339                           
   340                           ; 1 bytes @ 0x4
   341     0074                     	ds	1
   342     0075                     Numpad_Read@rowScan:
   343     0075                     ___awdiv@counter:	
   344                           ; 1 bytes @ 0x5
   345                           
   346     0075                     ___awmod@counter:	
   347                           ; 1 bytes @ 0x5
   348                           
   349                           
   350                           ; 1 bytes @ 0x5
   351     0075                     	ds	1
   352     0076                     ___awdiv@sign:
   353     0076                     ___awmod@sign:	
   354                           ; 1 bytes @ 0x6
   355                           
   356                           
   357                           ; 1 bytes @ 0x6
   358     0076                     	ds	1
   359     0077                     ___awdiv@quotient:
   360                           
   361                           ; 2 bytes @ 0x7
   362     0077                     	ds	2
   363     0079                     ??_Print_Led:
   364                           
   365                           ; 1 bytes @ 0x9
   366     0079                     	ds	4
   367     007D                     Print_Led@value:
   368                           
   369                           ; 1 bytes @ 0xD
   370     007D                     	ds	1
   371                           
   372                           	psect	cstackBANK0
   373     0020                     __pcstackBANK0:
   374     0020                     ??_main:
   375                           
   376                           ; 1 bytes @ 0x0
   377     0020                     	ds	1
   378     0021                     main@risultato:
   379                           
   380                           ; 1 bytes @ 0x1
   381     0021                     	ds	1
   382     0022                     main@operatore:
   383                           
   384                           ; 2 bytes @ 0x2
   385     0022                     	ds	2
   386     0024                     main@selettore:
   387                           
   388                           ; 1 bytes @ 0x4
   389     0024                     	ds	1
   390     0025                     main@read:
   391                           
   392                           ; 1 bytes @ 0x5
   393     0025                     	ds	1
   394                           
   395                           	psect	maintext
   396     0629                     __pmaintext:	
   397 ;;
   398 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   399 ;;
   400 ;; *************** function _main *****************
   401 ;; Defined at:
   402 ;;		line 27 in file "main.c"
   403 ;; Parameters:    Size  Location     Type
   404 ;;		None
   405 ;; Auto vars:     Size  Location     Type
   406 ;;  operatore       2    2[BANK0 ] unsigned char [2]
   407 ;;  read            1    5[BANK0 ] unsigned char 
   408 ;;  selettore       1    4[BANK0 ] unsigned char 
   409 ;;  risultato       1    1[BANK0 ] unsigned char 
   410 ;; Return value:  Size  Location     Type
   411 ;;                  1    wreg      void 
   412 ;; Registers used:
   413 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   414 ;; Tracked objects:
   415 ;;		On entry : B00/0
   416 ;;		On exit  : 0/0
   417 ;;		Unchanged: 0/0
   418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   419 ;;      Params:         0       0       0       0       0
   420 ;;      Locals:         0       5       0       0       0
   421 ;;      Temps:          0       1       0       0       0
   422 ;;      Totals:         0       6       0       0       0
   423 ;;Total ram usage:        6 bytes
   424 ;; Hardware stack levels required when called: 2
   425 ;; This function calls:
   426 ;;		_Numpad_Read
   427 ;;		_Print_Led
   428 ;; This function is called by:
   429 ;;		Startup code after reset
   430 ;; This function uses a non-reentrant model
   431 ;;
   432                           
   433     0629                     _main:	
   434                           ;psect for function _main
   435                           
   436     0629                     l934:	
   437                           ;incstack = 0
   438                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   439                           
   440     0629                     l936:
   441                           
   442                           ;main.c: 33:         read = Numpad_Read();
   443     0629  120A  118A  276D  120A  118A  	fcall	_Numpad_Read
   444     062E  1283               	bcf	3,5	;RP0=0, select bank0
   445     062F  1303               	bcf	3,6	;RP1=0, select bank0
   446     0630  00A5               	movwf	main@read
   447     0631                     l938:
   448                           
   449                           ;main.c: 35:         if (read >= 0 && read <= 9) {
   450     0631  300A               	movlw	10
   451     0632  0225               	subwf	main@read,w
   452     0633  1803               	skipnc
   453     0634  2E36               	goto	u651
   454     0635  2E37               	goto	u650
   455     0636                     u651:
   456     0636  2E3E               	goto	l942
   457     0637                     u650:
   458     0637                     l940:
   459                           
   460                           ;main.c: 36:             operatore[selettore] = read;
   461     0637  0824               	movf	main@selettore,w
   462     0638  3E22               	addlw	(low (main@operatore| 0))& (0+255)
   463     0639  0084               	movwf	4
   464     063A  0825               	movf	main@read,w
   465     063B  1383               	bcf	3,7	;select IRP bank0
   466     063C  0080               	movwf	0
   467                           
   468                           ;main.c: 37:         } else if (read == '*') {
   469     063D  2E29               	goto	l936
   470     063E                     l942:
   471     063E  302A               	movlw	42
   472     063F  0625               	xorwf	main@read,w
   473     0640  1D03               	btfss	3,2
   474     0641  2E43               	goto	u661
   475     0642  2E44               	goto	u660
   476     0643                     u661:
   477     0643  2E4E               	goto	l948
   478     0644                     u660:
   479     0644                     l944:
   480                           
   481                           ;main.c: 38:             if (selettore < 1)selettore++;
   482     0644  0824               	movf	main@selettore,w
   483     0645  1D03               	btfss	3,2
   484     0646  2E48               	goto	u671
   485     0647  2E49               	goto	u670
   486     0648                     u671:
   487     0648  2E5F               	goto	l16
   488     0649                     u670:
   489     0649                     l946:
   490     0649  3001               	movlw	1
   491     064A  00A0               	movwf	??_main
   492     064B  0820               	movf	??_main,w
   493     064C  07A4               	addwf	main@selettore,f
   494     064D  2E29               	goto	l936
   495     064E                     l948:
   496     064E  3023               	movlw	35
   497     064F  0625               	xorwf	main@read,w
   498     0650  1D03               	btfss	3,2
   499     0651  2E53               	goto	u681
   500     0652  2E54               	goto	u680
   501     0653                     u681:
   502     0653  2E5F               	goto	l16
   503     0654                     u680:
   504     0654                     l950:
   505                           
   506                           ;main.c: 40:             risultato = operatore[0] + operatore[1];
   507     0654  0822               	movf	main@operatore,w
   508     0655  0723               	addwf	main@operatore+1,w
   509     0656  00A1               	movwf	main@risultato
   510     0657                     l952:
   511                           
   512                           ;main.c: 41:             selettore = 0;
   513     0657  01A4               	clrf	main@selettore
   514     0658                     l954:
   515                           
   516                           ;main.c: 42:             Print_Led(risultato);
   517     0658  0821               	movf	main@risultato,w
   518     0659  120A  118A  2663  120A  118A  	fcall	_Print_Led
   519     065E  2E29               	goto	l936
   520     065F                     l16:
   521     065F  2E29               	goto	l936
   522     0660  120A  118A  2800   	ljmp	start
   523     0663                     __end_of_main:
   524                           
   525                           	psect	text1
   526     0663                     __ptext1:	
   527 ;; *************** function _Print_Led *****************
   528 ;; Defined at:
   529 ;;		line 4 in file "./ledpint.h"
   530 ;; Parameters:    Size  Location     Type
   531 ;;  value           1    wreg     unsigned char 
   532 ;; Auto vars:     Size  Location     Type
   533 ;;  value           1   13[COMMON] unsigned char 
   534 ;; Return value:  Size  Location     Type
   535 ;;                  1    wreg      void 
   536 ;; Registers used:
   537 ;;		wreg, status,2, status,0, pclath, cstack
   538 ;; Tracked objects:
   539 ;;		On entry : 0/0
   540 ;;		On exit  : 0/0
   541 ;;		Unchanged: 0/0
   542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   543 ;;      Params:         0       0       0       0       0
   544 ;;      Locals:         1       0       0       0       0
   545 ;;      Temps:          4       0       0       0       0
   546 ;;      Totals:         5       0       0       0       0
   547 ;;Total ram usage:        5 bytes
   548 ;; Hardware stack levels used: 1
   549 ;; Hardware stack levels required when called: 1
   550 ;; This function calls:
   551 ;;		___awdiv
   552 ;;		___awmod
   553 ;; This function is called by:
   554 ;;		_main
   555 ;; This function uses a non-reentrant model
   556 ;;
   557                           
   558     0663                     _Print_Led:	
   559                           ;psect for function _Print_Led
   560                           
   561                           
   562                           ;incstack = 0
   563                           ; Regs used in _Print_Led: [wreg+status,2+status,0+pclath+cstack]
   564                           ;Print_Led@value stored from wreg
   565     0663  00FD               	movwf	Print_Led@value
   566     0664                     l880:
   567                           
   568                           ;./ledpint.h: 5:     PORTD &= 0x0f;
   569     0664  300F               	movlw	15
   570     0665  00F9               	movwf	??_Print_Led
   571     0666  0879               	movf	??_Print_Led,w
   572     0667  1283               	bcf	3,5	;RP0=0, select bank0
   573     0668  1303               	bcf	3,6	;RP1=0, select bank0
   574     0669  0588               	andwf	8,f	;volatile
   575                           
   576                           ;./ledpint.h: 6:     PORTB &= 0x07;
   577     066A  3007               	movlw	7
   578     066B  00F9               	movwf	??_Print_Led
   579     066C  0879               	movf	??_Print_Led,w
   580     066D  0586               	andwf	6,f	;volatile
   581     066E                     l882:
   582                           
   583                           ;./ledpint.h: 9:     PORTD |= (value/10) <<4;
   584     066E  300A               	movlw	10
   585     066F  00F0               	movwf	___awdiv@divisor
   586     0670  3000               	movlw	0
   587     0671  00F1               	movwf	___awdiv@divisor+1
   588     0672  087D               	movf	Print_Led@value,w
   589     0673  00F9               	movwf	??_Print_Led
   590     0674  01FA               	clrf	??_Print_Led+1
   591     0675  0879               	movf	??_Print_Led,w
   592     0676  00F2               	movwf	___awdiv@dividend
   593     0677  087A               	movf	??_Print_Led+1,w
   594     0678  00F3               	movwf	___awdiv@dividend+1
   595     0679  120A  118A  2706  120A  118A  	fcall	___awdiv
   596     067E  0870               	movf	?___awdiv,w
   597     067F  00FB               	movwf	??_Print_Led+2
   598     0680  3003               	movlw	3
   599     0681                     u545:
   600     0681  1003               	clrc
   601     0682  0DFB               	rlf	??_Print_Led+2,f
   602     0683  3EFF               	addlw	-1
   603     0684  1D03               	skipz
   604     0685  2E81               	goto	u545
   605     0686  1003               	clrc
   606     0687  0D7B               	rlf	??_Print_Led+2,w
   607     0688  00FC               	movwf	??_Print_Led+3
   608     0689  087C               	movf	??_Print_Led+3,w
   609     068A  1283               	bcf	3,5	;RP0=0, select bank0
   610     068B  1303               	bcf	3,6	;RP1=0, select bank0
   611     068C  0488               	iorwf	8,f	;volatile
   612     068D                     l884:
   613                           
   614                           ;./ledpint.h: 10:     PORTB |= (value%10) <<4;
   615     068D  300A               	movlw	10
   616     068E  00F0               	movwf	___awmod@divisor
   617     068F  3000               	movlw	0
   618     0690  00F1               	movwf	___awmod@divisor+1
   619     0691  087D               	movf	Print_Led@value,w
   620     0692  00F9               	movwf	??_Print_Led
   621     0693  01FA               	clrf	??_Print_Led+1
   622     0694  0879               	movf	??_Print_Led,w
   623     0695  00F2               	movwf	___awmod@dividend
   624     0696  087A               	movf	??_Print_Led+1,w
   625     0697  00F3               	movwf	___awmod@dividend+1
   626     0698  120A  118A  26AD  120A  118A  	fcall	___awmod
   627     069D  0870               	movf	?___awmod,w
   628     069E  00FB               	movwf	??_Print_Led+2
   629     069F  3003               	movlw	3
   630     06A0                     u555:
   631     06A0  1003               	clrc
   632     06A1  0DFB               	rlf	??_Print_Led+2,f
   633     06A2  3EFF               	addlw	-1
   634     06A3  1D03               	skipz
   635     06A4  2EA0               	goto	u555
   636     06A5  1003               	clrc
   637     06A6  0D7B               	rlf	??_Print_Led+2,w
   638     06A7  00FC               	movwf	??_Print_Led+3
   639     06A8  087C               	movf	??_Print_Led+3,w
   640     06A9  1283               	bcf	3,5	;RP0=0, select bank0
   641     06AA  1303               	bcf	3,6	;RP1=0, select bank0
   642     06AB  0486               	iorwf	6,f	;volatile
   643     06AC                     l9:
   644     06AC  0008               	return
   645     06AD                     __end_of_Print_Led:
   646                           
   647                           	psect	text2
   648     06AD                     __ptext2:	
   649 ;; *************** function ___awmod *****************
   650 ;; Defined at:
   651 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
   652 ;; Parameters:    Size  Location     Type
   653 ;;  divisor         2    0[COMMON] int 
   654 ;;  dividend        2    2[COMMON] int 
   655 ;; Auto vars:     Size  Location     Type
   656 ;;  sign            1    6[COMMON] unsigned char 
   657 ;;  counter         1    5[COMMON] unsigned char 
   658 ;; Return value:  Size  Location     Type
   659 ;;                  2    0[COMMON] int 
   660 ;; Registers used:
   661 ;;		wreg, status,2, status,0
   662 ;; Tracked objects:
   663 ;;		On entry : 0/0
   664 ;;		On exit  : 0/0
   665 ;;		Unchanged: 0/0
   666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   667 ;;      Params:         4       0       0       0       0
   668 ;;      Locals:         2       0       0       0       0
   669 ;;      Temps:          1       0       0       0       0
   670 ;;      Totals:         7       0       0       0       0
   671 ;;Total ram usage:        7 bytes
   672 ;; Hardware stack levels used: 1
   673 ;; This function calls:
   674 ;;		Nothing
   675 ;; This function is called by:
   676 ;;		_Print_Led
   677 ;; This function uses a non-reentrant model
   678 ;;
   679                           
   680     06AD                     ___awmod:	
   681                           ;psect for function ___awmod
   682                           
   683     06AD                     l842:	
   684                           ;incstack = 0
   685                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   686                           
   687     06AD  01F6               	clrf	___awmod@sign
   688     06AE                     l844:
   689     06AE  1FF3               	btfss	___awmod@dividend+1,7
   690     06AF  2EB1               	goto	u451
   691     06B0  2EB2               	goto	u450
   692     06B1                     u451:
   693     06B1  2EB9               	goto	l850
   694     06B2                     u450:
   695     06B2                     l846:
   696     06B2  09F2               	comf	___awmod@dividend,f
   697     06B3  09F3               	comf	___awmod@dividend+1,f
   698     06B4  0AF2               	incf	___awmod@dividend,f
   699     06B5  1903               	skipnz
   700     06B6  0AF3               	incf	___awmod@dividend+1,f
   701     06B7                     l848:
   702     06B7  01F6               	clrf	___awmod@sign
   703     06B8  0AF6               	incf	___awmod@sign,f
   704     06B9                     l850:
   705     06B9  1FF1               	btfss	___awmod@divisor+1,7
   706     06BA  2EBC               	goto	u461
   707     06BB  2EBD               	goto	u460
   708     06BC                     u461:
   709     06BC  2EC2               	goto	l854
   710     06BD                     u460:
   711     06BD                     l852:
   712     06BD  09F0               	comf	___awmod@divisor,f
   713     06BE  09F1               	comf	___awmod@divisor+1,f
   714     06BF  0AF0               	incf	___awmod@divisor,f
   715     06C0  1903               	skipnz
   716     06C1  0AF1               	incf	___awmod@divisor+1,f
   717     06C2                     l854:
   718     06C2  0870               	movf	___awmod@divisor,w
   719     06C3  0471               	iorwf	___awmod@divisor+1,w
   720     06C4  1903               	btfsc	3,2
   721     06C5  2EC7               	goto	u471
   722     06C6  2EC8               	goto	u470
   723     06C7                     u471:
   724     06C7  2EF7               	goto	l872
   725     06C8                     u470:
   726     06C8                     l856:
   727     06C8  01F5               	clrf	___awmod@counter
   728     06C9  0AF5               	incf	___awmod@counter,f
   729     06CA  2ED6               	goto	l862
   730     06CB                     l858:
   731     06CB  3001               	movlw	1
   732     06CC                     u485:
   733     06CC  1003               	clrc
   734     06CD  0DF0               	rlf	___awmod@divisor,f
   735     06CE  0DF1               	rlf	___awmod@divisor+1,f
   736     06CF  3EFF               	addlw	-1
   737     06D0  1D03               	skipz
   738     06D1  2ECC               	goto	u485
   739     06D2                     l860:
   740     06D2  3001               	movlw	1
   741     06D3  00F4               	movwf	??___awmod
   742     06D4  0874               	movf	??___awmod,w
   743     06D5  07F5               	addwf	___awmod@counter,f
   744     06D6                     l862:
   745     06D6  1FF1               	btfss	___awmod@divisor+1,7
   746     06D7  2ED9               	goto	u491
   747     06D8  2EDA               	goto	u490
   748     06D9                     u491:
   749     06D9  2ECB               	goto	l858
   750     06DA                     u490:
   751     06DA                     l864:
   752     06DA  0871               	movf	___awmod@divisor+1,w
   753     06DB  0273               	subwf	___awmod@dividend+1,w
   754     06DC  1D03               	skipz
   755     06DD  2EE0               	goto	u505
   756     06DE  0870               	movf	___awmod@divisor,w
   757     06DF  0272               	subwf	___awmod@dividend,w
   758     06E0                     u505:
   759     06E0  1C03               	skipc
   760     06E1  2EE3               	goto	u501
   761     06E2  2EE4               	goto	u500
   762     06E3                     u501:
   763     06E3  2EEA               	goto	l868
   764     06E4                     u500:
   765     06E4                     l866:
   766     06E4  0870               	movf	___awmod@divisor,w
   767     06E5  02F2               	subwf	___awmod@dividend,f
   768     06E6  0871               	movf	___awmod@divisor+1,w
   769     06E7  1C03               	skipc
   770     06E8  03F3               	decf	___awmod@dividend+1,f
   771     06E9  02F3               	subwf	___awmod@dividend+1,f
   772     06EA                     l868:
   773     06EA  3001               	movlw	1
   774     06EB                     u515:
   775     06EB  1003               	clrc
   776     06EC  0CF1               	rrf	___awmod@divisor+1,f
   777     06ED  0CF0               	rrf	___awmod@divisor,f
   778     06EE  3EFF               	addlw	-1
   779     06EF  1D03               	skipz
   780     06F0  2EEB               	goto	u515
   781     06F1                     l870:
   782     06F1  3001               	movlw	1
   783     06F2  02F5               	subwf	___awmod@counter,f
   784     06F3  1D03               	btfss	3,2
   785     06F4  2EF6               	goto	u521
   786     06F5  2EF7               	goto	u520
   787     06F6                     u521:
   788     06F6  2EDA               	goto	l864
   789     06F7                     u520:
   790     06F7                     l872:
   791     06F7  0876               	movf	___awmod@sign,w
   792     06F8  1903               	btfsc	3,2
   793     06F9  2EFB               	goto	u531
   794     06FA  2EFC               	goto	u530
   795     06FB                     u531:
   796     06FB  2F01               	goto	l876
   797     06FC                     u530:
   798     06FC                     l874:
   799     06FC  09F2               	comf	___awmod@dividend,f
   800     06FD  09F3               	comf	___awmod@dividend+1,f
   801     06FE  0AF2               	incf	___awmod@dividend,f
   802     06FF  1903               	skipnz
   803     0700  0AF3               	incf	___awmod@dividend+1,f
   804     0701                     l876:
   805     0701  0873               	movf	___awmod@dividend+1,w
   806     0702  00F1               	movwf	?___awmod+1
   807     0703  0872               	movf	___awmod@dividend,w
   808     0704  00F0               	movwf	?___awmod
   809     0705                     l300:
   810     0705  0008               	return
   811     0706                     __end_of___awmod:
   812                           
   813                           	psect	text3
   814     0706                     __ptext3:	
   815 ;; *************** function ___awdiv *****************
   816 ;; Defined at:
   817 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
   818 ;; Parameters:    Size  Location     Type
   819 ;;  divisor         2    0[COMMON] int 
   820 ;;  dividend        2    2[COMMON] int 
   821 ;; Auto vars:     Size  Location     Type
   822 ;;  quotient        2    7[COMMON] int 
   823 ;;  sign            1    6[COMMON] unsigned char 
   824 ;;  counter         1    5[COMMON] unsigned char 
   825 ;; Return value:  Size  Location     Type
   826 ;;                  2    0[COMMON] int 
   827 ;; Registers used:
   828 ;;		wreg, status,2, status,0
   829 ;; Tracked objects:
   830 ;;		On entry : 0/0
   831 ;;		On exit  : 0/0
   832 ;;		Unchanged: 0/0
   833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   834 ;;      Params:         4       0       0       0       0
   835 ;;      Locals:         4       0       0       0       0
   836 ;;      Temps:          1       0       0       0       0
   837 ;;      Totals:         9       0       0       0       0
   838 ;;Total ram usage:        9 bytes
   839 ;; Hardware stack levels used: 1
   840 ;; This function calls:
   841 ;;		Nothing
   842 ;; This function is called by:
   843 ;;		_Print_Led
   844 ;; This function uses a non-reentrant model
   845 ;;
   846                           
   847     0706                     ___awdiv:	
   848                           ;psect for function ___awdiv
   849                           
   850     0706                     l798:	
   851                           ;incstack = 0
   852                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   853                           
   854     0706  01F6               	clrf	___awdiv@sign
   855     0707                     l800:
   856     0707  1FF1               	btfss	___awdiv@divisor+1,7
   857     0708  2F0A               	goto	u351
   858     0709  2F0B               	goto	u350
   859     070A                     u351:
   860     070A  2F12               	goto	l806
   861     070B                     u350:
   862     070B                     l802:
   863     070B  09F0               	comf	___awdiv@divisor,f
   864     070C  09F1               	comf	___awdiv@divisor+1,f
   865     070D  0AF0               	incf	___awdiv@divisor,f
   866     070E  1903               	skipnz
   867     070F  0AF1               	incf	___awdiv@divisor+1,f
   868     0710                     l804:
   869     0710  01F6               	clrf	___awdiv@sign
   870     0711  0AF6               	incf	___awdiv@sign,f
   871     0712                     l806:
   872     0712  1FF3               	btfss	___awdiv@dividend+1,7
   873     0713  2F15               	goto	u361
   874     0714  2F16               	goto	u360
   875     0715                     u361:
   876     0715  2F1F               	goto	l812
   877     0716                     u360:
   878     0716                     l808:
   879     0716  09F2               	comf	___awdiv@dividend,f
   880     0717  09F3               	comf	___awdiv@dividend+1,f
   881     0718  0AF2               	incf	___awdiv@dividend,f
   882     0719  1903               	skipnz
   883     071A  0AF3               	incf	___awdiv@dividend+1,f
   884     071B                     l810:
   885     071B  3001               	movlw	1
   886     071C  00F4               	movwf	??___awdiv
   887     071D  0874               	movf	??___awdiv,w
   888     071E  06F6               	xorwf	___awdiv@sign,f
   889     071F                     l812:
   890     071F  01F7               	clrf	___awdiv@quotient
   891     0720  01F8               	clrf	___awdiv@quotient+1
   892     0721                     l814:
   893     0721  0870               	movf	___awdiv@divisor,w
   894     0722  0471               	iorwf	___awdiv@divisor+1,w
   895     0723  1903               	btfsc	3,2
   896     0724  2F26               	goto	u371
   897     0725  2F27               	goto	u370
   898     0726                     u371:
   899     0726  2F5E               	goto	l834
   900     0727                     u370:
   901     0727                     l816:
   902     0727  01F5               	clrf	___awdiv@counter
   903     0728  0AF5               	incf	___awdiv@counter,f
   904     0729  2F35               	goto	l822
   905     072A                     l818:
   906     072A  3001               	movlw	1
   907     072B                     u385:
   908     072B  1003               	clrc
   909     072C  0DF0               	rlf	___awdiv@divisor,f
   910     072D  0DF1               	rlf	___awdiv@divisor+1,f
   911     072E  3EFF               	addlw	-1
   912     072F  1D03               	skipz
   913     0730  2F2B               	goto	u385
   914     0731                     l820:
   915     0731  3001               	movlw	1
   916     0732  00F4               	movwf	??___awdiv
   917     0733  0874               	movf	??___awdiv,w
   918     0734  07F5               	addwf	___awdiv@counter,f
   919     0735                     l822:
   920     0735  1FF1               	btfss	___awdiv@divisor+1,7
   921     0736  2F38               	goto	u391
   922     0737  2F39               	goto	u390
   923     0738                     u391:
   924     0738  2F2A               	goto	l818
   925     0739                     u390:
   926     0739                     l824:
   927     0739  3001               	movlw	1
   928     073A                     u405:
   929     073A  1003               	clrc
   930     073B  0DF7               	rlf	___awdiv@quotient,f
   931     073C  0DF8               	rlf	___awdiv@quotient+1,f
   932     073D  3EFF               	addlw	-1
   933     073E  1D03               	skipz
   934     073F  2F3A               	goto	u405
   935     0740  0871               	movf	___awdiv@divisor+1,w
   936     0741  0273               	subwf	___awdiv@dividend+1,w
   937     0742  1D03               	skipz
   938     0743  2F46               	goto	u415
   939     0744  0870               	movf	___awdiv@divisor,w
   940     0745  0272               	subwf	___awdiv@dividend,w
   941     0746                     u415:
   942     0746  1C03               	skipc
   943     0747  2F49               	goto	u411
   944     0748  2F4A               	goto	u410
   945     0749                     u411:
   946     0749  2F51               	goto	l830
   947     074A                     u410:
   948     074A                     l826:
   949     074A  0870               	movf	___awdiv@divisor,w
   950     074B  02F2               	subwf	___awdiv@dividend,f
   951     074C  0871               	movf	___awdiv@divisor+1,w
   952     074D  1C03               	skipc
   953     074E  03F3               	decf	___awdiv@dividend+1,f
   954     074F  02F3               	subwf	___awdiv@dividend+1,f
   955     0750                     l828:
   956     0750  1477               	bsf	___awdiv@quotient,0
   957     0751                     l830:
   958     0751  3001               	movlw	1
   959     0752                     u425:
   960     0752  1003               	clrc
   961     0753  0CF1               	rrf	___awdiv@divisor+1,f
   962     0754  0CF0               	rrf	___awdiv@divisor,f
   963     0755  3EFF               	addlw	-1
   964     0756  1D03               	skipz
   965     0757  2F52               	goto	u425
   966     0758                     l832:
   967     0758  3001               	movlw	1
   968     0759  02F5               	subwf	___awdiv@counter,f
   969     075A  1D03               	btfss	3,2
   970     075B  2F5D               	goto	u431
   971     075C  2F5E               	goto	u430
   972     075D                     u431:
   973     075D  2F39               	goto	l824
   974     075E                     u430:
   975     075E                     l834:
   976     075E  0876               	movf	___awdiv@sign,w
   977     075F  1903               	btfsc	3,2
   978     0760  2F62               	goto	u441
   979     0761  2F63               	goto	u440
   980     0762                     u441:
   981     0762  2F68               	goto	l838
   982     0763                     u440:
   983     0763                     l836:
   984     0763  09F7               	comf	___awdiv@quotient,f
   985     0764  09F8               	comf	___awdiv@quotient+1,f
   986     0765  0AF7               	incf	___awdiv@quotient,f
   987     0766  1903               	skipnz
   988     0767  0AF8               	incf	___awdiv@quotient+1,f
   989     0768                     l838:
   990     0768  0878               	movf	___awdiv@quotient+1,w
   991     0769  00F1               	movwf	?___awdiv+1
   992     076A  0877               	movf	___awdiv@quotient,w
   993     076B  00F0               	movwf	?___awdiv
   994     076C                     l287:
   995     076C  0008               	return
   996     076D                     __end_of___awdiv:
   997                           
   998                           	psect	text4
   999     076D                     __ptext4:	
  1000 ;; *************** function _Numpad_Read *****************
  1001 ;; Defined at:
  1002 ;;		line 21 in file "numpad.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;		None
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;  rowScan         1    5[COMMON] unsigned char 
  1007 ;;  colScan         1    4[COMMON] unsigned char 
  1008 ;;  currentKeyVa    1    3[COMMON] unsigned char 
  1009 ;;  currentKey      1    2[COMMON] unsigned char 
  1010 ;; Return value:  Size  Location     Type
  1011 ;;                  1    wreg      unsigned char 
  1012 ;; Registers used:
  1013 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1014 ;; Tracked objects:
  1015 ;;		On entry : 0/0
  1016 ;;		On exit  : 0/0
  1017 ;;		Unchanged: 0/0
  1018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1019 ;;      Params:         0       0       0       0       0
  1020 ;;      Locals:         4       0       0       0       0
  1021 ;;      Temps:          2       0       0       0       0
  1022 ;;      Totals:         6       0       0       0       0
  1023 ;;Total ram usage:        6 bytes
  1024 ;; Hardware stack levels used: 2
  1025 ;; This function calls:
  1026 ;;		Nothing
  1027 ;; This function is called by:
  1028 ;;		_main
  1029 ;; This function uses a non-reentrant model
  1030 ;;
  1031                           
  1032     076D                     _Numpad_Read:	
  1033                           ;psect for function _Numpad_Read
  1034                           
  1035     076D                     l886:	
  1036                           ;incstack = 0
  1037                           ; Regs used in _Numpad_Read: [wreg-fsr0h+status,2+status,0+pclath]
  1038                           
  1039                           
  1040                           ;numpad.c: 23:     TRISD |= 0x0f;
  1041     076D  300F               	movlw	15
  1042     076E  00F0               	movwf	??_Numpad_Read
  1043     076F  0870               	movf	??_Numpad_Read,w
  1044     0770  1683               	bsf	3,5	;RP0=1, select bank1
  1045     0771  1303               	bcf	3,6	;RP1=0, select bank1
  1046     0772  0488               	iorwf	8,f	;volatile
  1047                           
  1048                           ;numpad.c: 24:     TRISB &= ~0x07;
  1049     0773  30F8               	movlw	248
  1050     0774  00F0               	movwf	??_Numpad_Read
  1051     0775  0870               	movf	??_Numpad_Read,w
  1052     0776  0586               	andwf	6,f	;volatile
  1053     0777                     l888:
  1054                           
  1055                           ;numpad.c: 25:     char colScan, rowScan, currentKeyVal, currentKey;;numpad.c: 26:     s
      +                          tatic char oldKeyVal;;numpad.c: 27:     for (colScan = 0; colScan < 3; colScan++) {
  1056     0777  01F4               	clrf	Numpad_Read@colScan
  1057     0778                     l894:
  1058                           
  1059                           ;numpad.c: 28:         PORTB |= 0x07;
  1060     0778  3007               	movlw	7
  1061     0779  00F0               	movwf	??_Numpad_Read
  1062     077A  0870               	movf	??_Numpad_Read,w
  1063     077B  1283               	bcf	3,5	;RP0=0, select bank0
  1064     077C  0486               	iorwf	6,f	;volatile
  1065                           
  1066                           ;numpad.c: 29:         PORTB &= ~(1 << colScan);
  1067     077D  3001               	movlw	1
  1068     077E  00F0               	movwf	??_Numpad_Read
  1069     077F  0A74               	incf	Numpad_Read@colScan,w
  1070     0780  2F83               	goto	u564
  1071     0781                     u565:
  1072     0781  1003               	clrc
  1073     0782  0DF0               	rlf	??_Numpad_Read,f
  1074     0783                     u564:
  1075     0783  3EFF               	addlw	-1
  1076     0784  1D03               	skipz
  1077     0785  2F81               	goto	u565
  1078     0786  0870               	movf	??_Numpad_Read,w
  1079     0787  3AFF               	xorlw	255
  1080     0788  00F1               	movwf	??_Numpad_Read+1
  1081     0789  0871               	movf	??_Numpad_Read+1,w
  1082     078A  0586               	andwf	6,f	;volatile
  1083     078B                     l896:
  1084                           
  1085                           ;numpad.c: 30:         _delay((unsigned long)((15)*(20*1000000/4000.0)));
  1086     078B  3062               	movlw	98
  1087     078C  00F1               	movwf	??_Numpad_Read+1
  1088     078D  3065               	movlw	101
  1089     078E  00F0               	movwf	??_Numpad_Read
  1090     078F                     u697:
  1091     078F  0BF0               	decfsz	??_Numpad_Read,f
  1092     0790  2F8F               	goto	u697
  1093     0791  0BF1               	decfsz	??_Numpad_Read+1,f
  1094     0792  2F8F               	goto	u697
  1095     0793  2F94               	nop2
  1096     0794                     l898:
  1097                           
  1098                           ;numpad.c: 31:         for (rowScan = 0; rowScan < 4; rowScan++) {
  1099     0794  01F5               	clrf	Numpad_Read@rowScan
  1100     0795                     l904:
  1101                           
  1102                           ;numpad.c: 32:             currentKeyVal = (PORTD & (1 << rowScan));
  1103     0795  3001               	movlw	1
  1104     0796  00F0               	movwf	??_Numpad_Read
  1105     0797  0A75               	incf	Numpad_Read@rowScan,w
  1106     0798  2F9B               	goto	u574
  1107     0799                     u575:
  1108     0799  1003               	clrc
  1109     079A  0DF0               	rlf	??_Numpad_Read,f
  1110     079B                     u574:
  1111     079B  3EFF               	addlw	-1
  1112     079C  1D03               	skipz
  1113     079D  2F99               	goto	u575
  1114     079E  0870               	movf	??_Numpad_Read,w
  1115     079F  1283               	bcf	3,5	;RP0=0, select bank0
  1116     07A0  1303               	bcf	3,6	;RP1=0, select bank0
  1117     07A1  0508               	andwf	8,w	;volatile
  1118     07A2  00F3               	movwf	Numpad_Read@currentKeyVal
  1119                           
  1120                           ;numpad.c: 34:             if (!currentKeyVal && oldKeyVal) {
  1121     07A3  0873               	movf	Numpad_Read@currentKeyVal,w
  1122     07A4  1D03               	btfss	3,2
  1123     07A5  2FA7               	goto	u581
  1124     07A6  2FA8               	goto	u580
  1125     07A7                     u581:
  1126     07A7  2FE1               	goto	l126
  1127     07A8                     u580:
  1128     07A8                     l906:
  1129     07A8  0826               	movf	Numpad_Read@oldKeyVal,w
  1130     07A9  1903               	btfsc	3,2
  1131     07AA  2FAC               	goto	u591
  1132     07AB  2FAD               	goto	u590
  1133     07AC                     u591:
  1134     07AC  2FE1               	goto	l126
  1135     07AD                     u590:
  1136     07AD                     l908:
  1137                           
  1138                           ;numpad.c: 35:                 currentKey = keypad[rowScan + (4 * colScan)];
  1139     07AD  0874               	movf	Numpad_Read@colScan,w
  1140     07AE  00F0               	movwf	??_Numpad_Read
  1141     07AF  3002               	movlw	2
  1142     07B0                     u605:
  1143     07B0  1003               	clrc
  1144     07B1  0DF0               	rlf	??_Numpad_Read,f
  1145     07B2  3EFF               	addlw	-1
  1146     07B3  1D03               	skipz
  1147     07B4  2FB0               	goto	u605
  1148     07B5  3001               	movlw	(low ((_keypad-__stringbase)| (0+32768)))& (0+255)
  1149     07B6  0770               	addwf	??_Numpad_Read,w
  1150     07B7  00F1               	movwf	??_Numpad_Read+1
  1151     07B8  0875               	movf	Numpad_Read@rowScan,w
  1152     07B9  0771               	addwf	??_Numpad_Read+1,w
  1153     07BA  0084               	movwf	4
  1154     07BB  120A  118A  2003  120A  118A  	fcall	stringdir
  1155     07C0  00F2               	movwf	Numpad_Read@currentKey
  1156     07C1                     l910:
  1157                           
  1158                           ;numpad.c: 36:                 oldKeyVal = 0;
  1159     07C1  01A6               	clrf	Numpad_Read@oldKeyVal
  1160                           
  1161                           ;numpad.c: 37:                 while (!currentKeyVal) {
  1162     07C2  2FDA               	goto	l916
  1163     07C3                     l912:
  1164                           
  1165                           ;numpad.c: 38:                     currentKeyVal = (PORTD & (1 << rowScan));
  1166     07C3  3001               	movlw	1
  1167     07C4  00F0               	movwf	??_Numpad_Read
  1168     07C5  0A75               	incf	Numpad_Read@rowScan,w
  1169     07C6  2FC9               	goto	u614
  1170     07C7                     u615:
  1171     07C7  1003               	clrc
  1172     07C8  0DF0               	rlf	??_Numpad_Read,f
  1173     07C9                     u614:
  1174     07C9  3EFF               	addlw	-1
  1175     07CA  1D03               	skipz
  1176     07CB  2FC7               	goto	u615
  1177     07CC  0870               	movf	??_Numpad_Read,w
  1178     07CD  1283               	bcf	3,5	;RP0=0, select bank0
  1179     07CE  1303               	bcf	3,6	;RP1=0, select bank0
  1180     07CF  0508               	andwf	8,w	;volatile
  1181     07D0  00F3               	movwf	Numpad_Read@currentKeyVal
  1182     07D1                     l914:
  1183                           
  1184                           ;numpad.c: 39:                     _delay((unsigned long)((20)*(20*1000000/4000.0)));
  1185     07D1  3082               	movlw	130
  1186     07D2  00F1               	movwf	??_Numpad_Read+1
  1187     07D3  30DD               	movlw	221
  1188     07D4  00F0               	movwf	??_Numpad_Read
  1189     07D5                     u707:
  1190     07D5  0BF0               	decfsz	??_Numpad_Read,f
  1191     07D6  2FD5               	goto	u707
  1192     07D7  0BF1               	decfsz	??_Numpad_Read+1,f
  1193     07D8  2FD5               	goto	u707
  1194     07D9  2FDA               	nop2
  1195     07DA                     l916:
  1196                           
  1197                           ;numpad.c: 37:                 while (!currentKeyVal) {
  1198     07DA  0873               	movf	Numpad_Read@currentKeyVal,w
  1199     07DB  1903               	btfsc	3,2
  1200     07DC  2FDE               	goto	u621
  1201     07DD  2FDF               	goto	u620
  1202     07DE                     u621:
  1203     07DE  2FC3               	goto	l912
  1204     07DF                     u620:
  1205     07DF                     l918:
  1206                           
  1207                           ;numpad.c: 41:                 return currentKey;
  1208     07DF  0872               	movf	Numpad_Read@currentKey,w
  1209     07E0  2FF8               	goto	l130
  1210     07E1                     l126:	
  1211                           ;numpad.c: 42:             }
  1212                           
  1213                           
  1214                           ;numpad.c: 44:             oldKeyVal = 1;
  1215     07E1  01A6               	clrf	Numpad_Read@oldKeyVal
  1216     07E2  0AA6               	incf	Numpad_Read@oldKeyVal,f
  1217     07E3                     l922:
  1218                           
  1219                           ;numpad.c: 45:         }
  1220     07E3  3001               	movlw	1
  1221     07E4  00F0               	movwf	??_Numpad_Read
  1222     07E5  0870               	movf	??_Numpad_Read,w
  1223     07E6  07F5               	addwf	Numpad_Read@rowScan,f
  1224     07E7                     l924:
  1225     07E7  3004               	movlw	4
  1226     07E8  0275               	subwf	Numpad_Read@rowScan,w
  1227     07E9  1C03               	skipc
  1228     07EA  2FEC               	goto	u631
  1229     07EB  2FED               	goto	u630
  1230     07EC                     u631:
  1231     07EC  2F95               	goto	l904
  1232     07ED                     u630:
  1233     07ED                     l926:
  1234                           
  1235                           ;numpad.c: 46:     }
  1236     07ED  3001               	movlw	1
  1237     07EE  00F0               	movwf	??_Numpad_Read
  1238     07EF  0870               	movf	??_Numpad_Read,w
  1239     07F0  07F4               	addwf	Numpad_Read@colScan,f
  1240     07F1                     l928:
  1241     07F1  3003               	movlw	3
  1242     07F2  0274               	subwf	Numpad_Read@colScan,w
  1243     07F3  1C03               	skipc
  1244     07F4  2FF6               	goto	u641
  1245     07F5  2FF7               	goto	u640
  1246     07F6                     u641:
  1247     07F6  2F78               	goto	l894
  1248     07F7                     u640:
  1249     07F7                     l930:
  1250                           
  1251                           ;numpad.c: 47:     return 0xff;
  1252     07F7  30FF               	movlw	255
  1253     07F8                     l130:
  1254     07F8  0008               	return
  1255     07F9                     __end_of_Numpad_Read:
  1256     007E                     btemp	set	126	;btemp
  1257     007E                     wtemp0	set	126
  1258                           
  1259                           	psect	idloc
  1260                           
  1261                           ;Config register IDLOC0 @ 0x2000
  1262                           ;	unspecified, using default values
  1263     2000                     	org	8192
  1264     2000  3FFF               	dw	16383
  1265                           
  1266                           ;Config register IDLOC1 @ 0x2001
  1267                           ;	unspecified, using default values
  1268     2001                     	org	8193
  1269     2001  3FFF               	dw	16383
  1270                           
  1271                           ;Config register IDLOC2 @ 0x2002
  1272                           ;	unspecified, using default values
  1273     2002                     	org	8194
  1274     2002  3FFF               	dw	16383
  1275                           
  1276                           ;Config register IDLOC3 @ 0x2003
  1277                           ;	unspecified, using default values
  1278     2003                     	org	8195
  1279     2003  3FFF               	dw	16383
  1280                           
  1281                           	psect	config
  1282                           
  1283                           ;Config register CONFIG @ 0x2007
  1284                           ;	Oscillator Selection bits
  1285                           ;	FOSC = HS, HS oscillator
  1286                           ;	Watchdog Timer Enable bit
  1287                           ;	WDTE = OFF, WDT disabled
  1288                           ;	Power-up Timer Enable bit
  1289                           ;	PWRTE = ON, PWRT enabled
  1290                           ;	Brown-out Reset Enable bit
  1291                           ;	BOREN = ON, BOR enabled
  1292                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1293                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  1294                           ;	Data EEPROM Memory Code Protection bit
  1295                           ;	CPD = OFF, Data EEPROM code protection off
  1296                           ;	Flash Program Memory Write Enable bits
  1297                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1298                           ;	In-Circuit Debugger Mode bit
  1299                           ;	DEBUG = 0x1, unprogrammed default
  1300                           ;	Flash Program Memory Code Protection bit
  1301                           ;	CP = OFF, Code protection off
  1302     2007                     	org	8199
  1303     2007  3FF2               	dw	16370

Data Sizes:
    Strings     0
    Constant    12
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      6       7
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Print_Led
    _Print_Led->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    1443
                                              0 BANK0      6     6      0
                        _Numpad_Read
                          _Print_Led
 ---------------------------------------------------------------------------------
 (1) _Print_Led                                            5     5      0     944
                                              9 COMMON     5     5      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _Numpad_Read                                          6     6      0     271
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Numpad_Read
   _Print_Led
     ___awdiv
     ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      15       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6       7       5        8.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      15      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Jan 18 21:58:53 2023

                       l9 06AC                         pc 0002                        l16 065F  
            ___awdiv@sign 0076                        fsr 0004  Numpad_Read@currentKeyVal 0073  
                     l130 07F8                       l300 0705                       l126 07E1  
                     l287 076C                       l800 0707                       l810 071B  
                     l802 070B                       l820 0731                       l812 071F  
                     l804 0710                       l910 07C1                       l830 0751  
                     l822 0735                       l814 0721                       l806 0712  
                     l912 07C3                       l904 0795                       l832 0758  
                     l824 0739                       l816 0727                       l808 0716  
                     l930 07F7                       l922 07E3                       l914 07D1  
                     l906 07A8                       l826 074A                       l818 072A  
                     l834 075E                       l850 06B9                       l842 06AD  
                     l924 07E7                       l916 07DA                       l908 07AD  
                     l836 0763                       l828 0750                       l860 06D2  
                     l852 06BD                       l844 06AE                       l940 0637  
                     l926 07ED                       l918 07DF                       l838 0768  
                     l870 06F1                       l862 06D6                       l854 06C2  
                     l846 06B2                       l950 0654                       l942 063E  
                     l934 0629                       l928 07F1                       l864 06DA  
                     l856 06C8                       l872 06F7                       l848 06B7  
                     l880 0664                       l952 0657                       l944 0644  
                     l936 0629                       l874 06FC                       l866 06E4  
                     l858 06CB                       l882 066E                       l954 0658  
                     l946 0649                       l938 0631                       l876 0701  
                     l868 06EA                       l884 068D                       l948 064E  
                     l894 0778                       l886 076D                       l798 0706  
                     l896 078B                       l888 0777                       l898 0794  
                     u410 074A                       u411 0749                       u500 06E4  
                     u405 073A                       u501 06E3                       u430 075E  
                     u350 070B                       u431 075D                       u415 0746  
                     u351 070A                       u440 0763                       u360 0716  
                     u520 06F7                       u441 0762                       u425 0752  
                     u361 0715                       u521 06F6                       u505 06E0  
                     u370 0727                       u530 06FC                       u450 06B2  
                     u371 0726                       u531 06FB                       u515 06EB  
                     u451 06B1                       u620 07DF                       u460 06BD  
                     u621 07DE                       u605 07B0                       u461 06BC  
                     u630 07ED                       u614 07C9                       u390 0739  
                     u470 06C8                       u631 07EC                       u615 07C7  
                     u391 0738                       u471 06C7                       u640 07F7  
                     u641 07F6                       u385 072B                       u545 0681  
                     u490 06DA                       u650 0637                       u707 07D5  
                     u491 06D9                       u555 06A0                       u651 0636  
                     u580 07A8                       u564 0783                       u660 0644  
                     u581 07A7                       u565 0781                       u485 06CC  
                     u661 0643                       u590 07AD                       u574 079B  
                     u670 0649                       u591 07AC                       u575 0799  
                     u671 0648                       u680 0654                       u681 0653  
                     u697 078F                       fsr0 0004                       indf 0000  
            ___awmod@sign 0076                      _main 0629                      btemp 007E  
                    start 0000                     ?_main 0070           __end_of___awdiv 076D  
         __end_of___awmod 0706           ___awdiv@divisor 0070           ___awdiv@counter 0075  
                   _PORTB 0006                     _PORTD 0008                     _TRISB 0086  
                   _TRISD 0088                     pclath 000A                     status 0003  
                   wtemp0 007E           __initialization 07F9              __end_of_main 0663  
                  ??_main 0020          ___awdiv@dividend 0072                 ??___awdiv 0074  
               ??___awmod 0074                    _keypad 0009          ___awdiv@quotient 0077  
           main@selettore 0024           ___awmod@divisor 0070             main@operatore 0022  
         ___awmod@counter 0075             ??_Numpad_Read 0070             main@risultato 0021  
 __end_of__initialization 07FC            __pcstackCOMMON 0070       __end_of_Numpad_Read 07F9  
              __pbssBANK0 0026         __end_of_Print_Led 06AD                __pmaintext 0629  
              __stringtab 0003                   ___awdiv 0706                   ___awmod 06AD  
                 __ptext1 0663                   __ptext2 06AD                   __ptext3 0706  
                 __ptext4 076D          ___awmod@dividend 0072               _Numpad_Read 076D  
    Numpad_Read@oldKeyVal 0026            Print_Led@value 007D      end_of_initialization 07FC  
          __end_of_keypad 0015       start_initialization 07F9        Numpad_Read@colScan 0074  
               _Print_Led 0663        Numpad_Read@rowScan 0075                 ___latbits 0002  
           __pcstackBANK0 0020                  ?___awdiv 0070                  ?___awmod 0070  
              ?_Print_Led 0070                 __pstrings 0003              ?_Numpad_Read 0070  
             __stringbase 0008               ??_Print_Led 0079        __end_of__stringtab 0009  
   Numpad_Read@currentKey 0072                  main@read 0025                 stringcode 0003  
                stringdir 0003                  stringtab 0003  
