

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Jan 26 10:18:12 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35     0000                     
    36                           ; Version 2.40
    37                           ; Generated 17/11/2021 GMT
    38                           ; 
    39                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F877A Definitions
    69                           ; 
    70                           ; SFR Addresses
    71     0000                     	;# 
    72     0001                     	;# 
    73     0002                     	;# 
    74     0003                     	;# 
    75     0004                     	;# 
    76     0005                     	;# 
    77     0006                     	;# 
    78     0007                     	;# 
    79     0008                     	;# 
    80     0009                     	;# 
    81     000A                     	;# 
    82     000B                     	;# 
    83     000C                     	;# 
    84     000D                     	;# 
    85     000E                     	;# 
    86     000E                     	;# 
    87     000F                     	;# 
    88     0010                     	;# 
    89     0011                     	;# 
    90     0012                     	;# 
    91     0013                     	;# 
    92     0014                     	;# 
    93     0015                     	;# 
    94     0015                     	;# 
    95     0016                     	;# 
    96     0017                     	;# 
    97     0018                     	;# 
    98     0019                     	;# 
    99     001A                     	;# 
   100     001B                     	;# 
   101     001B                     	;# 
   102     001C                     	;# 
   103     001D                     	;# 
   104     001E                     	;# 
   105     001F                     	;# 
   106     0081                     	;# 
   107     0085                     	;# 
   108     0086                     	;# 
   109     0087                     	;# 
   110     0088                     	;# 
   111     0089                     	;# 
   112     008C                     	;# 
   113     008D                     	;# 
   114     008E                     	;# 
   115     0091                     	;# 
   116     0092                     	;# 
   117     0093                     	;# 
   118     0094                     	;# 
   119     0098                     	;# 
   120     0099                     	;# 
   121     009C                     	;# 
   122     009D                     	;# 
   123     009E                     	;# 
   124     009F                     	;# 
   125     010C                     	;# 
   126     010D                     	;# 
   127     010E                     	;# 
   128     010F                     	;# 
   129     018C                     	;# 
   130     018D                     	;# 
   131     0000                     	;# 
   132     0001                     	;# 
   133     0002                     	;# 
   134     0003                     	;# 
   135     0004                     	;# 
   136     0005                     	;# 
   137     0006                     	;# 
   138     0007                     	;# 
   139     0008                     	;# 
   140     0009                     	;# 
   141     000A                     	;# 
   142     000B                     	;# 
   143     000C                     	;# 
   144     000D                     	;# 
   145     000E                     	;# 
   146     000E                     	;# 
   147     000F                     	;# 
   148     0010                     	;# 
   149     0011                     	;# 
   150     0012                     	;# 
   151     0013                     	;# 
   152     0014                     	;# 
   153     0015                     	;# 
   154     0015                     	;# 
   155     0016                     	;# 
   156     0017                     	;# 
   157     0018                     	;# 
   158     0019                     	;# 
   159     001A                     	;# 
   160     001B                     	;# 
   161     001B                     	;# 
   162     001C                     	;# 
   163     001D                     	;# 
   164     001E                     	;# 
   165     001F                     	;# 
   166     0081                     	;# 
   167     0085                     	;# 
   168     0086                     	;# 
   169     0087                     	;# 
   170     0088                     	;# 
   171     0089                     	;# 
   172     008C                     	;# 
   173     008D                     	;# 
   174     008E                     	;# 
   175     0091                     	;# 
   176     0092                     	;# 
   177     0093                     	;# 
   178     0094                     	;# 
   179     0098                     	;# 
   180     0099                     	;# 
   181     009C                     	;# 
   182     009D                     	;# 
   183     009E                     	;# 
   184     009F                     	;# 
   185     010C                     	;# 
   186     010D                     	;# 
   187     010E                     	;# 
   188     010F                     	;# 
   189     018C                     	;# 
   190     018D                     	;# 
   191     0000                     	;# 
   192     0001                     	;# 
   193     0002                     	;# 
   194     0003                     	;# 
   195     0004                     	;# 
   196     0005                     	;# 
   197     0006                     	;# 
   198     0007                     	;# 
   199     0008                     	;# 
   200     0009                     	;# 
   201     000A                     	;# 
   202     000B                     	;# 
   203     000C                     	;# 
   204     000D                     	;# 
   205     000E                     	;# 
   206     000E                     	;# 
   207     000F                     	;# 
   208     0010                     	;# 
   209     0011                     	;# 
   210     0012                     	;# 
   211     0013                     	;# 
   212     0014                     	;# 
   213     0015                     	;# 
   214     0015                     	;# 
   215     0016                     	;# 
   216     0017                     	;# 
   217     0018                     	;# 
   218     0019                     	;# 
   219     001A                     	;# 
   220     001B                     	;# 
   221     001B                     	;# 
   222     001C                     	;# 
   223     001D                     	;# 
   224     001E                     	;# 
   225     001F                     	;# 
   226     0081                     	;# 
   227     0085                     	;# 
   228     0086                     	;# 
   229     0087                     	;# 
   230     0088                     	;# 
   231     0089                     	;# 
   232     008C                     	;# 
   233     008D                     	;# 
   234     008E                     	;# 
   235     0091                     	;# 
   236     0092                     	;# 
   237     0093                     	;# 
   238     0094                     	;# 
   239     0098                     	;# 
   240     0099                     	;# 
   241     009C                     	;# 
   242     009D                     	;# 
   243     009E                     	;# 
   244     009F                     	;# 
   245     010C                     	;# 
   246     010D                     	;# 
   247     010E                     	;# 
   248     010F                     	;# 
   249     018C                     	;# 
   250     018D                     	;# 
   251     0000                     	;# 
   252     0001                     	;# 
   253     0002                     	;# 
   254     0003                     	;# 
   255     0004                     	;# 
   256     0005                     	;# 
   257     0006                     	;# 
   258     0007                     	;# 
   259     0008                     	;# 
   260     0009                     	;# 
   261     000A                     	;# 
   262     000B                     	;# 
   263     000C                     	;# 
   264     000D                     	;# 
   265     000E                     	;# 
   266     000E                     	;# 
   267     000F                     	;# 
   268     0010                     	;# 
   269     0011                     	;# 
   270     0012                     	;# 
   271     0013                     	;# 
   272     0014                     	;# 
   273     0015                     	;# 
   274     0015                     	;# 
   275     0016                     	;# 
   276     0017                     	;# 
   277     0018                     	;# 
   278     0019                     	;# 
   279     001A                     	;# 
   280     001B                     	;# 
   281     001B                     	;# 
   282     001C                     	;# 
   283     001D                     	;# 
   284     001E                     	;# 
   285     001F                     	;# 
   286     0081                     	;# 
   287     0085                     	;# 
   288     0086                     	;# 
   289     0087                     	;# 
   290     0088                     	;# 
   291     0089                     	;# 
   292     008C                     	;# 
   293     008D                     	;# 
   294     008E                     	;# 
   295     0091                     	;# 
   296     0092                     	;# 
   297     0093                     	;# 
   298     0094                     	;# 
   299     0098                     	;# 
   300     0099                     	;# 
   301     009C                     	;# 
   302     009D                     	;# 
   303     009E                     	;# 
   304     009F                     	;# 
   305     010C                     	;# 
   306     010D                     	;# 
   307     010E                     	;# 
   308     010F                     	;# 
   309     018C                     	;# 
   310     018D                     	;# 
   311     0000                     	;# 
   312     0001                     	;# 
   313     0002                     	;# 
   314     0003                     	;# 
   315     0004                     	;# 
   316     0005                     	;# 
   317     0006                     	;# 
   318     0007                     	;# 
   319     0008                     	;# 
   320     0009                     	;# 
   321     000A                     	;# 
   322     000B                     	;# 
   323     000C                     	;# 
   324     000D                     	;# 
   325     000E                     	;# 
   326     000E                     	;# 
   327     000F                     	;# 
   328     0010                     	;# 
   329     0011                     	;# 
   330     0012                     	;# 
   331     0013                     	;# 
   332     0014                     	;# 
   333     0015                     	;# 
   334     0015                     	;# 
   335     0016                     	;# 
   336     0017                     	;# 
   337     0018                     	;# 
   338     0019                     	;# 
   339     001A                     	;# 
   340     001B                     	;# 
   341     001B                     	;# 
   342     001C                     	;# 
   343     001D                     	;# 
   344     001E                     	;# 
   345     001F                     	;# 
   346     0081                     	;# 
   347     0085                     	;# 
   348     0086                     	;# 
   349     0087                     	;# 
   350     0088                     	;# 
   351     0089                     	;# 
   352     008C                     	;# 
   353     008D                     	;# 
   354     008E                     	;# 
   355     0091                     	;# 
   356     0092                     	;# 
   357     0093                     	;# 
   358     0094                     	;# 
   359     0098                     	;# 
   360     0099                     	;# 
   361     009C                     	;# 
   362     009D                     	;# 
   363     009E                     	;# 
   364     009F                     	;# 
   365     010C                     	;# 
   366     010D                     	;# 
   367     010E                     	;# 
   368     010F                     	;# 
   369     018C                     	;# 
   370     018D                     	;# 
   371     0000                     	;# 
   372     0001                     	;# 
   373     0002                     	;# 
   374     0003                     	;# 
   375     0004                     	;# 
   376     0005                     	;# 
   377     0006                     	;# 
   378     0007                     	;# 
   379     0008                     	;# 
   380     0009                     	;# 
   381     000A                     	;# 
   382     000B                     	;# 
   383     000C                     	;# 
   384     000D                     	;# 
   385     000E                     	;# 
   386     000E                     	;# 
   387     000F                     	;# 
   388     0010                     	;# 
   389     0011                     	;# 
   390     0012                     	;# 
   391     0013                     	;# 
   392     0014                     	;# 
   393     0015                     	;# 
   394     0015                     	;# 
   395     0016                     	;# 
   396     0017                     	;# 
   397     0018                     	;# 
   398     0019                     	;# 
   399     001A                     	;# 
   400     001B                     	;# 
   401     001B                     	;# 
   402     001C                     	;# 
   403     001D                     	;# 
   404     001E                     	;# 
   405     001F                     	;# 
   406     0081                     	;# 
   407     0085                     	;# 
   408     0086                     	;# 
   409     0087                     	;# 
   410     0088                     	;# 
   411     0089                     	;# 
   412     008C                     	;# 
   413     008D                     	;# 
   414     008E                     	;# 
   415     0091                     	;# 
   416     0092                     	;# 
   417     0093                     	;# 
   418     0094                     	;# 
   419     0098                     	;# 
   420     0099                     	;# 
   421     009C                     	;# 
   422     009D                     	;# 
   423     009E                     	;# 
   424     009F                     	;# 
   425     010C                     	;# 
   426     010D                     	;# 
   427     010E                     	;# 
   428     010F                     	;# 
   429     018C                     	;# 
   430     018D                     	;# 
   431     0000                     	;# 
   432     0001                     	;# 
   433     0002                     	;# 
   434     0003                     	;# 
   435     0004                     	;# 
   436     0005                     	;# 
   437     0006                     	;# 
   438     0007                     	;# 
   439     0008                     	;# 
   440     0009                     	;# 
   441     000A                     	;# 
   442     000B                     	;# 
   443     000C                     	;# 
   444     000D                     	;# 
   445     000E                     	;# 
   446     000E                     	;# 
   447     000F                     	;# 
   448     0010                     	;# 
   449     0011                     	;# 
   450     0012                     	;# 
   451     0013                     	;# 
   452     0014                     	;# 
   453     0015                     	;# 
   454     0015                     	;# 
   455     0016                     	;# 
   456     0017                     	;# 
   457     0018                     	;# 
   458     0019                     	;# 
   459     001A                     	;# 
   460     001B                     	;# 
   461     001B                     	;# 
   462     001C                     	;# 
   463     001D                     	;# 
   464     001E                     	;# 
   465     001F                     	;# 
   466     0081                     	;# 
   467     0085                     	;# 
   468     0086                     	;# 
   469     0087                     	;# 
   470     0088                     	;# 
   471     0089                     	;# 
   472     008C                     	;# 
   473     008D                     	;# 
   474     008E                     	;# 
   475     0091                     	;# 
   476     0092                     	;# 
   477     0093                     	;# 
   478     0094                     	;# 
   479     0098                     	;# 
   480     0099                     	;# 
   481     009C                     	;# 
   482     009D                     	;# 
   483     009E                     	;# 
   484     009F                     	;# 
   485     010C                     	;# 
   486     010D                     	;# 
   487     010E                     	;# 
   488     010F                     	;# 
   489     018C                     	;# 
   490     018D                     	;# 
   491                           
   492                           	psect	strings
   493     0600                     __pstrings:
   494     0600                     stringtab:
   495     0600                     __stringtab:
   496                           
   497                           ;	String table - string pointers are 1 byte each
   498     0600  1BFF               	btfsc	btemp+1,7
   499     0601  2E0A               	ljmp	stringcode
   500     0602  1383               	bcf	3,7
   501     0603  187F               	btfsc	btemp+1,0
   502     0604  1783               	bsf	3,7
   503     0605  0800               	movf	0,w
   504     0606  0A84               	incf	4,f
   505     0607  1903               	skipnz
   506     0608  0AFF               	incf	btemp+1,f
   507     0609  0008               	return
   508     060A                     stringcode:
   509     060A                     stringdir:
   510     060A  3006               	movlw	high stringdir
   511     060B  008A               	movwf	10
   512     060C  0804               	movf	4,w
   513     060D  0A84               	incf	4,f
   514     060E  0782               	addwf	2,f
   515     060F                     __stringbase:
   516     060F  3400               	retlw	0
   517     0610                     __end_of__stringtab:
   518     0610                     _keypad:
   519     0610  342A               	retlw	42
   520     0611  3407               	retlw	7
   521     0612  3404               	retlw	4
   522     0613  3401               	retlw	1
   523     0614  3400               	retlw	0
   524     0615  3408               	retlw	8
   525     0616  3405               	retlw	5
   526     0617  3402               	retlw	2
   527     0618  3423               	retlw	35
   528     0619  3409               	retlw	9
   529     061A  3406               	retlw	6
   530     061B  3403               	retlw	3
   531     061C                     __end_of_keypad:
   532     061C                     SevenSeg_Write@displayPattern:
   533     061C  34EE               	retlw	238
   534     061D  3428               	retlw	40
   535     061E  34CD               	retlw	205
   536     061F  346D               	retlw	109
   537     0620  342B               	retlw	43
   538     0621  3467               	retlw	103
   539     0622  34E7               	retlw	231
   540     0623  342C               	retlw	44
   541     0624  34EF               	retlw	239
   542     0625  346F               	retlw	111
   543     0626                     __end_ofSevenSeg_Write@displayPattern:
   544     0001                     _TMR0	set	1
   545     001A                     _RCREG	set	26
   546     0019                     _TXREG	set	25
   547     000C                     _PIR1	set	12
   548     000B                     _INTCON	set	11
   549     0018                     _RCSTA	set	24
   550     0008                     _PORTD	set	8
   551     0009                     _PORTEbits	set	9
   552     0008                     _PORTDbits	set	8
   553     001E                     _ADRESH	set	30
   554     001F                     _ADCON0	set	31
   555     0006                     _PORTB	set	6
   556     005A                     _T0IF	set	90
   557     0065                     _RCIF	set	101
   558     0081                     _OPTION_REG	set	129
   559     0087                     _TRISC	set	135
   560     008C                     _PIE1	set	140
   561     0099                     _SPBRG	set	153
   562     0098                     _TXSTA	set	152
   563     0086                     _TRISB	set	134
   564     0089                     _TRISE	set	137
   565     0088                     _TRISD	set	136
   566     009E                     _ADRESL	set	158
   567     0085                     _TRISA	set	133
   568     009F                     _ADCON1	set	159
   569     0626                     STR_1:
   570     0626  3420               	retlw	32	;' '
   571     0627  3420               	retlw	32	;' '
   572     0628  3420               	retlw	32	;' '
   573     0629  3420               	retlw	32	;' '
   574     062A  3420               	retlw	32	;' '
   575     062B  3420               	retlw	32	;' '
   576     062C  3420               	retlw	32	;' '
   577     062D  3420               	retlw	32	;' '
   578     062E  3420               	retlw	32	;' '
   579     062F  3420               	retlw	32	;' '
   580     0630  3420               	retlw	32	;' '
   581     0631  3420               	retlw	32	;' '
   582     0632  3420               	retlw	32	;' '
   583     0633  3420               	retlw	32	;' '
   584     0634  3420               	retlw	32	;' '
   585     0635  3420               	retlw	32	;' '
   586     0636  3400               	retlw	0
   587                           
   588                           	psect	cinit
   589     0011                     start_initialization:	
   590                           ; #config settings
   591                           
   592     0011                     __initialization:
   593                           
   594                           ; Clear objects allocated to COMMON
   595     0011  01F7               	clrf	__pbssCOMMON& (0+127)
   596     0012  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   597     0013  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   598                           
   599                           ; Clear objects allocated to BANK0
   600     0014  1383               	bcf	3,7	;select IRP bank0
   601     0015  3068               	movlw	low __pbssBANK0
   602     0016  0084               	movwf	4
   603     0017  3070               	movlw	low (__pbssBANK0+8)
   604     0018  120A  118A  26E7  120A  118A  	fcall	clear_ram0
   605                           
   606                           ; Clear objects allocated to BANK1
   607     001D  30A0               	movlw	low __pbssBANK1
   608     001E  0084               	movwf	4
   609     001F  30B6               	movlw	low (__pbssBANK1+22)
   610     0020  120A  118A  26E7  120A  118A  	fcall	clear_ram0
   611     0025                     end_of_initialization:	
   612                           ;End of C runtime variable initialization code
   613                           
   614     0025                     __end_of__initialization:
   615     0025  0183               	clrf	3
   616     0026  120A  118A  2AE9   	ljmp	_main	;jump to C main() function
   617                           
   618                           	psect	bssCOMMON
   619     0077                     __pbssCOMMON:
   620     0077                     _Counter:
   621     0077                     	ds	2
   622     0079                     Numpad_Read@oldKeyVal:
   623     0079                     	ds	1
   624                           
   625                           	psect	bssBANK0
   626     0068                     __pbssBANK0:
   627     0068                     pid_controller@integral:
   628     0068                     	ds	4
   629     006C                     _i:
   630     006C                     	ds	1
   631     006D                     _receivedBytes:
   632     006D                     	ds	1
   633     006E                     _counterFinished:
   634     006E                     	ds	1
   635     006F                     _received:
   636     006F                     	ds	1
   637                           
   638                           	psect	bssBANK1
   639     00A0                     __pbssBANK1:
   640     00A0                     _dato:
   641     00A0                     	ds	16
   642     00B0                     pid_controller@previous_error:
   643     00B0                     	ds	4
   644     00B4                     ISR@interruptCounter:
   645     00B4                     	ds	2
   646                           
   647                           	psect	clrtext
   648     06E7                     clear_ram0:	
   649                           ;	Called with FSR containing the base address, and
   650                           ;	W with the last address+1
   651                           
   652     06E7  0064               	clrwdt	;clear the watchdog before getting into this loop
   653     06E8                     clrloop0:
   654     06E8  0180               	clrf	0	;clear RAM location pointed to by FSR
   655     06E9  0A84               	incf	4,f	;increment pointer
   656     06EA  0604               	xorwf	4,w	;XOR with final address
   657     06EB  1903               	btfsc	3,2	;have we reached the end yet?
   658     06EC  3400               	retlw	0	;all done for this memory range, return
   659     06ED  0604               	xorwf	4,w	;XOR again to restore value
   660     06EE  2EE8               	goto	clrloop0	;do the next byte
   661                           
   662                           	psect	cstackBANK3
   663     0190                     __pcstackBANK3:
   664     0190                     Lcd_Write_Int@buffer:
   665                           
   666                           ; 50 bytes @ 0x0
   667     0190                     	ds	50
   668     01C2                     Lcd_Write_Int@isNeg:
   669                           
   670                           ; 1 bytes @ 0x32
   671     01C2                     	ds	1
   672     01C3                     Lcd_Write_Int@n1:
   673                           
   674                           ; 2 bytes @ 0x33
   675     01C3                     	ds	2
   676     01C5                     Lcd_Write_Int@n:
   677                           
   678                           ; 2 bytes @ 0x35
   679     01C5                     	ds	2
   680     01C7                     Lcd_Write_Int@t:
   681                           
   682                           ; 2 bytes @ 0x37
   683     01C7                     	ds	2
   684     01C9                     Lcd_Write_Int@i:
   685                           
   686                           ; 2 bytes @ 0x39
   687     01C9                     	ds	2
   688                           
   689                           	psect	cstackBANK1
   690     00B6                     __pcstackBANK1:
   691     00B6                     ??_main:
   692                           
   693                           ; 1 bytes @ 0x0
   694     00B6                     	ds	1
   695                           
   696                           	psect	cstackCOMMON
   697     0070                     __pcstackCOMMON:
   698     0070                     ?_Lcd_Port:
   699     0070                     ?_Lcd_Cmd:	
   700                           ; 1 bytes @ 0x0
   701                           
   702     0070                     ?_Lcd_Init:	
   703                           ; 1 bytes @ 0x0
   704                           
   705     0070                     ?_Lcd_Write_Char:	
   706                           ; 1 bytes @ 0x0
   707                           
   708     0070                     ?_UART_TxChar:	
   709                           ; 1 bytes @ 0x0
   710                           
   711     0070                     ?_UART_TxString:	
   712                           ; 1 bytes @ 0x0
   713                           
   714     0070                     ?_main:	
   715                           ; 1 bytes @ 0x0
   716                           
   717     0070                     ?_ISR:	
   718                           ; 1 bytes @ 0x0
   719                           
   720     0070                     ??_ISR:	
   721                           ; 1 bytes @ 0x0
   722                           
   723                           
   724                           ; 1 bytes @ 0x0
   725     0070                     	ds	4
   726     0074                     ??_Lcd_Port:
   727     0074                     ??_UART_TxChar:	
   728                           ; 1 bytes @ 0x4
   729                           
   730     0074                     ??___aldiv:	
   731                           ; 1 bytes @ 0x4
   732                           
   733     0074                     ??___awdiv:	
   734                           ; 1 bytes @ 0x4
   735                           
   736     0074                     ??___lwdiv:	
   737                           ; 1 bytes @ 0x4
   738                           
   739     0074                     ??___lwmod:	
   740                           ; 1 bytes @ 0x4
   741                           
   742     0074                     Lcd_Port@a:	
   743                           ; 1 bytes @ 0x4
   744                           
   745                           
   746                           ; 1 bytes @ 0x4
   747     0074                     	ds	1
   748     0075                     ??_Lcd_Cmd:
   749     0075                     ??_Lcd_Write_Char:	
   750                           ; 1 bytes @ 0x5
   751                           
   752     0075                     UART_TxChar@ch:	
   753                           ; 1 bytes @ 0x5
   754                           
   755     0075                     ___lwmod@counter:	
   756                           ; 1 bytes @ 0x5
   757                           
   758                           
   759                           ; 1 bytes @ 0x5
   760     0075                     	ds	1
   761     0076                     ??_UART_TxString:
   762                           
   763                           ; 1 bytes @ 0x6
   764     0076                     	ds	1
   765                           
   766                           	psect	cstackBANK0
   767     0020                     __pcstackBANK0:
   768     0020                     ?___awdiv:
   769     0020                     ?___lwdiv:	
   770                           ; 2 bytes @ 0x0
   771                           
   772     0020                     ?___lwmod:	
   773                           ; 2 bytes @ 0x0
   774                           
   775     0020                     ?___aldiv:	
   776                           ; 2 bytes @ 0x0
   777                           
   778     0020                     Lcd_Cmd@a:	
   779                           ; 4 bytes @ 0x0
   780                           
   781     0020                     Lcd_Write_Char@temp:	
   782                           ; 1 bytes @ 0x0
   783                           
   784     0020                     UART_TxString@str:	
   785                           ; 1 bytes @ 0x0
   786                           
   787     0020                     ___awdiv@divisor:	
   788                           ; 1 bytes @ 0x0
   789                           
   790     0020                     ___lwdiv@divisor:	
   791                           ; 2 bytes @ 0x0
   792                           
   793     0020                     ___lwmod@divisor:	
   794                           ; 2 bytes @ 0x0
   795                           
   796     0020                     ___aldiv@divisor:	
   797                           ; 2 bytes @ 0x0
   798                           
   799                           
   800                           ; 4 bytes @ 0x0
   801     0020                     	ds	1
   802     0021                     ??_Lcd_Init:
   803     0021                     ?_Lcd_Set_Cursor:	
   804                           ; 1 bytes @ 0x1
   805                           
   806     0021                     Lcd_Set_Cursor@colonna:	
   807                           ; 1 bytes @ 0x1
   808                           
   809     0021                     Lcd_Write_Char@y:	
   810                           ; 1 bytes @ 0x1
   811                           
   812     0021                     UART_TxString@i:	
   813                           ; 1 bytes @ 0x1
   814                           
   815                           
   816                           ; 1 bytes @ 0x1
   817     0021                     	ds	1
   818     0022                     ??_Lcd_Set_Cursor:
   819     0022                     Lcd_Write_Char@a:	
   820                           ; 1 bytes @ 0x2
   821                           
   822     0022                     ___awdiv@dividend:	
   823                           ; 1 bytes @ 0x2
   824                           
   825     0022                     ___lwdiv@dividend:	
   826                           ; 2 bytes @ 0x2
   827                           
   828     0022                     ___lwmod@dividend:	
   829                           ; 2 bytes @ 0x2
   830                           
   831                           
   832                           ; 2 bytes @ 0x2
   833     0022                     	ds	1
   834     0023                     ?_Lcd_Write_String:
   835     0023                     Lcd_Set_Cursor@riga:	
   836                           ; 1 bytes @ 0x3
   837                           
   838     0023                     Lcd_Write_String@a:	
   839                           ; 1 bytes @ 0x3
   840                           
   841                           
   842                           ; 2 bytes @ 0x3
   843     0023                     	ds	1
   844     0024                     Lcd_Set_Cursor@z:
   845     0024                     ___awdiv@counter:	
   846                           ; 1 bytes @ 0x4
   847                           
   848     0024                     ___lwdiv@counter:	
   849                           ; 1 bytes @ 0x4
   850                           
   851     0024                     ___aldiv@dividend:	
   852                           ; 1 bytes @ 0x4
   853                           
   854                           
   855                           ; 4 bytes @ 0x4
   856     0024                     	ds	1
   857     0025                     ??_Lcd_Write_String:
   858     0025                     Lcd_Set_Cursor@y:	
   859                           ; 1 bytes @ 0x5
   860                           
   861     0025                     ___awdiv@sign:	
   862                           ; 1 bytes @ 0x5
   863                           
   864     0025                     ___lwdiv@quotient:	
   865                           ; 1 bytes @ 0x5
   866                           
   867                           
   868                           ; 2 bytes @ 0x5
   869     0025                     	ds	1
   870     0026                     Lcd_Set_Cursor@temp:
   871     0026                     ___awdiv@quotient:	
   872                           ; 1 bytes @ 0x6
   873                           
   874                           
   875                           ; 2 bytes @ 0x6
   876     0026                     	ds	2
   877     0028                     ?_UART_TxInt:
   878     0028                     ___aldiv@counter:	
   879                           ; 1 bytes @ 0x8
   880                           
   881     0028                     Lcd_Write_String@i:	
   882                           ; 1 bytes @ 0x8
   883                           
   884     0028                     UART_TxInt@val:	
   885                           ; 2 bytes @ 0x8
   886                           
   887                           
   888                           ; 2 bytes @ 0x8
   889     0028                     	ds	1
   890     0029                     ___aldiv@sign:
   891                           
   892                           ; 1 bytes @ 0x9
   893     0029                     	ds	1
   894     002A                     ??_UART_TxInt:
   895     002A                     ?_Lcd_Write_Int:	
   896                           ; 1 bytes @ 0xA
   897                           
   898     002A                     Lcd_Write_Int@val:	
   899                           ; 2 bytes @ 0xA
   900                           
   901     002A                     ___aldiv@quotient:	
   902                           ; 2 bytes @ 0xA
   903                           
   904                           
   905                           ; 4 bytes @ 0xA
   906     002A                     	ds	2
   907     002C                     ??_Lcd_Write_Int:
   908                           
   909                           ; 1 bytes @ 0xC
   910     002C                     	ds	1
   911     002D                     UART_TxInt@buffer:
   912                           
   913                           ; 50 bytes @ 0xD
   914     002D                     	ds	1
   915     002E                     ?_UART_init:
   916     002E                     UART_init@baudrate:	
   917                           ; 1 bytes @ 0xE
   918                           
   919                           
   920                           ; 4 bytes @ 0xE
   921     002E                     	ds	4
   922     0032                     ??_UART_init:
   923                           
   924                           ; 1 bytes @ 0x12
   925     0032                     	ds	45
   926     005F                     UART_TxInt@isNeg:
   927                           
   928                           ; 1 bytes @ 0x3F
   929     005F                     	ds	1
   930     0060                     UART_TxInt@n1:
   931                           
   932                           ; 2 bytes @ 0x40
   933     0060                     	ds	2
   934     0062                     UART_TxInt@n:
   935                           
   936                           ; 2 bytes @ 0x42
   937     0062                     	ds	2
   938     0064                     UART_TxInt@t:
   939                           
   940                           ; 2 bytes @ 0x44
   941     0064                     	ds	2
   942     0066                     UART_TxInt@i:
   943                           
   944                           ; 2 bytes @ 0x46
   945     0066                     	ds	2
   946                           
   947                           	psect	maintext
   948     02E9                     __pmaintext:	
   949 ;;
   950 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   951 ;;
   952 ;; *************** function _main *****************
   953 ;; Defined at:
   954 ;;		line 27 in file "main.c"
   955 ;; Parameters:    Size  Location     Type
   956 ;;		None
   957 ;; Auto vars:     Size  Location     Type
   958 ;;		None
   959 ;; Return value:  Size  Location     Type
   960 ;;                  1    wreg      void 
   961 ;; Registers used:
   962 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   963 ;; Tracked objects:
   964 ;;		On entry : B00/0
   965 ;;		On exit  : 0/0
   966 ;;		Unchanged: 0/0
   967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   968 ;;      Params:         0       0       0       0       0
   969 ;;      Locals:         0       0       0       0       0
   970 ;;      Temps:          0       0       1       0       0
   971 ;;      Totals:         0       0       1       0       0
   972 ;;Total ram usage:        1 bytes
   973 ;; Hardware stack levels required when called: 5
   974 ;; This function calls:
   975 ;;		_Lcd_Init
   976 ;;		_Lcd_Set_Cursor
   977 ;;		_Lcd_Write_Char
   978 ;;		_Lcd_Write_Int
   979 ;;		_Lcd_Write_String
   980 ;;		_UART_TxInt
   981 ;;		_UART_init
   982 ;; This function is called by:
   983 ;;		Startup code after reset
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987     02E9                     _main:	
   988                           ;psect for function _main
   989                           
   990     02E9                     l2462:	
   991                           ;incstack = 0
   992                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   993                           
   994                           
   995                           ;main.c: 28:     INTCON |= 0xA0;
   996     02E9  30A0               	movlw	160
   997     02EA  1683               	bsf	3,5	;RP0=1, select bank1
   998     02EB  1303               	bcf	3,6	;RP1=0, select bank1
   999     02EC  00B6               	movwf	??_main^(0+128)
  1000     02ED  0836               	movf	??_main^(0+128),w
  1001     02EE  048B               	iorwf	11,f	;volatile
  1002                           
  1003                           ;main.c: 29:     OPTION_REG |= 0x85;
  1004     02EF  3085               	movlw	133
  1005     02F0  00B6               	movwf	??_main^(0+128)
  1006     02F1  0836               	movf	??_main^(0+128),w
  1007     02F2  0481               	iorwf	1,f	;volatile
  1008     02F3                     l2464:
  1009                           
  1010                           ;main.c: 30:     UART_init(115200);
  1011     02F3  3000               	movlw	0
  1012     02F4  1283               	bcf	3,5	;RP0=0, select bank0
  1013     02F5  1303               	bcf	3,6	;RP1=0, select bank0
  1014     02F6  00B1               	movwf	UART_init@baudrate+3
  1015     02F7  3001               	movlw	1
  1016     02F8  00B0               	movwf	UART_init@baudrate+2
  1017     02F9  30C2               	movlw	194
  1018     02FA  00AF               	movwf	UART_init@baudrate+1
  1019     02FB  3000               	movlw	0
  1020     02FC  00AE               	movwf	UART_init@baudrate
  1021     02FD  120A  118A  256B  120A  118A  	fcall	_UART_init
  1022     0302                     l2466:
  1023                           
  1024                           ;main.c: 31:     Lcd_Init();
  1025     0302  120A  118A  2378  120A  118A  	fcall	_Lcd_Init
  1026     0307                     l218:	
  1027                           ;main.c: 33:     while (1) {
  1028                           
  1029                           
  1030                           ;main.c: 34:         if (received) {
  1031     0307  1283               	bcf	3,5	;RP0=0, select bank0
  1032     0308  1303               	bcf	3,6	;RP1=0, select bank0
  1033     0309  086F               	movf	_received,w
  1034     030A  1903               	btfsc	3,2
  1035     030B  2B0D               	goto	u2971
  1036     030C  2B0E               	goto	u2970
  1037     030D                     u2971:
  1038     030D  2B4F               	goto	l2488
  1039     030E                     u2970:
  1040     030E                     l2468:
  1041                           
  1042                           ;main.c: 35:             Lcd_Set_Cursor(1, receivedBytes++);
  1043     030E  086D               	movf	_receivedBytes,w
  1044     030F  00A1               	movwf	Lcd_Set_Cursor@colonna
  1045     0310  3001               	movlw	1
  1046     0311  120A  118A  244F  120A  118A  	fcall	_Lcd_Set_Cursor
  1047     0316                     l2470:
  1048     0316  3001               	movlw	1
  1049     0317  1683               	bsf	3,5	;RP0=1, select bank1
  1050     0318  1303               	bcf	3,6	;RP1=0, select bank1
  1051     0319  00B6               	movwf	??_main^(0+128)
  1052     031A  0836               	movf	??_main^(0+128),w
  1053     031B  1283               	bcf	3,5	;RP0=0, select bank0
  1054     031C  1303               	bcf	3,6	;RP1=0, select bank0
  1055     031D  07ED               	addwf	_receivedBytes,f
  1056     031E                     l2472:
  1057                           
  1058                           ;main.c: 36:             if (receivedBytes > 16) {
  1059     031E  3011               	movlw	17
  1060     031F  026D               	subwf	_receivedBytes,w
  1061     0320  1C03               	skipc
  1062     0321  2B23               	goto	u2981
  1063     0322  2B24               	goto	u2980
  1064     0323                     u2981:
  1065     0323  2B43               	goto	l2482
  1066     0324                     u2980:
  1067     0324                     l2474:
  1068                           
  1069                           ;main.c: 37:                 Lcd_Set_Cursor(1, 0);
  1070     0324  01A1               	clrf	Lcd_Set_Cursor@colonna
  1071     0325  3001               	movlw	1
  1072     0326  120A  118A  244F  120A  118A  	fcall	_Lcd_Set_Cursor
  1073     032B                     l2476:
  1074                           
  1075                           ;main.c: 38:                 Lcd_Write_String("                ");
  1076     032B  3017               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1077     032C  1283               	bcf	3,5	;RP0=0, select bank0
  1078     032D  1303               	bcf	3,6	;RP1=0, select bank0
  1079     032E  00A3               	movwf	Lcd_Write_String@a
  1080     032F  3080               	movlw	128
  1081     0330  00A4               	movwf	Lcd_Write_String@a+1
  1082     0331  120A  118A  24E0  120A  118A  	fcall	_Lcd_Write_String
  1083     0336                     l2478:
  1084                           
  1085                           ;main.c: 39:                 Lcd_Set_Cursor(1, 0);
  1086     0336  1283               	bcf	3,5	;RP0=0, select bank0
  1087     0337  1303               	bcf	3,6	;RP1=0, select bank0
  1088     0338  01A1               	clrf	Lcd_Set_Cursor@colonna
  1089     0339  3001               	movlw	1
  1090     033A  120A  118A  244F  120A  118A  	fcall	_Lcd_Set_Cursor
  1091     033F                     l2480:
  1092                           
  1093                           ;main.c: 40:                 receivedBytes = 1;
  1094     033F  1283               	bcf	3,5	;RP0=0, select bank0
  1095     0340  1303               	bcf	3,6	;RP1=0, select bank0
  1096     0341  01ED               	clrf	_receivedBytes
  1097     0342  0AED               	incf	_receivedBytes,f
  1098     0343                     l2482:
  1099                           
  1100                           ;main.c: 42:             Lcd_Write_Char(dato[0]);
  1101     0343  1683               	bsf	3,5	;RP0=1, select bank1
  1102     0344  1303               	bcf	3,6	;RP1=0, select bank1
  1103     0345  0820               	movf	_dato^(0+128),w
  1104     0346  120A  118A  2637  120A  118A  	fcall	_Lcd_Write_Char
  1105     034B                     l2484:
  1106                           
  1107                           ;main.c: 43:             i = 0;
  1108     034B  1283               	bcf	3,5	;RP0=0, select bank0
  1109     034C  1303               	bcf	3,6	;RP1=0, select bank0
  1110     034D  01EC               	clrf	_i
  1111     034E                     l2486:
  1112                           
  1113                           ;main.c: 44:             received = 0;
  1114     034E  01EF               	clrf	_received
  1115     034F                     l2488:
  1116                           
  1117                           ;main.c: 46:         if (counterFinished) {
  1118     034F  086E               	movf	_counterFinished,w
  1119     0350  1903               	btfsc	3,2
  1120     0351  2B53               	goto	u2991
  1121     0352  2B54               	goto	u2990
  1122     0353                     u2991:
  1123     0353  2B07               	goto	l218
  1124     0354                     u2990:
  1125     0354                     l2490:
  1126                           
  1127                           ;main.c: 47:             Lcd_Set_Cursor(0, 0);
  1128     0354  01A1               	clrf	Lcd_Set_Cursor@colonna
  1129     0355  3000               	movlw	0
  1130     0356  120A  118A  244F  120A  118A  	fcall	_Lcd_Set_Cursor
  1131     035B                     l2492:
  1132                           
  1133                           ;main.c: 48:             Lcd_Write_Int(Counter);
  1134     035B  0878               	movf	_Counter+1,w
  1135     035C  1283               	bcf	3,5	;RP0=0, select bank0
  1136     035D  1303               	bcf	3,6	;RP1=0, select bank0
  1137     035E  00AB               	movwf	Lcd_Write_Int@val+1
  1138     035F  0877               	movf	_Counter,w
  1139     0360  00AA               	movwf	Lcd_Write_Int@val
  1140     0361  120A  118A  2029  120A  118A  	fcall	_Lcd_Write_Int
  1141     0366                     l2494:
  1142                           
  1143                           ;main.c: 49:             UART_TxInt(Counter);
  1144     0366  0878               	movf	_Counter+1,w
  1145     0367  1283               	bcf	3,5	;RP0=0, select bank0
  1146     0368  1303               	bcf	3,6	;RP1=0, select bank0
  1147     0369  00A9               	movwf	UART_TxInt@val+1
  1148     036A  0877               	movf	_Counter,w
  1149     036B  00A8               	movwf	UART_TxInt@val
  1150     036C  120A  118A  216E  120A  118A  	fcall	_UART_TxInt
  1151     0371                     l2496:
  1152                           
  1153                           ;main.c: 50:             counterFinished = 0;
  1154     0371  1283               	bcf	3,5	;RP0=0, select bank0
  1155     0372  1303               	bcf	3,6	;RP1=0, select bank0
  1156     0373  01EE               	clrf	_counterFinished
  1157     0374  2B07               	goto	l218
  1158     0375  120A  118A  280E   	ljmp	start
  1159     0378                     __end_of_main:
  1160                           
  1161                           	psect	text1
  1162     056B                     __ptext1:	
  1163 ;; *************** function _UART_init *****************
  1164 ;; Defined at:
  1165 ;;		line 4 in file "../00-Librerie.X/UART.c"
  1166 ;; Parameters:    Size  Location     Type
  1167 ;;  baudrate        4   14[BANK0 ] long 
  1168 ;; Auto vars:     Size  Location     Type
  1169 ;;		None
  1170 ;; Return value:  Size  Location     Type
  1171 ;;                  1    wreg      void 
  1172 ;; Registers used:
  1173 ;;		wreg, status,2, status,0, pclath, cstack
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1179 ;;      Params:         0       4       0       0       0
  1180 ;;      Locals:         0       0       0       0       0
  1181 ;;      Temps:          0       4       0       0       0
  1182 ;;      Totals:         0       8       0       0       0
  1183 ;;Total ram usage:        8 bytes
  1184 ;; Hardware stack levels used: 1
  1185 ;; Hardware stack levels required when called: 2
  1186 ;; This function calls:
  1187 ;;		___aldiv
  1188 ;; This function is called by:
  1189 ;;		_main
  1190 ;; This function uses a non-reentrant model
  1191 ;;
  1192                           
  1193     056B                     _UART_init:	
  1194                           ;psect for function _UART_init
  1195                           
  1196     056B                     l2400:	
  1197                           ;incstack = 0
  1198                           ; Regs used in _UART_init: [wreg+status,2+status,0+pclath+cstack]
  1199                           
  1200                           
  1201                           ;../00-Librerie.X/UART.c: 6:     TXSTA |= 0x24;
  1202     056B  3024               	movlw	36
  1203     056C  1283               	bcf	3,5	;RP0=0, select bank0
  1204     056D  1303               	bcf	3,6	;RP1=0, select bank0
  1205     056E  00B2               	movwf	??_UART_init
  1206     056F  0832               	movf	??_UART_init,w
  1207     0570  1683               	bsf	3,5	;RP0=1, select bank1
  1208     0571  1303               	bcf	3,6	;RP1=0, select bank1
  1209     0572  0498               	iorwf	24,f	;volatile
  1210     0573                     l2402:
  1211                           
  1212                           ;../00-Librerie.X/UART.c: 7:     RCSTA = 0x90;
  1213     0573  3090               	movlw	144
  1214     0574  1283               	bcf	3,5	;RP0=0, select bank0
  1215     0575  1303               	bcf	3,6	;RP1=0, select bank0
  1216     0576  0098               	movwf	24	;volatile
  1217     0577                     l2404:
  1218                           
  1219                           ;../00-Librerie.X/UART.c: 8:     SPBRG = (char) (20*1000000 / (long) (64UL * baudrate)) 
      +                          - 1;
  1220     0577  082E               	movf	UART_init@baudrate,w
  1221     0578  00B2               	movwf	??_UART_init
  1222     0579  082F               	movf	UART_init@baudrate+1,w
  1223     057A  00B3               	movwf	??_UART_init+1
  1224     057B  0830               	movf	UART_init@baudrate+2,w
  1225     057C  00B4               	movwf	??_UART_init+2
  1226     057D  0831               	movf	UART_init@baudrate+3,w
  1227     057E  00B5               	movwf	??_UART_init+3
  1228     057F  3006               	movlw	6
  1229     0580                     u2895:
  1230     0580  1003               	clrc
  1231     0581  0DB2               	rlf	??_UART_init,f
  1232     0582  0DB3               	rlf	??_UART_init+1,f
  1233     0583  0DB4               	rlf	??_UART_init+2,f
  1234     0584  0DB5               	rlf	??_UART_init+3,f
  1235     0585                     u2890:
  1236     0585  3EFF               	addlw	-1
  1237     0586  1D03               	skipz
  1238     0587  2D80               	goto	u2895
  1239     0588  0835               	movf	??_UART_init+3,w
  1240     0589  00A3               	movwf	___aldiv@divisor+3
  1241     058A  0834               	movf	??_UART_init+2,w
  1242     058B  00A2               	movwf	___aldiv@divisor+2
  1243     058C  0833               	movf	??_UART_init+1,w
  1244     058D  00A1               	movwf	___aldiv@divisor+1
  1245     058E  0832               	movf	??_UART_init,w
  1246     058F  00A0               	movwf	___aldiv@divisor
  1247     0590  3001               	movlw	1
  1248     0591  00A7               	movwf	___aldiv@dividend+3
  1249     0592  3031               	movlw	49
  1250     0593  00A6               	movwf	___aldiv@dividend+2
  1251     0594  302D               	movlw	45
  1252     0595  00A5               	movwf	___aldiv@dividend+1
  1253     0596  3000               	movlw	0
  1254     0597  00A4               	movwf	___aldiv@dividend
  1255     0598  120A  118A  224C  120A  118A  	fcall	___aldiv
  1256     059D  1283               	bcf	3,5	;RP0=0, select bank0
  1257     059E  1303               	bcf	3,6	;RP1=0, select bank0
  1258     059F  0820               	movf	?___aldiv,w
  1259     05A0  3EFF               	addlw	255
  1260     05A1  1683               	bsf	3,5	;RP0=1, select bank1
  1261     05A2  1303               	bcf	3,6	;RP1=0, select bank1
  1262     05A3  0099               	movwf	25	;volatile
  1263     05A4                     l2406:
  1264                           
  1265                           ;../00-Librerie.X/UART.c: 9:     INTCON |= 0x80;
  1266     05A4  178B               	bsf	11,7	;volatile
  1267     05A5                     l2408:
  1268                           
  1269                           ;../00-Librerie.X/UART.c: 10:     INTCON |= 0x40;
  1270     05A5  170B               	bsf	11,6	;volatile
  1271     05A6                     l2410:
  1272                           
  1273                           ;../00-Librerie.X/UART.c: 11:     PIE1 |= 0x20;
  1274     05A6  168C               	bsf	12,5	;volatile
  1275     05A7                     l148:
  1276     05A7  0008               	return
  1277     05A8                     __end_of_UART_init:
  1278                           
  1279                           	psect	text2
  1280     024C                     __ptext2:	
  1281 ;; *************** function ___aldiv *****************
  1282 ;; Defined at:
  1283 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\aldiv.c"
  1284 ;; Parameters:    Size  Location     Type
  1285 ;;  divisor         4    0[BANK0 ] long 
  1286 ;;  dividend        4    4[BANK0 ] long 
  1287 ;; Auto vars:     Size  Location     Type
  1288 ;;  quotient        4   10[BANK0 ] long 
  1289 ;;  sign            1    9[BANK0 ] unsigned char 
  1290 ;;  counter         1    8[BANK0 ] unsigned char 
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  4    0[BANK0 ] long 
  1293 ;; Registers used:
  1294 ;;		wreg, status,2, status,0
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1300 ;;      Params:         0       8       0       0       0
  1301 ;;      Locals:         0       6       0       0       0
  1302 ;;      Temps:          1       0       0       0       0
  1303 ;;      Totals:         1      14       0       0       0
  1304 ;;Total ram usage:       15 bytes
  1305 ;; Hardware stack levels used: 1
  1306 ;; Hardware stack levels required when called: 1
  1307 ;; This function calls:
  1308 ;;		Nothing
  1309 ;; This function is called by:
  1310 ;;		_UART_init
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314     024C                     ___aldiv:	
  1315                           ;psect for function ___aldiv
  1316                           
  1317     024C                     l1392:	
  1318                           ;incstack = 0
  1319                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1320                           
  1321     024C  1283               	bcf	3,5	;RP0=0, select bank0
  1322     024D  1303               	bcf	3,6	;RP1=0, select bank0
  1323     024E  01A9               	clrf	___aldiv@sign
  1324     024F                     l1394:
  1325     024F  1FA3               	btfss	___aldiv@divisor+3,7
  1326     0250  2A52               	goto	u921
  1327     0251  2A53               	goto	u920
  1328     0252                     u921:
  1329     0252  2A60               	goto	l385
  1330     0253                     u920:
  1331     0253                     l1396:
  1332     0253  09A0               	comf	___aldiv@divisor,f
  1333     0254  09A1               	comf	___aldiv@divisor+1,f
  1334     0255  09A2               	comf	___aldiv@divisor+2,f
  1335     0256  09A3               	comf	___aldiv@divisor+3,f
  1336     0257  0AA0               	incf	___aldiv@divisor,f
  1337     0258  1903               	skipnz
  1338     0259  0AA1               	incf	___aldiv@divisor+1,f
  1339     025A  1903               	skipnz
  1340     025B  0AA2               	incf	___aldiv@divisor+2,f
  1341     025C  1903               	skipnz
  1342     025D  0AA3               	incf	___aldiv@divisor+3,f
  1343     025E  01A9               	clrf	___aldiv@sign
  1344     025F  0AA9               	incf	___aldiv@sign,f
  1345     0260                     l385:
  1346     0260  1FA7               	btfss	___aldiv@dividend+3,7
  1347     0261  2A63               	goto	u931
  1348     0262  2A64               	goto	u930
  1349     0263                     u931:
  1350     0263  2A73               	goto	l1402
  1351     0264                     u930:
  1352     0264                     l1398:
  1353     0264  09A4               	comf	___aldiv@dividend,f
  1354     0265  09A5               	comf	___aldiv@dividend+1,f
  1355     0266  09A6               	comf	___aldiv@dividend+2,f
  1356     0267  09A7               	comf	___aldiv@dividend+3,f
  1357     0268  0AA4               	incf	___aldiv@dividend,f
  1358     0269  1903               	skipnz
  1359     026A  0AA5               	incf	___aldiv@dividend+1,f
  1360     026B  1903               	skipnz
  1361     026C  0AA6               	incf	___aldiv@dividend+2,f
  1362     026D  1903               	skipnz
  1363     026E  0AA7               	incf	___aldiv@dividend+3,f
  1364     026F                     l1400:
  1365     026F  3001               	movlw	1
  1366     0270  00F4               	movwf	??___aldiv
  1367     0271  0874               	movf	??___aldiv,w
  1368     0272  06A9               	xorwf	___aldiv@sign,f
  1369     0273                     l1402:
  1370     0273  3000               	movlw	0
  1371     0274  00AD               	movwf	___aldiv@quotient+3
  1372     0275  3000               	movlw	0
  1373     0276  00AC               	movwf	___aldiv@quotient+2
  1374     0277  3000               	movlw	0
  1375     0278  00AB               	movwf	___aldiv@quotient+1
  1376     0279  3000               	movlw	0
  1377     027A  00AA               	movwf	___aldiv@quotient
  1378     027B                     l1404:
  1379     027B  0823               	movf	___aldiv@divisor+3,w
  1380     027C  0422               	iorwf	___aldiv@divisor+2,w
  1381     027D  0421               	iorwf	___aldiv@divisor+1,w
  1382     027E  0420               	iorwf	___aldiv@divisor,w
  1383     027F  1903               	skipnz
  1384     0280  2A82               	goto	u941
  1385     0281  2A83               	goto	u940
  1386     0282                     u941:
  1387     0282  2AD0               	goto	l1424
  1388     0283                     u940:
  1389     0283                     l1406:
  1390     0283  01A8               	clrf	___aldiv@counter
  1391     0284  0AA8               	incf	___aldiv@counter,f
  1392     0285  2A93               	goto	l1410
  1393     0286                     l1408:
  1394     0286  3001               	movlw	1
  1395     0287  00F4               	movwf	??___aldiv
  1396     0288                     u955:
  1397     0288  1003               	clrc
  1398     0289  0DA0               	rlf	___aldiv@divisor,f
  1399     028A  0DA1               	rlf	___aldiv@divisor+1,f
  1400     028B  0DA2               	rlf	___aldiv@divisor+2,f
  1401     028C  0DA3               	rlf	___aldiv@divisor+3,f
  1402     028D  0BF4               	decfsz	??___aldiv,f
  1403     028E  2A88               	goto	u955
  1404     028F  3001               	movlw	1
  1405     0290  00F4               	movwf	??___aldiv
  1406     0291  0874               	movf	??___aldiv,w
  1407     0292  07A8               	addwf	___aldiv@counter,f
  1408     0293                     l1410:
  1409     0293  1FA3               	btfss	___aldiv@divisor+3,7
  1410     0294  2A96               	goto	u961
  1411     0295  2A97               	goto	u960
  1412     0296                     u961:
  1413     0296  2A86               	goto	l1408
  1414     0297                     u960:
  1415     0297                     l1412:
  1416     0297  3001               	movlw	1
  1417     0298  00F4               	movwf	??___aldiv
  1418     0299                     u975:
  1419     0299  1003               	clrc
  1420     029A  0DAA               	rlf	___aldiv@quotient,f
  1421     029B  0DAB               	rlf	___aldiv@quotient+1,f
  1422     029C  0DAC               	rlf	___aldiv@quotient+2,f
  1423     029D  0DAD               	rlf	___aldiv@quotient+3,f
  1424     029E  0BF4               	decfsz	??___aldiv,f
  1425     029F  2A99               	goto	u975
  1426     02A0                     l1414:
  1427     02A0  0823               	movf	___aldiv@divisor+3,w
  1428     02A1  0227               	subwf	___aldiv@dividend+3,w
  1429     02A2  1D03               	skipz
  1430     02A3  2AAE               	goto	u985
  1431     02A4  0822               	movf	___aldiv@divisor+2,w
  1432     02A5  0226               	subwf	___aldiv@dividend+2,w
  1433     02A6  1D03               	skipz
  1434     02A7  2AAE               	goto	u985
  1435     02A8  0821               	movf	___aldiv@divisor+1,w
  1436     02A9  0225               	subwf	___aldiv@dividend+1,w
  1437     02AA  1D03               	skipz
  1438     02AB  2AAE               	goto	u985
  1439     02AC  0820               	movf	___aldiv@divisor,w
  1440     02AD  0224               	subwf	___aldiv@dividend,w
  1441     02AE                     u985:
  1442     02AE  1C03               	skipc
  1443     02AF  2AB1               	goto	u981
  1444     02B0  2AB2               	goto	u980
  1445     02B1                     u981:
  1446     02B1  2AC1               	goto	l1420
  1447     02B2                     u980:
  1448     02B2                     l1416:
  1449     02B2  0820               	movf	___aldiv@divisor,w
  1450     02B3  02A4               	subwf	___aldiv@dividend,f
  1451     02B4  0821               	movf	___aldiv@divisor+1,w
  1452     02B5  1C03               	skipc
  1453     02B6  0F21               	incfsz	___aldiv@divisor+1,w
  1454     02B7  02A5               	subwf	___aldiv@dividend+1,f
  1455     02B8  0822               	movf	___aldiv@divisor+2,w
  1456     02B9  1C03               	skipc
  1457     02BA  0F22               	incfsz	___aldiv@divisor+2,w
  1458     02BB  02A6               	subwf	___aldiv@dividend+2,f
  1459     02BC  0823               	movf	___aldiv@divisor+3,w
  1460     02BD  1C03               	skipc
  1461     02BE  0F23               	incfsz	___aldiv@divisor+3,w
  1462     02BF  02A7               	subwf	___aldiv@dividend+3,f
  1463     02C0                     l1418:
  1464     02C0  142A               	bsf	___aldiv@quotient,0
  1465     02C1                     l1420:
  1466     02C1  3001               	movlw	1
  1467     02C2                     u995:
  1468     02C2  1003               	clrc
  1469     02C3  0CA3               	rrf	___aldiv@divisor+3,f
  1470     02C4  0CA2               	rrf	___aldiv@divisor+2,f
  1471     02C5  0CA1               	rrf	___aldiv@divisor+1,f
  1472     02C6  0CA0               	rrf	___aldiv@divisor,f
  1473     02C7  3EFF               	addlw	-1
  1474     02C8  1D03               	skipz
  1475     02C9  2AC2               	goto	u995
  1476     02CA                     l1422:
  1477     02CA  3001               	movlw	1
  1478     02CB  02A8               	subwf	___aldiv@counter,f
  1479     02CC  1D03               	btfss	3,2
  1480     02CD  2ACF               	goto	u1001
  1481     02CE  2AD0               	goto	u1000
  1482     02CF                     u1001:
  1483     02CF  2A97               	goto	l1412
  1484     02D0                     u1000:
  1485     02D0                     l1424:
  1486     02D0  0829               	movf	___aldiv@sign,w
  1487     02D1  1903               	btfsc	3,2
  1488     02D2  2AD4               	goto	u1011
  1489     02D3  2AD5               	goto	u1010
  1490     02D4                     u1011:
  1491     02D4  2AE0               	goto	l1428
  1492     02D5                     u1010:
  1493     02D5                     l1426:
  1494     02D5  09AA               	comf	___aldiv@quotient,f
  1495     02D6  09AB               	comf	___aldiv@quotient+1,f
  1496     02D7  09AC               	comf	___aldiv@quotient+2,f
  1497     02D8  09AD               	comf	___aldiv@quotient+3,f
  1498     02D9  0AAA               	incf	___aldiv@quotient,f
  1499     02DA  1903               	skipnz
  1500     02DB  0AAB               	incf	___aldiv@quotient+1,f
  1501     02DC  1903               	skipnz
  1502     02DD  0AAC               	incf	___aldiv@quotient+2,f
  1503     02DE  1903               	skipnz
  1504     02DF  0AAD               	incf	___aldiv@quotient+3,f
  1505     02E0                     l1428:
  1506     02E0  082D               	movf	___aldiv@quotient+3,w
  1507     02E1  00A3               	movwf	?___aldiv+3
  1508     02E2  082C               	movf	___aldiv@quotient+2,w
  1509     02E3  00A2               	movwf	?___aldiv+2
  1510     02E4  082B               	movf	___aldiv@quotient+1,w
  1511     02E5  00A1               	movwf	?___aldiv+1
  1512     02E6  082A               	movf	___aldiv@quotient,w
  1513     02E7  00A0               	movwf	?___aldiv
  1514     02E8                     l395:
  1515     02E8  0008               	return
  1516     02E9                     __end_of___aldiv:
  1517                           
  1518                           	psect	text3
  1519     016E                     __ptext3:	
  1520 ;; *************** function _UART_TxInt *****************
  1521 ;; Defined at:
  1522 ;;		line 31 in file "../00-Librerie.X/UART.c"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;  val             2    8[BANK0 ] int 
  1525 ;; Auto vars:     Size  Location     Type
  1526 ;;  t               2   68[BANK0 ] int 
  1527 ;;  buffer         50   13[BANK0 ] unsigned char [50]
  1528 ;;  i               2   70[BANK0 ] int 
  1529 ;;  n               2   66[BANK0 ] int 
  1530 ;;  n1              2   64[BANK0 ] unsigned int 
  1531 ;;  isNeg           1   63[BANK0 ] unsigned char 
  1532 ;; Return value:  Size  Location     Type
  1533 ;;                  1    wreg      void 
  1534 ;; Registers used:
  1535 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1536 ;; Tracked objects:
  1537 ;;		On entry : 0/0
  1538 ;;		On exit  : 0/0
  1539 ;;		Unchanged: 0/0
  1540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1541 ;;      Params:         0       2       0       0       0
  1542 ;;      Locals:         0      59       0       0       0
  1543 ;;      Temps:          0       3       0       0       0
  1544 ;;      Totals:         0      64       0       0       0
  1545 ;;Total ram usage:       64 bytes
  1546 ;; Hardware stack levels used: 1
  1547 ;; Hardware stack levels required when called: 3
  1548 ;; This function calls:
  1549 ;;		_UART_TxString
  1550 ;;		___awdiv
  1551 ;;		___lwdiv
  1552 ;;		___lwmod
  1553 ;; This function is called by:
  1554 ;;		_main
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558     016E                     _UART_TxInt:	
  1559                           ;psect for function _UART_TxInt
  1560                           
  1561     016E                     l2412:	
  1562                           ;incstack = 0
  1563                           ; Regs used in _UART_TxInt: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1564                           
  1565                           
  1566                           ;../00-Librerie.X/UART.c: 32:     int n = val;
  1567     016E  1283               	bcf	3,5	;RP0=0, select bank0
  1568     016F  1303               	bcf	3,6	;RP1=0, select bank0
  1569     0170  0829               	movf	UART_TxInt@val+1,w
  1570     0171  00E3               	movwf	UART_TxInt@n+1
  1571     0172  0828               	movf	UART_TxInt@val,w
  1572     0173  00E2               	movwf	UART_TxInt@n
  1573     0174                     l2414:
  1574                           
  1575                           ;../00-Librerie.X/UART.c: 33:     char buffer[50];;../00-Librerie.X/UART.c: 34:     int 
      +                          i = 0;
  1576     0174  01E6               	clrf	UART_TxInt@i
  1577     0175  01E7               	clrf	UART_TxInt@i+1
  1578     0176                     l2416:
  1579                           
  1580                           ;../00-Librerie.X/UART.c: 35:     char isNeg = n < 0;
  1581     0176  1BE3               	btfsc	UART_TxInt@n+1,7
  1582     0177  2979               	goto	u2901
  1583     0178  297B               	goto	u2900
  1584     0179                     u2901:
  1585     0179  3001               	movlw	1
  1586     017A  297C               	goto	u2910
  1587     017B                     u2900:
  1588     017B  3000               	movlw	0
  1589     017C                     u2910:
  1590     017C  00DF               	movwf	UART_TxInt@isNeg
  1591     017D                     l2418:
  1592                           
  1593                           ;../00-Librerie.X/UART.c: 37:     unsigned int n1 = isNeg ? -n : n;
  1594     017D  085F               	movf	UART_TxInt@isNeg,w
  1595     017E  1D03               	btfss	3,2
  1596     017F  2981               	goto	u2921
  1597     0180  2982               	goto	u2920
  1598     0181                     u2921:
  1599     0181  2987               	goto	l2422
  1600     0182                     u2920:
  1601     0182                     l2420:
  1602     0182  0863               	movf	UART_TxInt@n+1,w
  1603     0183  00E1               	movwf	UART_TxInt@n1+1
  1604     0184  0862               	movf	UART_TxInt@n,w
  1605     0185  00E0               	movwf	UART_TxInt@n1
  1606     0186  29C2               	goto	l2430
  1607     0187                     l2422:
  1608     0187  0962               	comf	UART_TxInt@n,w
  1609     0188  00AA               	movwf	??_UART_TxInt
  1610     0189  0963               	comf	UART_TxInt@n+1,w
  1611     018A  00AB               	movwf	??_UART_TxInt+1
  1612     018B  0AAA               	incf	??_UART_TxInt,f
  1613     018C  1903               	skipnz
  1614     018D  0AAB               	incf	??_UART_TxInt+1,f
  1615     018E  082A               	movf	??_UART_TxInt,w
  1616     018F  00E0               	movwf	UART_TxInt@n1
  1617     0190  082B               	movf	??_UART_TxInt+1,w
  1618     0191  00E1               	movwf	UART_TxInt@n1+1
  1619     0192  29C2               	goto	l2430
  1620     0193                     l2424:
  1621                           
  1622                           ;../00-Librerie.X/UART.c: 40:         buffer[i++] = n1 % 10 + '0';
  1623     0193  0866               	movf	UART_TxInt@i,w
  1624     0194  3E2D               	addlw	(low (UART_TxInt@buffer| 0))& (0+255)
  1625     0195  0084               	movwf	4
  1626     0196  300A               	movlw	10
  1627     0197  00A0               	movwf	___lwmod@divisor
  1628     0198  3000               	movlw	0
  1629     0199  00A1               	movwf	___lwmod@divisor+1
  1630     019A  0861               	movf	UART_TxInt@n1+1,w
  1631     019B  00A3               	movwf	___lwmod@dividend+1
  1632     019C  0860               	movf	UART_TxInt@n1,w
  1633     019D  00A2               	movwf	___lwmod@dividend
  1634     019E  120A  118A  25A8  120A  118A  	fcall	___lwmod
  1635     01A3  1283               	bcf	3,5	;RP0=0, select bank0
  1636     01A4  1303               	bcf	3,6	;RP1=0, select bank0
  1637     01A5  0820               	movf	?___lwmod,w
  1638     01A6  3E30               	addlw	48
  1639     01A7  1383               	bcf	3,7	;select IRP bank0
  1640     01A8  0080               	movwf	0
  1641     01A9                     l2426:
  1642     01A9  3001               	movlw	1
  1643     01AA  07E6               	addwf	UART_TxInt@i,f
  1644     01AB  1803               	skipnc
  1645     01AC  0AE7               	incf	UART_TxInt@i+1,f
  1646     01AD  3000               	movlw	0
  1647     01AE  07E7               	addwf	UART_TxInt@i+1,f
  1648     01AF                     l2428:
  1649                           
  1650                           ;../00-Librerie.X/UART.c: 41:         n1 = n1 / 10;
  1651     01AF  300A               	movlw	10
  1652     01B0  00A0               	movwf	___lwdiv@divisor
  1653     01B1  3000               	movlw	0
  1654     01B2  00A1               	movwf	___lwdiv@divisor+1
  1655     01B3  0861               	movf	UART_TxInt@n1+1,w
  1656     01B4  00A3               	movwf	___lwdiv@dividend+1
  1657     01B5  0860               	movf	UART_TxInt@n1,w
  1658     01B6  00A2               	movwf	___lwdiv@dividend
  1659     01B7  120A  118A  249A  120A  118A  	fcall	___lwdiv
  1660     01BC  1283               	bcf	3,5	;RP0=0, select bank0
  1661     01BD  1303               	bcf	3,6	;RP1=0, select bank0
  1662     01BE  0821               	movf	?___lwdiv+1,w
  1663     01BF  00E1               	movwf	UART_TxInt@n1+1
  1664     01C0  0820               	movf	?___lwdiv,w
  1665     01C1  00E0               	movwf	UART_TxInt@n1
  1666     01C2                     l2430:
  1667                           
  1668                           ;../00-Librerie.X/UART.c: 39:     while (n1 != 0) {
  1669     01C2  0860               	movf	UART_TxInt@n1,w
  1670     01C3  0461               	iorwf	UART_TxInt@n1+1,w
  1671     01C4  1D03               	btfss	3,2
  1672     01C5  29C7               	goto	u2931
  1673     01C6  29C8               	goto	u2930
  1674     01C7                     u2931:
  1675     01C7  2993               	goto	l2424
  1676     01C8                     u2930:
  1677     01C8                     l2432:
  1678                           
  1679                           ;../00-Librerie.X/UART.c: 44:     if (isNeg)
  1680     01C8  085F               	movf	UART_TxInt@isNeg,w
  1681     01C9  1903               	btfsc	3,2
  1682     01CA  29CC               	goto	u2941
  1683     01CB  29CD               	goto	u2940
  1684     01CC                     u2941:
  1685     01CC  29D9               	goto	l2438
  1686     01CD                     u2940:
  1687     01CD                     l2434:
  1688                           
  1689                           ;../00-Librerie.X/UART.c: 45:         buffer[i++] = '-';
  1690     01CD  0866               	movf	UART_TxInt@i,w
  1691     01CE  3E2D               	addlw	(low (UART_TxInt@buffer| 0))& (0+255)
  1692     01CF  0084               	movwf	4
  1693     01D0  302D               	movlw	45
  1694     01D1  1383               	bcf	3,7	;select IRP bank0
  1695     01D2  0080               	movwf	0
  1696     01D3                     l2436:
  1697     01D3  3001               	movlw	1
  1698     01D4  07E6               	addwf	UART_TxInt@i,f
  1699     01D5  1803               	skipnc
  1700     01D6  0AE7               	incf	UART_TxInt@i+1,f
  1701     01D7  3000               	movlw	0
  1702     01D8  07E7               	addwf	UART_TxInt@i+1,f
  1703     01D9                     l2438:
  1704                           
  1705                           ;../00-Librerie.X/UART.c: 47:     buffer[i] = '\0';
  1706     01D9  0866               	movf	UART_TxInt@i,w
  1707     01DA  3E2D               	addlw	(low (UART_TxInt@buffer| 0))& (0+255)
  1708     01DB  0084               	movwf	4
  1709     01DC  1383               	bcf	3,7	;select IRP bank0
  1710     01DD  0180               	clrf	0
  1711     01DE                     l2440:
  1712                           
  1713                           ;../00-Librerie.X/UART.c: 49:     for (int t = 0; t < i / 2; t++) {
  1714     01DE  01E4               	clrf	UART_TxInt@t
  1715     01DF  01E5               	clrf	UART_TxInt@t+1
  1716     01E0  2A1D               	goto	l2446
  1717     01E1                     l2442:
  1718                           
  1719                           ;../00-Librerie.X/UART.c: 50:         buffer[t] ^= buffer[i - t - 1];
  1720     01E1  302D               	movlw	(low (UART_TxInt@buffer| 0))& (0+255)
  1721     01E2  1283               	bcf	3,5	;RP0=0, select bank0
  1722     01E3  1303               	bcf	3,6	;RP1=0, select bank0
  1723     01E4  00AA               	movwf	??_UART_TxInt
  1724     01E5  0864               	movf	UART_TxInt@t,w
  1725     01E6  02AA               	subwf	??_UART_TxInt,f
  1726     01E7  0866               	movf	UART_TxInt@i,w
  1727     01E8  072A               	addwf	??_UART_TxInt,w
  1728     01E9  00AB               	movwf	??_UART_TxInt+1
  1729     01EA  082B               	movf	??_UART_TxInt+1,w
  1730     01EB  3EFF               	addlw	255
  1731     01EC  0084               	movwf	4
  1732     01ED  1383               	bcf	3,7	;select IRP bank0
  1733     01EE  0800               	movf	0,w
  1734     01EF  00AC               	movwf	??_UART_TxInt+2
  1735     01F0  0864               	movf	UART_TxInt@t,w
  1736     01F1  3E2D               	addlw	(low (UART_TxInt@buffer| 0))& (0+255)
  1737     01F2  0084               	movwf	4
  1738     01F3  082C               	movf	??_UART_TxInt+2,w
  1739     01F4  0680               	xorwf	0,f
  1740                           
  1741                           ;../00-Librerie.X/UART.c: 51:         buffer[i - t - 1] ^= buffer[t];
  1742     01F5  0864               	movf	UART_TxInt@t,w
  1743     01F6  3E2D               	addlw	(low (UART_TxInt@buffer| 0))& (0+255)
  1744     01F7  0084               	movwf	4
  1745     01F8  0800               	movf	0,w
  1746     01F9  00AA               	movwf	??_UART_TxInt
  1747     01FA  302D               	movlw	(low (UART_TxInt@buffer| 0))& (0+255)
  1748     01FB  00AB               	movwf	??_UART_TxInt+1
  1749     01FC  0864               	movf	UART_TxInt@t,w
  1750     01FD  02AB               	subwf	??_UART_TxInt+1,f
  1751     01FE  0866               	movf	UART_TxInt@i,w
  1752     01FF  072B               	addwf	??_UART_TxInt+1,w
  1753     0200  00AC               	movwf	??_UART_TxInt+2
  1754     0201  082C               	movf	??_UART_TxInt+2,w
  1755     0202  3EFF               	addlw	255
  1756     0203  0084               	movwf	4
  1757     0204  082A               	movf	??_UART_TxInt,w
  1758     0205  0680               	xorwf	0,f
  1759                           
  1760                           ;../00-Librerie.X/UART.c: 52:         buffer[t] ^= buffer[i - t - 1];
  1761     0206  302D               	movlw	(low (UART_TxInt@buffer| 0))& (0+255)
  1762     0207  00AA               	movwf	??_UART_TxInt
  1763     0208  0864               	movf	UART_TxInt@t,w
  1764     0209  02AA               	subwf	??_UART_TxInt,f
  1765     020A  0866               	movf	UART_TxInt@i,w
  1766     020B  072A               	addwf	??_UART_TxInt,w
  1767     020C  00AB               	movwf	??_UART_TxInt+1
  1768     020D  082B               	movf	??_UART_TxInt+1,w
  1769     020E  3EFF               	addlw	255
  1770     020F  0084               	movwf	4
  1771     0210  0800               	movf	0,w
  1772     0211  00AC               	movwf	??_UART_TxInt+2
  1773     0212  0864               	movf	UART_TxInt@t,w
  1774     0213  3E2D               	addlw	(low (UART_TxInt@buffer| 0))& (0+255)
  1775     0214  0084               	movwf	4
  1776     0215  082C               	movf	??_UART_TxInt+2,w
  1777     0216  0680               	xorwf	0,f
  1778     0217                     l2444:
  1779                           
  1780                           ;../00-Librerie.X/UART.c: 53:     }
  1781     0217  3001               	movlw	1
  1782     0218  07E4               	addwf	UART_TxInt@t,f
  1783     0219  1803               	skipnc
  1784     021A  0AE5               	incf	UART_TxInt@t+1,f
  1785     021B  3000               	movlw	0
  1786     021C  07E5               	addwf	UART_TxInt@t+1,f
  1787     021D                     l2446:
  1788     021D  3002               	movlw	2
  1789     021E  00A0               	movwf	___awdiv@divisor
  1790     021F  3000               	movlw	0
  1791     0220  00A1               	movwf	___awdiv@divisor+1
  1792     0221  0867               	movf	UART_TxInt@i+1,w
  1793     0222  00A3               	movwf	___awdiv@dividend+1
  1794     0223  0866               	movf	UART_TxInt@i,w
  1795     0224  00A2               	movwf	___awdiv@dividend
  1796     0225  120A  118A  23E6  120A  118A  	fcall	___awdiv
  1797     022A  1283               	bcf	3,5	;RP0=0, select bank0
  1798     022B  1303               	bcf	3,6	;RP1=0, select bank0
  1799     022C  0865               	movf	UART_TxInt@t+1,w
  1800     022D  3A80               	xorlw	128
  1801     022E  00AA               	movwf	??_UART_TxInt
  1802     022F  0821               	movf	?___awdiv+1,w
  1803     0230  3A80               	xorlw	128
  1804     0231  022A               	subwf	??_UART_TxInt,w
  1805     0232  1D03               	skipz
  1806     0233  2A36               	goto	u2955
  1807     0234  0820               	movf	?___awdiv,w
  1808     0235  0264               	subwf	UART_TxInt@t,w
  1809     0236                     u2955:
  1810     0236  1C03               	skipc
  1811     0237  2A39               	goto	u2951
  1812     0238  2A3A               	goto	u2950
  1813     0239                     u2951:
  1814     0239  29E1               	goto	l2442
  1815     023A                     u2950:
  1816     023A                     l2448:
  1817                           
  1818                           ;../00-Librerie.X/UART.c: 55:     if (n == 0) {
  1819     023A  1283               	bcf	3,5	;RP0=0, select bank0
  1820     023B  1303               	bcf	3,6	;RP1=0, select bank0
  1821     023C  0862               	movf	UART_TxInt@n,w
  1822     023D  0463               	iorwf	UART_TxInt@n+1,w
  1823     023E  1D03               	btfss	3,2
  1824     023F  2A41               	goto	u2961
  1825     0240  2A42               	goto	u2960
  1826     0241                     u2961:
  1827     0241  2A45               	goto	l2454
  1828     0242                     u2960:
  1829     0242                     l2450:
  1830                           
  1831                           ;../00-Librerie.X/UART.c: 56:         buffer[0] = '0';
  1832     0242  3030               	movlw	48
  1833     0243  00AD               	movwf	UART_TxInt@buffer
  1834     0244                     l2452:
  1835                           
  1836                           ;../00-Librerie.X/UART.c: 57:         buffer[1] = '\0';
  1837     0244  01AE               	clrf	UART_TxInt@buffer+1
  1838     0245                     l2454:
  1839                           
  1840                           ;../00-Librerie.X/UART.c: 59:     UART_TxString(buffer);
  1841     0245  302D               	movlw	(low (UART_TxInt@buffer| 0))& (0+255)
  1842     0246  120A  118A  268F  120A  118A  	fcall	_UART_TxString
  1843     024B                     l175:
  1844     024B  0008               	return
  1845     024C                     __end_of_UART_TxInt:
  1846                           
  1847                           	psect	text4
  1848     068F                     __ptext4:	
  1849 ;; *************** function _UART_TxString *****************
  1850 ;; Defined at:
  1851 ;;		line 23 in file "../00-Librerie.X/UART.c"
  1852 ;; Parameters:    Size  Location     Type
  1853 ;;  str             1    wreg     PTR const unsigned char 
  1854 ;;		 -> UART_TxInt@buffer(50), 
  1855 ;; Auto vars:     Size  Location     Type
  1856 ;;  str             1    0[BANK0 ] PTR const unsigned char 
  1857 ;;		 -> UART_TxInt@buffer(50), 
  1858 ;;  i               1    1[BANK0 ] unsigned char 
  1859 ;; Return value:  Size  Location     Type
  1860 ;;                  1    wreg      void 
  1861 ;; Registers used:
  1862 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1863 ;; Tracked objects:
  1864 ;;		On entry : 0/0
  1865 ;;		On exit  : 0/0
  1866 ;;		Unchanged: 0/0
  1867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1868 ;;      Params:         0       0       0       0       0
  1869 ;;      Locals:         0       2       0       0       0
  1870 ;;      Temps:          1       0       0       0       0
  1871 ;;      Totals:         1       2       0       0       0
  1872 ;;Total ram usage:        3 bytes
  1873 ;; Hardware stack levels used: 1
  1874 ;; Hardware stack levels required when called: 2
  1875 ;; This function calls:
  1876 ;;		_UART_TxChar
  1877 ;; This function is called by:
  1878 ;;		_UART_TxInt
  1879 ;; This function uses a non-reentrant model
  1880 ;;
  1881                           
  1882     068F                     _UART_TxString:	
  1883                           ;psect for function _UART_TxString
  1884                           
  1885                           
  1886                           ;incstack = 0
  1887                           ; Regs used in _UART_TxString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1888                           ;UART_TxString@str stored from wreg
  1889     068F  1283               	bcf	3,5	;RP0=0, select bank0
  1890     0690  1303               	bcf	3,6	;RP1=0, select bank0
  1891     0691  00A0               	movwf	UART_TxString@str
  1892     0692                     l2204:
  1893                           
  1894                           ;../00-Librerie.X/UART.c: 24:     unsigned char i = 0;
  1895     0692  01A1               	clrf	UART_TxString@i
  1896                           
  1897                           ;../00-Librerie.X/UART.c: 25:     while (str[i] != 0) {
  1898     0693  2EA5               	goto	l2210
  1899     0694                     l2206:
  1900                           
  1901                           ;../00-Librerie.X/UART.c: 26:         UART_TxChar(str[i]);
  1902     0694  0821               	movf	UART_TxString@i,w
  1903     0695  0720               	addwf	UART_TxString@str,w
  1904     0696  00F6               	movwf	??_UART_TxString
  1905     0697  0876               	movf	??_UART_TxString,w
  1906     0698  0084               	movwf	4
  1907     0699  0800               	movf	0,w
  1908     069A  120A  118A  26D3  120A  118A  	fcall	_UART_TxChar
  1909     069F                     l2208:
  1910                           
  1911                           ;../00-Librerie.X/UART.c: 27:         i++;
  1912     069F  3001               	movlw	1
  1913     06A0  00F6               	movwf	??_UART_TxString
  1914     06A1  0876               	movf	??_UART_TxString,w
  1915     06A2  1283               	bcf	3,5	;RP0=0, select bank0
  1916     06A3  1303               	bcf	3,6	;RP1=0, select bank0
  1917     06A4  07A1               	addwf	UART_TxString@i,f
  1918     06A5                     l2210:
  1919                           
  1920                           ;../00-Librerie.X/UART.c: 25:     while (str[i] != 0) {
  1921     06A5  0821               	movf	UART_TxString@i,w
  1922     06A6  0720               	addwf	UART_TxString@str,w
  1923     06A7  00F6               	movwf	??_UART_TxString
  1924     06A8  0876               	movf	??_UART_TxString,w
  1925     06A9  0084               	movwf	4
  1926     06AA  1383               	bcf	3,7	;select IRP bank0
  1927     06AB  0800               	movf	0,w
  1928     06AC  1D03               	btfss	3,2
  1929     06AD  2EAF               	goto	u2541
  1930     06AE  2EB0               	goto	u2540
  1931     06AF                     u2541:
  1932     06AF  2E94               	goto	l2206
  1933     06B0                     u2540:
  1934     06B0                     l160:
  1935     06B0  0008               	return
  1936     06B1                     __end_of_UART_TxString:
  1937                           
  1938                           	psect	text5
  1939     06D3                     __ptext5:	
  1940 ;; *************** function _UART_TxChar *****************
  1941 ;; Defined at:
  1942 ;;		line 14 in file "../00-Librerie.X/UART.c"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;  ch              1    wreg     unsigned char 
  1945 ;; Auto vars:     Size  Location     Type
  1946 ;;  ch              1    5[COMMON] unsigned char 
  1947 ;; Return value:  Size  Location     Type
  1948 ;;                  1    wreg      void 
  1949 ;; Registers used:
  1950 ;;		wreg, status,2, status,0
  1951 ;; Tracked objects:
  1952 ;;		On entry : 0/0
  1953 ;;		On exit  : 0/0
  1954 ;;		Unchanged: 0/0
  1955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1956 ;;      Params:         0       0       0       0       0
  1957 ;;      Locals:         1       0       0       0       0
  1958 ;;      Temps:          1       0       0       0       0
  1959 ;;      Totals:         2       0       0       0       0
  1960 ;;Total ram usage:        2 bytes
  1961 ;; Hardware stack levels used: 1
  1962 ;; Hardware stack levels required when called: 1
  1963 ;; This function calls:
  1964 ;;		Nothing
  1965 ;; This function is called by:
  1966 ;;		_UART_TxString
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           
  1970     06D3                     _UART_TxChar:	
  1971                           ;psect for function _UART_TxChar
  1972                           
  1973                           
  1974                           ;incstack = 0
  1975                           ; Regs used in _UART_TxChar: [wreg+status,2+status,0]
  1976                           ;UART_TxChar@ch stored from wreg
  1977     06D3  00F5               	movwf	UART_TxChar@ch
  1978     06D4                     l2174:
  1979                           
  1980                           ;../00-Librerie.X/UART.c: 15:     TRISC &= ~0x40;
  1981     06D4  30BF               	movlw	191
  1982     06D5  00F4               	movwf	??_UART_TxChar
  1983     06D6  0874               	movf	??_UART_TxChar,w
  1984     06D7  1683               	bsf	3,5	;RP0=1, select bank1
  1985     06D8  1303               	bcf	3,6	;RP1=0, select bank1
  1986     06D9  0587               	andwf	7,f	;volatile
  1987     06DA                     l2176:
  1988                           
  1989                           ;../00-Librerie.X/UART.c: 16:     TRISC |= 0x80;
  1990     06DA  1787               	bsf	7,7	;volatile
  1991     06DB                     l151:	
  1992                           ;../00-Librerie.X/UART.c: 17:     while (!(PIR1 & 0x10));
  1993                           
  1994     06DB  1283               	bcf	3,5	;RP0=0, select bank0
  1995     06DC  1E0C               	btfss	12,4	;volatile
  1996     06DD  2EDF               	goto	u2501
  1997     06DE  2EE0               	goto	u2500
  1998     06DF                     u2501:
  1999     06DF  2EDB               	goto	l151
  2000     06E0                     u2500:
  2001     06E0                     l2178:
  2002                           
  2003                           ;../00-Librerie.X/UART.c: 18:     PIR1 &= ~0x10;
  2004     06E0  30EF               	movlw	239
  2005     06E1  00F4               	movwf	??_UART_TxChar
  2006     06E2  0874               	movf	??_UART_TxChar,w
  2007     06E3  058C               	andwf	12,f	;volatile
  2008     06E4                     l2180:
  2009                           
  2010                           ;../00-Librerie.X/UART.c: 19:     TXREG = ch;
  2011     06E4  0875               	movf	UART_TxChar@ch,w
  2012     06E5  0099               	movwf	25	;volatile
  2013     06E6                     l154:
  2014     06E6  0008               	return
  2015     06E7                     __end_of_UART_TxChar:
  2016                           
  2017                           	psect	text6
  2018     0029                     __ptext6:	
  2019 ;; *************** function _Lcd_Write_Int *****************
  2020 ;; Defined at:
  2021 ;;		line 121 in file "../00-Librerie.X/lcd.c"
  2022 ;; Parameters:    Size  Location     Type
  2023 ;;  val             2   10[BANK0 ] int 
  2024 ;; Auto vars:     Size  Location     Type
  2025 ;;  t               2   55[BANK3 ] int 
  2026 ;;  buffer         50    0[BANK3 ] unsigned char [50]
  2027 ;;  i               2   57[BANK3 ] int 
  2028 ;;  n               2   53[BANK3 ] int 
  2029 ;;  n1              2   51[BANK3 ] unsigned int 
  2030 ;;  isNeg           1   50[BANK3 ] unsigned char 
  2031 ;; Return value:  Size  Location     Type
  2032 ;;                  2   10[BANK0 ] PTR unsigned char 
  2033 ;; Registers used:
  2034 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2035 ;; Tracked objects:
  2036 ;;		On entry : 0/0
  2037 ;;		On exit  : 0/0
  2038 ;;		Unchanged: 0/0
  2039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2040 ;;      Params:         0       2       0       0       0
  2041 ;;      Locals:         0       0       0      59       0
  2042 ;;      Temps:          0       3       0       0       0
  2043 ;;      Totals:         0       5       0      59       0
  2044 ;;Total ram usage:       64 bytes
  2045 ;; Hardware stack levels used: 1
  2046 ;; Hardware stack levels required when called: 4
  2047 ;; This function calls:
  2048 ;;		_Lcd_Write_String
  2049 ;;		___awdiv
  2050 ;;		___lwdiv
  2051 ;;		___lwmod
  2052 ;; This function is called by:
  2053 ;;		_main
  2054 ;; This function uses a non-reentrant model
  2055 ;;
  2056                           
  2057     0029                     _Lcd_Write_Int:	
  2058                           ;psect for function _Lcd_Write_Int
  2059                           
  2060     0029                     l2356:	
  2061                           ;incstack = 0
  2062                           ; Regs used in _Lcd_Write_Int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2063                           
  2064                           
  2065                           ;../00-Librerie.X/lcd.c: 123:     int n = val;
  2066     0029  1283               	bcf	3,5	;RP0=0, select bank0
  2067     002A  1303               	bcf	3,6	;RP1=0, select bank0
  2068     002B  082B               	movf	Lcd_Write_Int@val+1,w
  2069     002C  1683               	bsf	3,5	;RP0=1, select bank3
  2070     002D  1703               	bsf	3,6	;RP1=1, select bank3
  2071     002E  00C6               	movwf	(Lcd_Write_Int@n+1)^(0+384)
  2072     002F  1283               	bcf	3,5	;RP0=0, select bank0
  2073     0030  1303               	bcf	3,6	;RP1=0, select bank0
  2074     0031  082A               	movf	Lcd_Write_Int@val,w
  2075     0032  1683               	bsf	3,5	;RP0=1, select bank3
  2076     0033  1703               	bsf	3,6	;RP1=1, select bank3
  2077     0034  00C5               	movwf	Lcd_Write_Int@n^(0+384)
  2078     0035                     l2358:
  2079                           
  2080                           ;../00-Librerie.X/lcd.c: 124:     char buffer[50];;../00-Librerie.X/lcd.c: 125:     int 
      +                          i = 0;
  2081     0035  01C9               	clrf	Lcd_Write_Int@i^(0+384)
  2082     0036  01CA               	clrf	(Lcd_Write_Int@i+1)^(0+384)
  2083     0037                     l2360:
  2084                           
  2085                           ;../00-Librerie.X/lcd.c: 126:     char isNeg = n < 0;
  2086     0037  1BC6               	btfsc	(Lcd_Write_Int@n+1)^(0+384),7
  2087     0038  283A               	goto	u2821
  2088     0039  283C               	goto	u2820
  2089     003A                     u2821:
  2090     003A  3001               	movlw	1
  2091     003B  283D               	goto	u2830
  2092     003C                     u2820:
  2093     003C  3000               	movlw	0
  2094     003D                     u2830:
  2095     003D  00C2               	movwf	Lcd_Write_Int@isNeg^(0+384)
  2096     003E                     l2362:
  2097                           
  2098                           ;../00-Librerie.X/lcd.c: 128:     unsigned int n1 = isNeg ? -n : n;
  2099     003E  0842               	movf	Lcd_Write_Int@isNeg^(0+384),w
  2100     003F  1D03               	btfss	3,2
  2101     0040  2842               	goto	u2841
  2102     0041  2843               	goto	u2840
  2103     0042                     u2841:
  2104     0042  2848               	goto	l2366
  2105     0043                     u2840:
  2106     0043                     l2364:
  2107     0043  0846               	movf	(Lcd_Write_Int@n+1)^(0+384),w
  2108     0044  00C4               	movwf	(Lcd_Write_Int@n1+1)^(0+384)
  2109     0045  0845               	movf	Lcd_Write_Int@n^(0+384),w
  2110     0046  00C3               	movwf	Lcd_Write_Int@n1^(0+384)
  2111     0047  28AB               	goto	l2374
  2112     0048                     l2366:
  2113     0048  0945               	comf	Lcd_Write_Int@n^(0+384),w
  2114     0049  1283               	bcf	3,5	;RP0=0, select bank0
  2115     004A  1303               	bcf	3,6	;RP1=0, select bank0
  2116     004B  00AC               	movwf	??_Lcd_Write_Int
  2117     004C  1683               	bsf	3,5	;RP0=1, select bank3
  2118     004D  1703               	bsf	3,6	;RP1=1, select bank3
  2119     004E  0946               	comf	(Lcd_Write_Int@n+1)^(0+384),w
  2120     004F  1283               	bcf	3,5	;RP0=0, select bank0
  2121     0050  1303               	bcf	3,6	;RP1=0, select bank0
  2122     0051  00AD               	movwf	??_Lcd_Write_Int+1
  2123     0052  0AAC               	incf	??_Lcd_Write_Int,f
  2124     0053  1903               	skipnz
  2125     0054  0AAD               	incf	??_Lcd_Write_Int+1,f
  2126     0055  082C               	movf	??_Lcd_Write_Int,w
  2127     0056  1683               	bsf	3,5	;RP0=1, select bank3
  2128     0057  1703               	bsf	3,6	;RP1=1, select bank3
  2129     0058  00C3               	movwf	Lcd_Write_Int@n1^(0+384)
  2130     0059  1283               	bcf	3,5	;RP0=0, select bank0
  2131     005A  1303               	bcf	3,6	;RP1=0, select bank0
  2132     005B  082D               	movf	??_Lcd_Write_Int+1,w
  2133     005C  1683               	bsf	3,5	;RP0=1, select bank3
  2134     005D  1703               	bsf	3,6	;RP1=1, select bank3
  2135     005E  00C4               	movwf	(Lcd_Write_Int@n1+1)^(0+384)
  2136     005F  28AB               	goto	l2374
  2137     0060                     l2368:
  2138                           
  2139                           ;../00-Librerie.X/lcd.c: 131:         buffer[i++] = n1 % 10 + '0';
  2140     0060  0849               	movf	Lcd_Write_Int@i^(0+384),w
  2141     0061  3E90               	addlw	(low (Lcd_Write_Int@buffer| (0+256)))& (0+255)
  2142     0062  0084               	movwf	4
  2143     0063  300A               	movlw	10
  2144     0064  1283               	bcf	3,5	;RP0=0, select bank0
  2145     0065  1303               	bcf	3,6	;RP1=0, select bank0
  2146     0066  00A0               	movwf	___lwmod@divisor
  2147     0067  3000               	movlw	0
  2148     0068  00A1               	movwf	___lwmod@divisor+1
  2149     0069  1683               	bsf	3,5	;RP0=1, select bank3
  2150     006A  1703               	bsf	3,6	;RP1=1, select bank3
  2151     006B  0844               	movf	(Lcd_Write_Int@n1+1)^(0+384),w
  2152     006C  1283               	bcf	3,5	;RP0=0, select bank0
  2153     006D  1303               	bcf	3,6	;RP1=0, select bank0
  2154     006E  00A3               	movwf	___lwmod@dividend+1
  2155     006F  1683               	bsf	3,5	;RP0=1, select bank3
  2156     0070  1703               	bsf	3,6	;RP1=1, select bank3
  2157     0071  0843               	movf	Lcd_Write_Int@n1^(0+384),w
  2158     0072  1283               	bcf	3,5	;RP0=0, select bank0
  2159     0073  1303               	bcf	3,6	;RP1=0, select bank0
  2160     0074  00A2               	movwf	___lwmod@dividend
  2161     0075  120A  118A  25A8  120A  118A  	fcall	___lwmod
  2162     007A  1283               	bcf	3,5	;RP0=0, select bank0
  2163     007B  1303               	bcf	3,6	;RP1=0, select bank0
  2164     007C  0820               	movf	?___lwmod,w
  2165     007D  3E30               	addlw	48
  2166     007E  1783               	bsf	3,7	;select IRP bank3
  2167     007F  0080               	movwf	0
  2168     0080                     l2370:
  2169     0080  3001               	movlw	1
  2170     0081  1683               	bsf	3,5	;RP0=1, select bank3
  2171     0082  1703               	bsf	3,6	;RP1=1, select bank3
  2172     0083  07C9               	addwf	Lcd_Write_Int@i^(0+384),f
  2173     0084  1803               	skipnc
  2174     0085  0ACA               	incf	(Lcd_Write_Int@i+1)^(0+384),f
  2175     0086  3000               	movlw	0
  2176     0087  07CA               	addwf	(Lcd_Write_Int@i+1)^(0+384),f
  2177     0088                     l2372:
  2178                           
  2179                           ;../00-Librerie.X/lcd.c: 132:         n1 = n1 / 10;
  2180     0088  300A               	movlw	10
  2181     0089  1283               	bcf	3,5	;RP0=0, select bank0
  2182     008A  1303               	bcf	3,6	;RP1=0, select bank0
  2183     008B  00A0               	movwf	___lwdiv@divisor
  2184     008C  3000               	movlw	0
  2185     008D  00A1               	movwf	___lwdiv@divisor+1
  2186     008E  1683               	bsf	3,5	;RP0=1, select bank3
  2187     008F  1703               	bsf	3,6	;RP1=1, select bank3
  2188     0090  0844               	movf	(Lcd_Write_Int@n1+1)^(0+384),w
  2189     0091  1283               	bcf	3,5	;RP0=0, select bank0
  2190     0092  1303               	bcf	3,6	;RP1=0, select bank0
  2191     0093  00A3               	movwf	___lwdiv@dividend+1
  2192     0094  1683               	bsf	3,5	;RP0=1, select bank3
  2193     0095  1703               	bsf	3,6	;RP1=1, select bank3
  2194     0096  0843               	movf	Lcd_Write_Int@n1^(0+384),w
  2195     0097  1283               	bcf	3,5	;RP0=0, select bank0
  2196     0098  1303               	bcf	3,6	;RP1=0, select bank0
  2197     0099  00A2               	movwf	___lwdiv@dividend
  2198     009A  120A  118A  249A  120A  118A  	fcall	___lwdiv
  2199     009F  1283               	bcf	3,5	;RP0=0, select bank0
  2200     00A0  1303               	bcf	3,6	;RP1=0, select bank0
  2201     00A1  0821               	movf	?___lwdiv+1,w
  2202     00A2  1683               	bsf	3,5	;RP0=1, select bank3
  2203     00A3  1703               	bsf	3,6	;RP1=1, select bank3
  2204     00A4  00C4               	movwf	(Lcd_Write_Int@n1+1)^(0+384)
  2205     00A5  1283               	bcf	3,5	;RP0=0, select bank0
  2206     00A6  1303               	bcf	3,6	;RP1=0, select bank0
  2207     00A7  0820               	movf	?___lwdiv,w
  2208     00A8  1683               	bsf	3,5	;RP0=1, select bank3
  2209     00A9  1703               	bsf	3,6	;RP1=1, select bank3
  2210     00AA  00C3               	movwf	Lcd_Write_Int@n1^(0+384)
  2211     00AB                     l2374:
  2212                           
  2213                           ;../00-Librerie.X/lcd.c: 130:     while (n1 != 0) {
  2214     00AB  0843               	movf	Lcd_Write_Int@n1^(0+384),w
  2215     00AC  0444               	iorwf	(Lcd_Write_Int@n1+1)^(0+384),w
  2216     00AD  1D03               	btfss	3,2
  2217     00AE  28B0               	goto	u2851
  2218     00AF  28B1               	goto	u2850
  2219     00B0                     u2851:
  2220     00B0  2860               	goto	l2368
  2221     00B1                     u2850:
  2222     00B1                     l2376:
  2223                           
  2224                           ;../00-Librerie.X/lcd.c: 135:     if (isNeg)
  2225     00B1  0842               	movf	Lcd_Write_Int@isNeg^(0+384),w
  2226     00B2  1903               	btfsc	3,2
  2227     00B3  28B5               	goto	u2861
  2228     00B4  28B6               	goto	u2860
  2229     00B5                     u2861:
  2230     00B5  28C2               	goto	l2382
  2231     00B6                     u2860:
  2232     00B6                     l2378:
  2233                           
  2234                           ;../00-Librerie.X/lcd.c: 136:         buffer[i++] = '-';
  2235     00B6  0849               	movf	Lcd_Write_Int@i^(0+384),w
  2236     00B7  3E90               	addlw	(low (Lcd_Write_Int@buffer| (0+256)))& (0+255)
  2237     00B8  0084               	movwf	4
  2238     00B9  302D               	movlw	45
  2239     00BA  1783               	bsf	3,7	;select IRP bank3
  2240     00BB  0080               	movwf	0
  2241     00BC                     l2380:
  2242     00BC  3001               	movlw	1
  2243     00BD  07C9               	addwf	Lcd_Write_Int@i^(0+384),f
  2244     00BE  1803               	skipnc
  2245     00BF  0ACA               	incf	(Lcd_Write_Int@i+1)^(0+384),f
  2246     00C0  3000               	movlw	0
  2247     00C1  07CA               	addwf	(Lcd_Write_Int@i+1)^(0+384),f
  2248     00C2                     l2382:
  2249                           
  2250                           ;../00-Librerie.X/lcd.c: 138:     buffer[i] = '\0';
  2251     00C2  0849               	movf	Lcd_Write_Int@i^(0+384),w
  2252     00C3  3E90               	addlw	(low (Lcd_Write_Int@buffer| (0+256)))& (0+255)
  2253     00C4  0084               	movwf	4
  2254     00C5  1783               	bsf	3,7	;select IRP bank3
  2255     00C6  0180               	clrf	0
  2256     00C7                     l2384:
  2257                           
  2258                           ;../00-Librerie.X/lcd.c: 140:     for (int t = 0; t < i / 2; t++) {
  2259     00C7  01C7               	clrf	Lcd_Write_Int@t^(0+384)
  2260     00C8  01C8               	clrf	(Lcd_Write_Int@t+1)^(0+384)
  2261     00C9  292C               	goto	l2390
  2262     00CA                     l2386:
  2263                           
  2264                           ;../00-Librerie.X/lcd.c: 141:         buffer[t] ^= buffer[i - t - 1];
  2265     00CA  3090               	movlw	(low (Lcd_Write_Int@buffer| (0+256)))& (0+255)
  2266     00CB  1283               	bcf	3,5	;RP0=0, select bank0
  2267     00CC  1303               	bcf	3,6	;RP1=0, select bank0
  2268     00CD  00AC               	movwf	??_Lcd_Write_Int
  2269     00CE  1683               	bsf	3,5	;RP0=1, select bank3
  2270     00CF  1703               	bsf	3,6	;RP1=1, select bank3
  2271     00D0  0847               	movf	Lcd_Write_Int@t^(0+384),w
  2272     00D1  1283               	bcf	3,5	;RP0=0, select bank0
  2273     00D2  1303               	bcf	3,6	;RP1=0, select bank0
  2274     00D3  02AC               	subwf	??_Lcd_Write_Int,f
  2275     00D4  1683               	bsf	3,5	;RP0=1, select bank3
  2276     00D5  1703               	bsf	3,6	;RP1=1, select bank3
  2277     00D6  0849               	movf	Lcd_Write_Int@i^(0+384),w
  2278     00D7  1283               	bcf	3,5	;RP0=0, select bank0
  2279     00D8  1303               	bcf	3,6	;RP1=0, select bank0
  2280     00D9  072C               	addwf	??_Lcd_Write_Int,w
  2281     00DA  00AD               	movwf	??_Lcd_Write_Int+1
  2282     00DB  082D               	movf	??_Lcd_Write_Int+1,w
  2283     00DC  3EFF               	addlw	255
  2284     00DD  0084               	movwf	4
  2285     00DE  1783               	bsf	3,7	;select IRP bank2
  2286     00DF  0800               	movf	0,w
  2287     00E0  00AE               	movwf	??_Lcd_Write_Int+2
  2288     00E1  1683               	bsf	3,5	;RP0=1, select bank3
  2289     00E2  1703               	bsf	3,6	;RP1=1, select bank3
  2290     00E3  0847               	movf	Lcd_Write_Int@t^(0+384),w
  2291     00E4  3E90               	addlw	(low (Lcd_Write_Int@buffer| (0+256)))& (0+255)
  2292     00E5  0084               	movwf	4
  2293     00E6  1283               	bcf	3,5	;RP0=0, select bank0
  2294     00E7  1303               	bcf	3,6	;RP1=0, select bank0
  2295     00E8  082E               	movf	??_Lcd_Write_Int+2,w
  2296     00E9  0680               	xorwf	0,f
  2297                           
  2298                           ;../00-Librerie.X/lcd.c: 142:         buffer[i - t - 1] ^= buffer[t];
  2299     00EA  1683               	bsf	3,5	;RP0=1, select bank3
  2300     00EB  1703               	bsf	3,6	;RP1=1, select bank3
  2301     00EC  0847               	movf	Lcd_Write_Int@t^(0+384),w
  2302     00ED  3E90               	addlw	(low (Lcd_Write_Int@buffer| (0+256)))& (0+255)
  2303     00EE  0084               	movwf	4
  2304     00EF  0800               	movf	0,w
  2305     00F0  1283               	bcf	3,5	;RP0=0, select bank0
  2306     00F1  1303               	bcf	3,6	;RP1=0, select bank0
  2307     00F2  00AC               	movwf	??_Lcd_Write_Int
  2308     00F3  3090               	movlw	(low (Lcd_Write_Int@buffer| (0+256)))& (0+255)
  2309     00F4  00AD               	movwf	??_Lcd_Write_Int+1
  2310     00F5  1683               	bsf	3,5	;RP0=1, select bank3
  2311     00F6  1703               	bsf	3,6	;RP1=1, select bank3
  2312     00F7  0847               	movf	Lcd_Write_Int@t^(0+384),w
  2313     00F8  1283               	bcf	3,5	;RP0=0, select bank0
  2314     00F9  1303               	bcf	3,6	;RP1=0, select bank0
  2315     00FA  02AD               	subwf	??_Lcd_Write_Int+1,f
  2316     00FB  1683               	bsf	3,5	;RP0=1, select bank3
  2317     00FC  1703               	bsf	3,6	;RP1=1, select bank3
  2318     00FD  0849               	movf	Lcd_Write_Int@i^(0+384),w
  2319     00FE  1283               	bcf	3,5	;RP0=0, select bank0
  2320     00FF  1303               	bcf	3,6	;RP1=0, select bank0
  2321     0100  072D               	addwf	??_Lcd_Write_Int+1,w
  2322     0101  00AE               	movwf	??_Lcd_Write_Int+2
  2323     0102  082E               	movf	??_Lcd_Write_Int+2,w
  2324     0103  3EFF               	addlw	255
  2325     0104  0084               	movwf	4
  2326     0105  082C               	movf	??_Lcd_Write_Int,w
  2327     0106  0680               	xorwf	0,f
  2328                           
  2329                           ;../00-Librerie.X/lcd.c: 143:         buffer[t] ^= buffer[i - t - 1];
  2330     0107  3090               	movlw	(low (Lcd_Write_Int@buffer| (0+256)))& (0+255)
  2331     0108  00AC               	movwf	??_Lcd_Write_Int
  2332     0109  1683               	bsf	3,5	;RP0=1, select bank3
  2333     010A  1703               	bsf	3,6	;RP1=1, select bank3
  2334     010B  0847               	movf	Lcd_Write_Int@t^(0+384),w
  2335     010C  1283               	bcf	3,5	;RP0=0, select bank0
  2336     010D  1303               	bcf	3,6	;RP1=0, select bank0
  2337     010E  02AC               	subwf	??_Lcd_Write_Int,f
  2338     010F  1683               	bsf	3,5	;RP0=1, select bank3
  2339     0110  1703               	bsf	3,6	;RP1=1, select bank3
  2340     0111  0849               	movf	Lcd_Write_Int@i^(0+384),w
  2341     0112  1283               	bcf	3,5	;RP0=0, select bank0
  2342     0113  1303               	bcf	3,6	;RP1=0, select bank0
  2343     0114  072C               	addwf	??_Lcd_Write_Int,w
  2344     0115  00AD               	movwf	??_Lcd_Write_Int+1
  2345     0116  082D               	movf	??_Lcd_Write_Int+1,w
  2346     0117  3EFF               	addlw	255
  2347     0118  0084               	movwf	4
  2348     0119  0800               	movf	0,w
  2349     011A  00AE               	movwf	??_Lcd_Write_Int+2
  2350     011B  1683               	bsf	3,5	;RP0=1, select bank3
  2351     011C  1703               	bsf	3,6	;RP1=1, select bank3
  2352     011D  0847               	movf	Lcd_Write_Int@t^(0+384),w
  2353     011E  3E90               	addlw	(low (Lcd_Write_Int@buffer| (0+256)))& (0+255)
  2354     011F  0084               	movwf	4
  2355     0120  1283               	bcf	3,5	;RP0=0, select bank0
  2356     0121  1303               	bcf	3,6	;RP1=0, select bank0
  2357     0122  082E               	movf	??_Lcd_Write_Int+2,w
  2358     0123  0680               	xorwf	0,f
  2359     0124                     l2388:
  2360                           
  2361                           ;../00-Librerie.X/lcd.c: 144:     }
  2362     0124  3001               	movlw	1
  2363     0125  1683               	bsf	3,5	;RP0=1, select bank3
  2364     0126  1703               	bsf	3,6	;RP1=1, select bank3
  2365     0127  07C7               	addwf	Lcd_Write_Int@t^(0+384),f
  2366     0128  1803               	skipnc
  2367     0129  0AC8               	incf	(Lcd_Write_Int@t+1)^(0+384),f
  2368     012A  3000               	movlw	0
  2369     012B  07C8               	addwf	(Lcd_Write_Int@t+1)^(0+384),f
  2370     012C                     l2390:
  2371     012C  3002               	movlw	2
  2372     012D  1283               	bcf	3,5	;RP0=0, select bank0
  2373     012E  1303               	bcf	3,6	;RP1=0, select bank0
  2374     012F  00A0               	movwf	___awdiv@divisor
  2375     0130  3000               	movlw	0
  2376     0131  00A1               	movwf	___awdiv@divisor+1
  2377     0132  1683               	bsf	3,5	;RP0=1, select bank3
  2378     0133  1703               	bsf	3,6	;RP1=1, select bank3
  2379     0134  084A               	movf	(Lcd_Write_Int@i+1)^(0+384),w
  2380     0135  1283               	bcf	3,5	;RP0=0, select bank0
  2381     0136  1303               	bcf	3,6	;RP1=0, select bank0
  2382     0137  00A3               	movwf	___awdiv@dividend+1
  2383     0138  1683               	bsf	3,5	;RP0=1, select bank3
  2384     0139  1703               	bsf	3,6	;RP1=1, select bank3
  2385     013A  0849               	movf	Lcd_Write_Int@i^(0+384),w
  2386     013B  1283               	bcf	3,5	;RP0=0, select bank0
  2387     013C  1303               	bcf	3,6	;RP1=0, select bank0
  2388     013D  00A2               	movwf	___awdiv@dividend
  2389     013E  120A  118A  23E6  120A  118A  	fcall	___awdiv
  2390     0143  1683               	bsf	3,5	;RP0=1, select bank3
  2391     0144  1703               	bsf	3,6	;RP1=1, select bank3
  2392     0145  0848               	movf	(Lcd_Write_Int@t+1)^(0+384),w
  2393     0146  3A80               	xorlw	128
  2394     0147  1283               	bcf	3,5	;RP0=0, select bank0
  2395     0148  1303               	bcf	3,6	;RP1=0, select bank0
  2396     0149  00AC               	movwf	??_Lcd_Write_Int
  2397     014A  0821               	movf	?___awdiv+1,w
  2398     014B  3A80               	xorlw	128
  2399     014C  022C               	subwf	??_Lcd_Write_Int,w
  2400     014D  1D03               	skipz
  2401     014E  2953               	goto	u2875
  2402     014F  0820               	movf	?___awdiv,w
  2403     0150  1683               	bsf	3,5	;RP0=1, select bank3
  2404     0151  1703               	bsf	3,6	;RP1=1, select bank3
  2405     0152  0247               	subwf	Lcd_Write_Int@t^(0+384),w
  2406     0153                     u2875:
  2407     0153  1C03               	skipc
  2408     0154  2956               	goto	u2871
  2409     0155  2957               	goto	u2870
  2410     0156                     u2871:
  2411     0156  28CA               	goto	l2386
  2412     0157                     u2870:
  2413     0157                     l2392:
  2414                           
  2415                           ;../00-Librerie.X/lcd.c: 146:     if (n == 0) {
  2416     0157  1683               	bsf	3,5	;RP0=1, select bank3
  2417     0158  1703               	bsf	3,6	;RP1=1, select bank3
  2418     0159  0845               	movf	Lcd_Write_Int@n^(0+384),w
  2419     015A  0446               	iorwf	(Lcd_Write_Int@n+1)^(0+384),w
  2420     015B  1D03               	btfss	3,2
  2421     015C  295E               	goto	u2881
  2422     015D  295F               	goto	u2880
  2423     015E                     u2881:
  2424     015E  2962               	goto	l2398
  2425     015F                     u2880:
  2426     015F                     l2394:
  2427                           
  2428                           ;../00-Librerie.X/lcd.c: 147:         buffer[0] = '0';
  2429     015F  3030               	movlw	48
  2430     0160  0090               	movwf	Lcd_Write_Int@buffer^(0+384)
  2431     0161                     l2396:
  2432                           
  2433                           ;../00-Librerie.X/lcd.c: 148:         buffer[1] = '\0';
  2434     0161  0191               	clrf	(Lcd_Write_Int@buffer^(0+384)+1)
  2435     0162                     l2398:
  2436                           
  2437                           ;../00-Librerie.X/lcd.c: 151:     Lcd_Write_String(buffer);
  2438     0162  3090               	movlw	(low (Lcd_Write_Int@buffer| (0+256)))& (0+255)
  2439     0163  1283               	bcf	3,5	;RP0=0, select bank0
  2440     0164  1303               	bcf	3,6	;RP1=0, select bank0
  2441     0165  00A3               	movwf	Lcd_Write_String@a
  2442     0166  3001               	movlw	1
  2443     0167  00A4               	movwf	Lcd_Write_String@a+1
  2444     0168  120A  118A  24E0  120A  118A  	fcall	_Lcd_Write_String
  2445     016D                     l94:
  2446     016D  0008               	return
  2447     016E                     __end_of_Lcd_Write_Int:
  2448                           
  2449                           	psect	text7
  2450     05A8                     __ptext7:	
  2451 ;; *************** function ___lwmod *****************
  2452 ;; Defined at:
  2453 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2454 ;; Parameters:    Size  Location     Type
  2455 ;;  divisor         2    0[BANK0 ] unsigned int 
  2456 ;;  dividend        2    2[BANK0 ] unsigned int 
  2457 ;; Auto vars:     Size  Location     Type
  2458 ;;  counter         1    5[COMMON] unsigned char 
  2459 ;; Return value:  Size  Location     Type
  2460 ;;                  2    0[BANK0 ] unsigned int 
  2461 ;; Registers used:
  2462 ;;		wreg, status,2, status,0
  2463 ;; Tracked objects:
  2464 ;;		On entry : 0/0
  2465 ;;		On exit  : 0/0
  2466 ;;		Unchanged: 0/0
  2467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2468 ;;      Params:         0       4       0       0       0
  2469 ;;      Locals:         1       0       0       0       0
  2470 ;;      Temps:          1       0       0       0       0
  2471 ;;      Totals:         2       4       0       0       0
  2472 ;;Total ram usage:        6 bytes
  2473 ;; Hardware stack levels used: 1
  2474 ;; Hardware stack levels required when called: 1
  2475 ;; This function calls:
  2476 ;;		Nothing
  2477 ;; This function is called by:
  2478 ;;		_Lcd_Write_Int
  2479 ;;		_UART_TxInt
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483     05A8                     ___lwmod:	
  2484                           ;psect for function ___lwmod
  2485                           
  2486     05A8                     l2282:	
  2487                           ;incstack = 0
  2488                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2489                           
  2490     05A8  1283               	bcf	3,5	;RP0=0, select bank0
  2491     05A9  1303               	bcf	3,6	;RP1=0, select bank0
  2492     05AA  0820               	movf	___lwmod@divisor,w
  2493     05AB  0421               	iorwf	___lwmod@divisor+1,w
  2494     05AC  1903               	btfsc	3,2
  2495     05AD  2DAF               	goto	u2721
  2496     05AE  2DB0               	goto	u2720
  2497     05AF                     u2721:
  2498     05AF  2DDF               	goto	l2300
  2499     05B0                     u2720:
  2500     05B0                     l2284:
  2501     05B0  01F5               	clrf	___lwmod@counter
  2502     05B1  0AF5               	incf	___lwmod@counter,f
  2503     05B2  2DBE               	goto	l2290
  2504     05B3                     l2286:
  2505     05B3  3001               	movlw	1
  2506     05B4                     u2735:
  2507     05B4  1003               	clrc
  2508     05B5  0DA0               	rlf	___lwmod@divisor,f
  2509     05B6  0DA1               	rlf	___lwmod@divisor+1,f
  2510     05B7  3EFF               	addlw	-1
  2511     05B8  1D03               	skipz
  2512     05B9  2DB4               	goto	u2735
  2513     05BA                     l2288:
  2514     05BA  3001               	movlw	1
  2515     05BB  00F4               	movwf	??___lwmod
  2516     05BC  0874               	movf	??___lwmod,w
  2517     05BD  07F5               	addwf	___lwmod@counter,f
  2518     05BE                     l2290:
  2519     05BE  1FA1               	btfss	___lwmod@divisor+1,7
  2520     05BF  2DC1               	goto	u2741
  2521     05C0  2DC2               	goto	u2740
  2522     05C1                     u2741:
  2523     05C1  2DB3               	goto	l2286
  2524     05C2                     u2740:
  2525     05C2                     l2292:
  2526     05C2  0821               	movf	___lwmod@divisor+1,w
  2527     05C3  0223               	subwf	___lwmod@dividend+1,w
  2528     05C4  1D03               	skipz
  2529     05C5  2DC8               	goto	u2755
  2530     05C6  0820               	movf	___lwmod@divisor,w
  2531     05C7  0222               	subwf	___lwmod@dividend,w
  2532     05C8                     u2755:
  2533     05C8  1C03               	skipc
  2534     05C9  2DCB               	goto	u2751
  2535     05CA  2DCC               	goto	u2750
  2536     05CB                     u2751:
  2537     05CB  2DD2               	goto	l2296
  2538     05CC                     u2750:
  2539     05CC                     l2294:
  2540     05CC  0820               	movf	___lwmod@divisor,w
  2541     05CD  02A2               	subwf	___lwmod@dividend,f
  2542     05CE  0821               	movf	___lwmod@divisor+1,w
  2543     05CF  1C03               	skipc
  2544     05D0  03A3               	decf	___lwmod@dividend+1,f
  2545     05D1  02A3               	subwf	___lwmod@dividend+1,f
  2546     05D2                     l2296:
  2547     05D2  3001               	movlw	1
  2548     05D3                     u2765:
  2549     05D3  1003               	clrc
  2550     05D4  0CA1               	rrf	___lwmod@divisor+1,f
  2551     05D5  0CA0               	rrf	___lwmod@divisor,f
  2552     05D6  3EFF               	addlw	-1
  2553     05D7  1D03               	skipz
  2554     05D8  2DD3               	goto	u2765
  2555     05D9                     l2298:
  2556     05D9  3001               	movlw	1
  2557     05DA  02F5               	subwf	___lwmod@counter,f
  2558     05DB  1D03               	btfss	3,2
  2559     05DC  2DDE               	goto	u2771
  2560     05DD  2DDF               	goto	u2770
  2561     05DE                     u2771:
  2562     05DE  2DC2               	goto	l2292
  2563     05DF                     u2770:
  2564     05DF                     l2300:
  2565     05DF  0823               	movf	___lwmod@dividend+1,w
  2566     05E0  00A1               	movwf	?___lwmod+1
  2567     05E1  0822               	movf	___lwmod@dividend,w
  2568     05E2  00A0               	movwf	?___lwmod
  2569     05E3                     l602:
  2570     05E3  0008               	return
  2571     05E4                     __end_of___lwmod:
  2572                           
  2573                           	psect	text8
  2574     049A                     __ptext8:	
  2575 ;; *************** function ___lwdiv *****************
  2576 ;; Defined at:
  2577 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2578 ;; Parameters:    Size  Location     Type
  2579 ;;  divisor         2    0[BANK0 ] unsigned int 
  2580 ;;  dividend        2    2[BANK0 ] unsigned int 
  2581 ;; Auto vars:     Size  Location     Type
  2582 ;;  quotient        2    5[BANK0 ] unsigned int 
  2583 ;;  counter         1    4[BANK0 ] unsigned char 
  2584 ;; Return value:  Size  Location     Type
  2585 ;;                  2    0[BANK0 ] unsigned int 
  2586 ;; Registers used:
  2587 ;;		wreg, status,2, status,0
  2588 ;; Tracked objects:
  2589 ;;		On entry : 0/0
  2590 ;;		On exit  : 0/0
  2591 ;;		Unchanged: 0/0
  2592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2593 ;;      Params:         0       4       0       0       0
  2594 ;;      Locals:         0       3       0       0       0
  2595 ;;      Temps:          1       0       0       0       0
  2596 ;;      Totals:         1       7       0       0       0
  2597 ;;Total ram usage:        8 bytes
  2598 ;; Hardware stack levels used: 1
  2599 ;; Hardware stack levels required when called: 1
  2600 ;; This function calls:
  2601 ;;		Nothing
  2602 ;; This function is called by:
  2603 ;;		_Lcd_Write_Int
  2604 ;;		_UART_TxInt
  2605 ;; This function uses a non-reentrant model
  2606 ;;
  2607                           
  2608     049A                     ___lwdiv:	
  2609                           ;psect for function ___lwdiv
  2610                           
  2611     049A                     l2256:	
  2612                           ;incstack = 0
  2613                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2614                           
  2615     049A  1283               	bcf	3,5	;RP0=0, select bank0
  2616     049B  1303               	bcf	3,6	;RP1=0, select bank0
  2617     049C  01A5               	clrf	___lwdiv@quotient
  2618     049D  01A6               	clrf	___lwdiv@quotient+1
  2619     049E                     l2258:
  2620     049E  0820               	movf	___lwdiv@divisor,w
  2621     049F  0421               	iorwf	___lwdiv@divisor+1,w
  2622     04A0  1903               	btfsc	3,2
  2623     04A1  2CA3               	goto	u2651
  2624     04A2  2CA4               	goto	u2650
  2625     04A3                     u2651:
  2626     04A3  2CDB               	goto	l2278
  2627     04A4                     u2650:
  2628     04A4                     l2260:
  2629     04A4  01A4               	clrf	___lwdiv@counter
  2630     04A5  0AA4               	incf	___lwdiv@counter,f
  2631     04A6  2CB2               	goto	l2266
  2632     04A7                     l2262:
  2633     04A7  3001               	movlw	1
  2634     04A8                     u2665:
  2635     04A8  1003               	clrc
  2636     04A9  0DA0               	rlf	___lwdiv@divisor,f
  2637     04AA  0DA1               	rlf	___lwdiv@divisor+1,f
  2638     04AB  3EFF               	addlw	-1
  2639     04AC  1D03               	skipz
  2640     04AD  2CA8               	goto	u2665
  2641     04AE                     l2264:
  2642     04AE  3001               	movlw	1
  2643     04AF  00F4               	movwf	??___lwdiv
  2644     04B0  0874               	movf	??___lwdiv,w
  2645     04B1  07A4               	addwf	___lwdiv@counter,f
  2646     04B2                     l2266:
  2647     04B2  1FA1               	btfss	___lwdiv@divisor+1,7
  2648     04B3  2CB5               	goto	u2671
  2649     04B4  2CB6               	goto	u2670
  2650     04B5                     u2671:
  2651     04B5  2CA7               	goto	l2262
  2652     04B6                     u2670:
  2653     04B6                     l2268:
  2654     04B6  3001               	movlw	1
  2655     04B7                     u2685:
  2656     04B7  1003               	clrc
  2657     04B8  0DA5               	rlf	___lwdiv@quotient,f
  2658     04B9  0DA6               	rlf	___lwdiv@quotient+1,f
  2659     04BA  3EFF               	addlw	-1
  2660     04BB  1D03               	skipz
  2661     04BC  2CB7               	goto	u2685
  2662     04BD  0821               	movf	___lwdiv@divisor+1,w
  2663     04BE  0223               	subwf	___lwdiv@dividend+1,w
  2664     04BF  1D03               	skipz
  2665     04C0  2CC3               	goto	u2695
  2666     04C1  0820               	movf	___lwdiv@divisor,w
  2667     04C2  0222               	subwf	___lwdiv@dividend,w
  2668     04C3                     u2695:
  2669     04C3  1C03               	skipc
  2670     04C4  2CC6               	goto	u2691
  2671     04C5  2CC7               	goto	u2690
  2672     04C6                     u2691:
  2673     04C6  2CCE               	goto	l2274
  2674     04C7                     u2690:
  2675     04C7                     l2270:
  2676     04C7  0820               	movf	___lwdiv@divisor,w
  2677     04C8  02A2               	subwf	___lwdiv@dividend,f
  2678     04C9  0821               	movf	___lwdiv@divisor+1,w
  2679     04CA  1C03               	skipc
  2680     04CB  03A3               	decf	___lwdiv@dividend+1,f
  2681     04CC  02A3               	subwf	___lwdiv@dividend+1,f
  2682     04CD                     l2272:
  2683     04CD  1425               	bsf	___lwdiv@quotient,0
  2684     04CE                     l2274:
  2685     04CE  3001               	movlw	1
  2686     04CF                     u2705:
  2687     04CF  1003               	clrc
  2688     04D0  0CA1               	rrf	___lwdiv@divisor+1,f
  2689     04D1  0CA0               	rrf	___lwdiv@divisor,f
  2690     04D2  3EFF               	addlw	-1
  2691     04D3  1D03               	skipz
  2692     04D4  2CCF               	goto	u2705
  2693     04D5                     l2276:
  2694     04D5  3001               	movlw	1
  2695     04D6  02A4               	subwf	___lwdiv@counter,f
  2696     04D7  1D03               	btfss	3,2
  2697     04D8  2CDA               	goto	u2711
  2698     04D9  2CDB               	goto	u2710
  2699     04DA                     u2711:
  2700     04DA  2CB6               	goto	l2268
  2701     04DB                     u2710:
  2702     04DB                     l2278:
  2703     04DB  0826               	movf	___lwdiv@quotient+1,w
  2704     04DC  00A1               	movwf	?___lwdiv+1
  2705     04DD  0825               	movf	___lwdiv@quotient,w
  2706     04DE  00A0               	movwf	?___lwdiv
  2707     04DF                     l592:
  2708     04DF  0008               	return
  2709     04E0                     __end_of___lwdiv:
  2710                           
  2711                           	psect	text9
  2712     03E6                     __ptext9:	
  2713 ;; *************** function ___awdiv *****************
  2714 ;; Defined at:
  2715 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  2716 ;; Parameters:    Size  Location     Type
  2717 ;;  divisor         2    0[BANK0 ] int 
  2718 ;;  dividend        2    2[BANK0 ] int 
  2719 ;; Auto vars:     Size  Location     Type
  2720 ;;  quotient        2    6[BANK0 ] int 
  2721 ;;  sign            1    5[BANK0 ] unsigned char 
  2722 ;;  counter         1    4[BANK0 ] unsigned char 
  2723 ;; Return value:  Size  Location     Type
  2724 ;;                  2    0[BANK0 ] int 
  2725 ;; Registers used:
  2726 ;;		wreg, status,2, status,0
  2727 ;; Tracked objects:
  2728 ;;		On entry : 0/0
  2729 ;;		On exit  : 0/0
  2730 ;;		Unchanged: 0/0
  2731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2732 ;;      Params:         0       4       0       0       0
  2733 ;;      Locals:         0       4       0       0       0
  2734 ;;      Temps:          1       0       0       0       0
  2735 ;;      Totals:         1       8       0       0       0
  2736 ;;Total ram usage:        9 bytes
  2737 ;; Hardware stack levels used: 1
  2738 ;; Hardware stack levels required when called: 1
  2739 ;; This function calls:
  2740 ;;		Nothing
  2741 ;; This function is called by:
  2742 ;;		_Lcd_Write_Int
  2743 ;;		_UART_TxInt
  2744 ;; This function uses a non-reentrant model
  2745 ;;
  2746                           
  2747     03E6                     ___awdiv:	
  2748                           ;psect for function ___awdiv
  2749                           
  2750     03E6                     l2212:	
  2751                           ;incstack = 0
  2752                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2753                           
  2754     03E6  1283               	bcf	3,5	;RP0=0, select bank0
  2755     03E7  1303               	bcf	3,6	;RP1=0, select bank0
  2756     03E8  01A5               	clrf	___awdiv@sign
  2757     03E9                     l2214:
  2758     03E9  1FA1               	btfss	___awdiv@divisor+1,7
  2759     03EA  2BEC               	goto	u2551
  2760     03EB  2BED               	goto	u2550
  2761     03EC                     u2551:
  2762     03EC  2BF4               	goto	l2220
  2763     03ED                     u2550:
  2764     03ED                     l2216:
  2765     03ED  09A0               	comf	___awdiv@divisor,f
  2766     03EE  09A1               	comf	___awdiv@divisor+1,f
  2767     03EF  0AA0               	incf	___awdiv@divisor,f
  2768     03F0  1903               	skipnz
  2769     03F1  0AA1               	incf	___awdiv@divisor+1,f
  2770     03F2                     l2218:
  2771     03F2  01A5               	clrf	___awdiv@sign
  2772     03F3  0AA5               	incf	___awdiv@sign,f
  2773     03F4                     l2220:
  2774     03F4  1FA3               	btfss	___awdiv@dividend+1,7
  2775     03F5  2BF7               	goto	u2561
  2776     03F6  2BF8               	goto	u2560
  2777     03F7                     u2561:
  2778     03F7  2C01               	goto	l2226
  2779     03F8                     u2560:
  2780     03F8                     l2222:
  2781     03F8  09A2               	comf	___awdiv@dividend,f
  2782     03F9  09A3               	comf	___awdiv@dividend+1,f
  2783     03FA  0AA2               	incf	___awdiv@dividend,f
  2784     03FB  1903               	skipnz
  2785     03FC  0AA3               	incf	___awdiv@dividend+1,f
  2786     03FD                     l2224:
  2787     03FD  3001               	movlw	1
  2788     03FE  00F4               	movwf	??___awdiv
  2789     03FF  0874               	movf	??___awdiv,w
  2790     0400  06A5               	xorwf	___awdiv@sign,f
  2791     0401                     l2226:
  2792     0401  01A6               	clrf	___awdiv@quotient
  2793     0402  01A7               	clrf	___awdiv@quotient+1
  2794     0403                     l2228:
  2795     0403  0820               	movf	___awdiv@divisor,w
  2796     0404  0421               	iorwf	___awdiv@divisor+1,w
  2797     0405  1903               	btfsc	3,2
  2798     0406  2C08               	goto	u2571
  2799     0407  2C09               	goto	u2570
  2800     0408                     u2571:
  2801     0408  2C40               	goto	l2248
  2802     0409                     u2570:
  2803     0409                     l2230:
  2804     0409  01A4               	clrf	___awdiv@counter
  2805     040A  0AA4               	incf	___awdiv@counter,f
  2806     040B  2C17               	goto	l2236
  2807     040C                     l2232:
  2808     040C  3001               	movlw	1
  2809     040D                     u2585:
  2810     040D  1003               	clrc
  2811     040E  0DA0               	rlf	___awdiv@divisor,f
  2812     040F  0DA1               	rlf	___awdiv@divisor+1,f
  2813     0410  3EFF               	addlw	-1
  2814     0411  1D03               	skipz
  2815     0412  2C0D               	goto	u2585
  2816     0413                     l2234:
  2817     0413  3001               	movlw	1
  2818     0414  00F4               	movwf	??___awdiv
  2819     0415  0874               	movf	??___awdiv,w
  2820     0416  07A4               	addwf	___awdiv@counter,f
  2821     0417                     l2236:
  2822     0417  1FA1               	btfss	___awdiv@divisor+1,7
  2823     0418  2C1A               	goto	u2591
  2824     0419  2C1B               	goto	u2590
  2825     041A                     u2591:
  2826     041A  2C0C               	goto	l2232
  2827     041B                     u2590:
  2828     041B                     l2238:
  2829     041B  3001               	movlw	1
  2830     041C                     u2605:
  2831     041C  1003               	clrc
  2832     041D  0DA6               	rlf	___awdiv@quotient,f
  2833     041E  0DA7               	rlf	___awdiv@quotient+1,f
  2834     041F  3EFF               	addlw	-1
  2835     0420  1D03               	skipz
  2836     0421  2C1C               	goto	u2605
  2837     0422  0821               	movf	___awdiv@divisor+1,w
  2838     0423  0223               	subwf	___awdiv@dividend+1,w
  2839     0424  1D03               	skipz
  2840     0425  2C28               	goto	u2615
  2841     0426  0820               	movf	___awdiv@divisor,w
  2842     0427  0222               	subwf	___awdiv@dividend,w
  2843     0428                     u2615:
  2844     0428  1C03               	skipc
  2845     0429  2C2B               	goto	u2611
  2846     042A  2C2C               	goto	u2610
  2847     042B                     u2611:
  2848     042B  2C33               	goto	l2244
  2849     042C                     u2610:
  2850     042C                     l2240:
  2851     042C  0820               	movf	___awdiv@divisor,w
  2852     042D  02A2               	subwf	___awdiv@dividend,f
  2853     042E  0821               	movf	___awdiv@divisor+1,w
  2854     042F  1C03               	skipc
  2855     0430  03A3               	decf	___awdiv@dividend+1,f
  2856     0431  02A3               	subwf	___awdiv@dividend+1,f
  2857     0432                     l2242:
  2858     0432  1426               	bsf	___awdiv@quotient,0
  2859     0433                     l2244:
  2860     0433  3001               	movlw	1
  2861     0434                     u2625:
  2862     0434  1003               	clrc
  2863     0435  0CA1               	rrf	___awdiv@divisor+1,f
  2864     0436  0CA0               	rrf	___awdiv@divisor,f
  2865     0437  3EFF               	addlw	-1
  2866     0438  1D03               	skipz
  2867     0439  2C34               	goto	u2625
  2868     043A                     l2246:
  2869     043A  3001               	movlw	1
  2870     043B  02A4               	subwf	___awdiv@counter,f
  2871     043C  1D03               	btfss	3,2
  2872     043D  2C3F               	goto	u2631
  2873     043E  2C40               	goto	u2630
  2874     043F                     u2631:
  2875     043F  2C1B               	goto	l2238
  2876     0440                     u2630:
  2877     0440                     l2248:
  2878     0440  0825               	movf	___awdiv@sign,w
  2879     0441  1903               	btfsc	3,2
  2880     0442  2C44               	goto	u2641
  2881     0443  2C45               	goto	u2640
  2882     0444                     u2641:
  2883     0444  2C4A               	goto	l2252
  2884     0445                     u2640:
  2885     0445                     l2250:
  2886     0445  09A6               	comf	___awdiv@quotient,f
  2887     0446  09A7               	comf	___awdiv@quotient+1,f
  2888     0447  0AA6               	incf	___awdiv@quotient,f
  2889     0448  1903               	skipnz
  2890     0449  0AA7               	incf	___awdiv@quotient+1,f
  2891     044A                     l2252:
  2892     044A  0827               	movf	___awdiv@quotient+1,w
  2893     044B  00A1               	movwf	?___awdiv+1
  2894     044C  0826               	movf	___awdiv@quotient,w
  2895     044D  00A0               	movwf	?___awdiv
  2896     044E                     l473:
  2897     044E  0008               	return
  2898     044F                     __end_of___awdiv:
  2899                           
  2900                           	psect	text10
  2901     04E0                     __ptext10:	
  2902 ;; *************** function _Lcd_Write_String *****************
  2903 ;; Defined at:
  2904 ;;		line 105 in file "../00-Librerie.X/lcd.c"
  2905 ;; Parameters:    Size  Location     Type
  2906 ;;  a               2    3[BANK0 ] PTR unsigned char 
  2907 ;;		 -> STR_1(17), Lcd_Write_Int@buffer(50), 
  2908 ;; Auto vars:     Size  Location     Type
  2909 ;;  i               2    8[BANK0 ] int 
  2910 ;; Return value:  Size  Location     Type
  2911 ;;                  1    wreg      void 
  2912 ;; Registers used:
  2913 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2914 ;; Tracked objects:
  2915 ;;		On entry : 0/0
  2916 ;;		On exit  : 0/0
  2917 ;;		Unchanged: 0/0
  2918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2919 ;;      Params:         0       2       0       0       0
  2920 ;;      Locals:         0       2       0       0       0
  2921 ;;      Temps:          0       3       0       0       0
  2922 ;;      Totals:         0       7       0       0       0
  2923 ;;Total ram usage:        7 bytes
  2924 ;; Hardware stack levels used: 1
  2925 ;; Hardware stack levels required when called: 3
  2926 ;; This function calls:
  2927 ;;		_Lcd_Write_Char
  2928 ;; This function is called by:
  2929 ;;		_Lcd_Write_Int
  2930 ;;		_main
  2931 ;; This function uses a non-reentrant model
  2932 ;;
  2933                           
  2934     04E0                     _Lcd_Write_String:	
  2935                           ;psect for function _Lcd_Write_String
  2936                           
  2937     04E0                     l2196:	
  2938                           ;incstack = 0
  2939                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2940                           
  2941                           
  2942                           ;../00-Librerie.X/lcd.c: 106:     int i;;../00-Librerie.X/lcd.c: 107:     for (i = 0; a[
      +                          i] != '\0'; i++)
  2943     04E0  1283               	bcf	3,5	;RP0=0, select bank0
  2944     04E1  1303               	bcf	3,6	;RP1=0, select bank0
  2945     04E2  01A8               	clrf	Lcd_Write_String@i
  2946     04E3  01A9               	clrf	Lcd_Write_String@i+1
  2947     04E4  2D09               	goto	l2202
  2948     04E5                     l2198:
  2949                           
  2950                           ;../00-Librerie.X/lcd.c: 108:         Lcd_Write_Char(a[i]);
  2951     04E5  0828               	movf	Lcd_Write_String@i,w
  2952     04E6  0723               	addwf	Lcd_Write_String@a,w
  2953     04E7  00A6               	movwf	??_Lcd_Write_String+1
  2954     04E8  0824               	movf	Lcd_Write_String@a+1,w
  2955     04E9  00A5               	movwf	??_Lcd_Write_String
  2956     04EA  1803               	skipnc
  2957     04EB  0AA5               	incf	??_Lcd_Write_String,f
  2958     04EC  1FA8               	btfss	Lcd_Write_String@i,7
  2959     04ED  2CEF               	goto	u2510
  2960     04EE  03A5               	decf	??_Lcd_Write_String,f
  2961     04EF                     u2510:
  2962     04EF  1283               	bcf	3,5	;RP0=0, select bank0
  2963     04F0  1303               	bcf	3,6	;RP1=0, select bank0
  2964     04F1  0825               	movf	??_Lcd_Write_String,w
  2965     04F2  00A7               	movwf	??_Lcd_Write_String+2
  2966     04F3  0827               	movf	??_Lcd_Write_String+2,w
  2967     04F4  00FF               	movwf	btemp+1
  2968     04F5  0826               	movf	??_Lcd_Write_String+1,w
  2969     04F6  0084               	movwf	4
  2970     04F7  120A  118A  2600  120A  118A  	fcall	stringtab
  2971     04FC  120A  118A  2637  120A  118A  	fcall	_Lcd_Write_Char
  2972     0501                     l2200:
  2973     0501  3001               	movlw	1
  2974     0502  1283               	bcf	3,5	;RP0=0, select bank0
  2975     0503  1303               	bcf	3,6	;RP1=0, select bank0
  2976     0504  07A8               	addwf	Lcd_Write_String@i,f
  2977     0505  1803               	skipnc
  2978     0506  0AA9               	incf	Lcd_Write_String@i+1,f
  2979     0507  3000               	movlw	0
  2980     0508  07A9               	addwf	Lcd_Write_String@i+1,f
  2981     0509                     l2202:
  2982     0509  0828               	movf	Lcd_Write_String@i,w
  2983     050A  0723               	addwf	Lcd_Write_String@a,w
  2984     050B  00A6               	movwf	??_Lcd_Write_String+1
  2985     050C  0824               	movf	Lcd_Write_String@a+1,w
  2986     050D  00A5               	movwf	??_Lcd_Write_String
  2987     050E  1803               	skipnc
  2988     050F  0AA5               	incf	??_Lcd_Write_String,f
  2989     0510  1FA8               	btfss	Lcd_Write_String@i,7
  2990     0511  2D13               	goto	u2520
  2991     0512  03A5               	decf	??_Lcd_Write_String,f
  2992     0513                     u2520:
  2993     0513  1283               	bcf	3,5	;RP0=0, select bank0
  2994     0514  1303               	bcf	3,6	;RP1=0, select bank0
  2995     0515  0825               	movf	??_Lcd_Write_String,w
  2996     0516  00A7               	movwf	??_Lcd_Write_String+2
  2997     0517  0827               	movf	??_Lcd_Write_String+2,w
  2998     0518  00FF               	movwf	btemp+1
  2999     0519  0826               	movf	??_Lcd_Write_String+1,w
  3000     051A  0084               	movwf	4
  3001     051B  120A  118A  2600  120A  118A  	fcall	stringtab
  3002     0520  3A00               	xorlw	0
  3003     0521  1D03               	skipz
  3004     0522  2D24               	goto	u2531
  3005     0523  2D25               	goto	u2530
  3006     0524                     u2531:
  3007     0524  2CE5               	goto	l2198
  3008     0525                     u2530:
  3009     0525                     l73:
  3010     0525  0008               	return
  3011     0526                     __end_of_Lcd_Write_String:
  3012                           
  3013                           	psect	text11
  3014     0637                     __ptext11:	
  3015 ;; *************** function _Lcd_Write_Char *****************
  3016 ;; Defined at:
  3017 ;;		line 88 in file "../00-Librerie.X/lcd.c"
  3018 ;; Parameters:    Size  Location     Type
  3019 ;;  a               1    wreg     unsigned char 
  3020 ;; Auto vars:     Size  Location     Type
  3021 ;;  a               1    2[BANK0 ] unsigned char 
  3022 ;;  y               1    1[BANK0 ] unsigned char 
  3023 ;;  temp            1    0[BANK0 ] unsigned char 
  3024 ;; Return value:  Size  Location     Type
  3025 ;;                  1    wreg      void 
  3026 ;; Registers used:
  3027 ;;		wreg, status,2, status,0, pclath, cstack
  3028 ;; Tracked objects:
  3029 ;;		On entry : 0/0
  3030 ;;		On exit  : 0/0
  3031 ;;		Unchanged: 0/0
  3032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3033 ;;      Params:         0       0       0       0       0
  3034 ;;      Locals:         0       3       0       0       0
  3035 ;;      Temps:          1       0       0       0       0
  3036 ;;      Totals:         1       3       0       0       0
  3037 ;;Total ram usage:        4 bytes
  3038 ;; Hardware stack levels used: 1
  3039 ;; Hardware stack levels required when called: 2
  3040 ;; This function calls:
  3041 ;;		_Lcd_Port
  3042 ;; This function is called by:
  3043 ;;		_Lcd_Write_String
  3044 ;;		_main
  3045 ;; This function uses a non-reentrant model
  3046 ;;
  3047                           
  3048     0637                     _Lcd_Write_Char:	
  3049                           ;psect for function _Lcd_Write_Char
  3050                           
  3051                           
  3052                           ;incstack = 0
  3053                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3054                           ;Lcd_Write_Char@a stored from wreg
  3055     0637  1283               	bcf	3,5	;RP0=0, select bank0
  3056     0638  1303               	bcf	3,6	;RP1=0, select bank0
  3057     0639  00A2               	movwf	Lcd_Write_Char@a
  3058     063A                     l2154:
  3059                           
  3060                           ;../00-Librerie.X/lcd.c: 89:     char temp, y;;../00-Librerie.X/lcd.c: 90:     temp = a 
      +                          & 0x0F;
  3061     063A  0822               	movf	Lcd_Write_Char@a,w
  3062     063B  390F               	andlw	15
  3063     063C  00A0               	movwf	Lcd_Write_Char@temp
  3064                           
  3065                           ;../00-Librerie.X/lcd.c: 91:     y = a & 0xF0;
  3066     063D  0822               	movf	Lcd_Write_Char@a,w
  3067     063E  39F0               	andlw	240
  3068     063F  00A1               	movwf	Lcd_Write_Char@y
  3069     0640                     l2156:
  3070                           
  3071                           ;../00-Librerie.X/lcd.c: 93:     PORTEbits.RE2 = 1;
  3072     0640  1509               	bsf	9,2	;volatile
  3073     0641                     l2158:
  3074                           
  3075                           ;../00-Librerie.X/lcd.c: 95:     Lcd_Port(y >> 4);
  3076     0641  0821               	movf	Lcd_Write_Char@y,w
  3077     0642  00F5               	movwf	??_Lcd_Write_Char
  3078     0643  3004               	movlw	4
  3079     0644                     u2495:
  3080     0644  1003               	clrc
  3081     0645  0CF5               	rrf	??_Lcd_Write_Char,f
  3082     0646  3EFF               	addlw	-1
  3083     0647  1D03               	skipz
  3084     0648  2E44               	goto	u2495
  3085     0649  0875               	movf	??_Lcd_Write_Char,w
  3086     064A  120A  118A  26B1  120A  118A  	fcall	_Lcd_Port
  3087     064F                     l2160:
  3088                           
  3089                           ;../00-Librerie.X/lcd.c: 96:     PORTEbits.RE1 = 1;
  3090     064F  1283               	bcf	3,5	;RP0=0, select bank0
  3091     0650  1303               	bcf	3,6	;RP1=0, select bank0
  3092     0651  1489               	bsf	9,1	;volatile
  3093     0652                     l2162:
  3094                           
  3095                           ;../00-Librerie.X/lcd.c: 97:     _delay((unsigned long)((4)*(20*1000000/4000000.0)));
  3096     0652  3006               	movlw	6
  3097     0653  00F5               	movwf	??_Lcd_Write_Char
  3098     0654                     u3007:
  3099     0654  0BF5               	decfsz	??_Lcd_Write_Char,f
  3100     0655  2E54               	goto	u3007
  3101     0656  0000               	nop
  3102     0657                     l2164:
  3103                           
  3104                           ;../00-Librerie.X/lcd.c: 98:     PORTEbits.RE1 = 0;
  3105     0657  1283               	bcf	3,5	;RP0=0, select bank0
  3106     0658  1303               	bcf	3,6	;RP1=0, select bank0
  3107     0659  1089               	bcf	9,1	;volatile
  3108     065A                     l2166:
  3109                           
  3110                           ;../00-Librerie.X/lcd.c: 99:     Lcd_Port(temp);
  3111     065A  0820               	movf	Lcd_Write_Char@temp,w
  3112     065B  120A  118A  26B1  120A  118A  	fcall	_Lcd_Port
  3113     0660                     l2168:
  3114                           
  3115                           ;../00-Librerie.X/lcd.c: 100:     PORTEbits.RE1 = 1;
  3116     0660  1283               	bcf	3,5	;RP0=0, select bank0
  3117     0661  1303               	bcf	3,6	;RP1=0, select bank0
  3118     0662  1489               	bsf	9,1	;volatile
  3119     0663                     l2170:
  3120                           
  3121                           ;../00-Librerie.X/lcd.c: 101:     _delay((unsigned long)((4)*(20*1000000/4000000.0)));
  3122     0663  3006               	movlw	6
  3123     0664  00F5               	movwf	??_Lcd_Write_Char
  3124     0665                     u3017:
  3125     0665  0BF5               	decfsz	??_Lcd_Write_Char,f
  3126     0666  2E65               	goto	u3017
  3127     0667  0000               	nop
  3128     0668                     l2172:
  3129                           
  3130                           ;../00-Librerie.X/lcd.c: 102:     PORTEbits.RE1 = 0;
  3131     0668  1283               	bcf	3,5	;RP0=0, select bank0
  3132     0669  1303               	bcf	3,6	;RP1=0, select bank0
  3133     066A  1089               	bcf	9,1	;volatile
  3134     066B                     l67:
  3135     066B  0008               	return
  3136     066C                     __end_of_Lcd_Write_Char:
  3137                           
  3138                           	psect	text12
  3139     044F                     __ptext12:	
  3140 ;; *************** function _Lcd_Set_Cursor *****************
  3141 ;; Defined at:
  3142 ;;		line 70 in file "../00-Librerie.X/lcd.c"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;  riga            1    wreg     unsigned char 
  3145 ;;  colonna         1    1[BANK0 ] unsigned char 
  3146 ;; Auto vars:     Size  Location     Type
  3147 ;;  riga            1    3[BANK0 ] unsigned char 
  3148 ;;  temp            1    6[BANK0 ] unsigned char 
  3149 ;;  y               1    5[BANK0 ] unsigned char 
  3150 ;;  z               1    4[BANK0 ] unsigned char 
  3151 ;; Return value:  Size  Location     Type
  3152 ;;                  1    wreg      void 
  3153 ;; Registers used:
  3154 ;;		wreg, status,2, status,0, pclath, cstack
  3155 ;; Tracked objects:
  3156 ;;		On entry : 0/0
  3157 ;;		On exit  : 0/0
  3158 ;;		Unchanged: 0/0
  3159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3160 ;;      Params:         0       1       0       0       0
  3161 ;;      Locals:         0       4       0       0       0
  3162 ;;      Temps:          0       1       0       0       0
  3163 ;;      Totals:         0       6       0       0       0
  3164 ;;Total ram usage:        6 bytes
  3165 ;; Hardware stack levels used: 1
  3166 ;; Hardware stack levels required when called: 3
  3167 ;; This function calls:
  3168 ;;		_Lcd_Cmd
  3169 ;; This function is called by:
  3170 ;;		_main
  3171 ;; This function uses a non-reentrant model
  3172 ;;
  3173                           
  3174     044F                     _Lcd_Set_Cursor:	
  3175                           ;psect for function _Lcd_Set_Cursor
  3176                           
  3177                           
  3178                           ;incstack = 0
  3179                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3180                           ;Lcd_Set_Cursor@riga stored from wreg
  3181     044F  1283               	bcf	3,5	;RP0=0, select bank0
  3182     0450  1303               	bcf	3,6	;RP1=0, select bank0
  3183     0451  00A3               	movwf	Lcd_Set_Cursor@riga
  3184     0452                     l2336:
  3185                           
  3186                           ;../00-Librerie.X/lcd.c: 70: void Lcd_Set_Cursor(char riga, char colonna);../00-Librerie
      +                          .X/lcd.c: 71: {;../00-Librerie.X/lcd.c: 72:     char temp, z, y;;../00-Librerie.X/lcd.c:
      +                           73:     if (riga == 0) {
  3187     0452  0823               	movf	Lcd_Set_Cursor@riga,w
  3188     0453  1D03               	btfss	3,2
  3189     0454  2C56               	goto	u2781
  3190     0455  2C57               	goto	u2780
  3191     0456                     u2781:
  3192     0456  2C76               	goto	l2346
  3193     0457                     u2780:
  3194     0457                     l2338:
  3195                           
  3196                           ;../00-Librerie.X/lcd.c: 74:         temp = 0x80 + colonna;
  3197     0457  0821               	movf	Lcd_Set_Cursor@colonna,w
  3198     0458  3E80               	addlw	128
  3199     0459  00A6               	movwf	Lcd_Set_Cursor@temp
  3200                           
  3201                           ;../00-Librerie.X/lcd.c: 75:         z = temp >> 4;
  3202     045A  0826               	movf	Lcd_Set_Cursor@temp,w
  3203     045B  00A2               	movwf	??_Lcd_Set_Cursor
  3204     045C  3004               	movlw	4
  3205     045D                     u2795:
  3206     045D  1003               	clrc
  3207     045E  0CA2               	rrf	??_Lcd_Set_Cursor,f
  3208     045F  3EFF               	addlw	-1
  3209     0460  1D03               	skipz
  3210     0461  2C5D               	goto	u2795
  3211     0462  0822               	movf	??_Lcd_Set_Cursor,w
  3212     0463  00A4               	movwf	Lcd_Set_Cursor@z
  3213     0464                     l2340:
  3214                           
  3215                           ;../00-Librerie.X/lcd.c: 76:         y = temp & 0x0F;
  3216     0464  0826               	movf	Lcd_Set_Cursor@temp,w
  3217     0465  390F               	andlw	15
  3218     0466  00A5               	movwf	Lcd_Set_Cursor@y
  3219     0467                     l2342:
  3220                           
  3221                           ;../00-Librerie.X/lcd.c: 77:         Lcd_Cmd(z);
  3222     0467  0824               	movf	Lcd_Set_Cursor@z,w
  3223     0468  120A  118A  266C  120A  118A  	fcall	_Lcd_Cmd
  3224     046D                     l2344:
  3225                           
  3226                           ;../00-Librerie.X/lcd.c: 78:         Lcd_Cmd(y);
  3227     046D  1283               	bcf	3,5	;RP0=0, select bank0
  3228     046E  1303               	bcf	3,6	;RP1=0, select bank0
  3229     046F  0825               	movf	Lcd_Set_Cursor@y,w
  3230     0470  120A  118A  266C  120A  118A  	fcall	_Lcd_Cmd
  3231                           
  3232                           ;../00-Librerie.X/lcd.c: 79:     } else if (riga >= 1) {
  3233     0475  2C99               	goto	l64
  3234     0476                     l2346:
  3235     0476  0823               	movf	Lcd_Set_Cursor@riga,w
  3236     0477  1903               	btfsc	3,2
  3237     0478  2C7A               	goto	u2801
  3238     0479  2C7B               	goto	u2800
  3239     047A                     u2801:
  3240     047A  2C99               	goto	l64
  3241     047B                     u2800:
  3242     047B                     l2348:
  3243                           
  3244                           ;../00-Librerie.X/lcd.c: 80:         temp = 0xC0 + colonna;
  3245     047B  0821               	movf	Lcd_Set_Cursor@colonna,w
  3246     047C  3EC0               	addlw	192
  3247     047D  00A6               	movwf	Lcd_Set_Cursor@temp
  3248                           
  3249                           ;../00-Librerie.X/lcd.c: 81:         z = temp >> 4;
  3250     047E  0826               	movf	Lcd_Set_Cursor@temp,w
  3251     047F  00A2               	movwf	??_Lcd_Set_Cursor
  3252     0480  3004               	movlw	4
  3253     0481                     u2815:
  3254     0481  1003               	clrc
  3255     0482  0CA2               	rrf	??_Lcd_Set_Cursor,f
  3256     0483  3EFF               	addlw	-1
  3257     0484  1D03               	skipz
  3258     0485  2C81               	goto	u2815
  3259     0486  0822               	movf	??_Lcd_Set_Cursor,w
  3260     0487  00A4               	movwf	Lcd_Set_Cursor@z
  3261     0488                     l2350:
  3262                           
  3263                           ;../00-Librerie.X/lcd.c: 82:         y = temp & 0x0F;
  3264     0488  0826               	movf	Lcd_Set_Cursor@temp,w
  3265     0489  390F               	andlw	15
  3266     048A  00A5               	movwf	Lcd_Set_Cursor@y
  3267     048B                     l2352:
  3268                           
  3269                           ;../00-Librerie.X/lcd.c: 83:         Lcd_Cmd(z);
  3270     048B  0824               	movf	Lcd_Set_Cursor@z,w
  3271     048C  120A  118A  266C  120A  118A  	fcall	_Lcd_Cmd
  3272     0491                     l2354:
  3273                           
  3274                           ;../00-Librerie.X/lcd.c: 84:         Lcd_Cmd(y);
  3275     0491  1283               	bcf	3,5	;RP0=0, select bank0
  3276     0492  1303               	bcf	3,6	;RP1=0, select bank0
  3277     0493  0825               	movf	Lcd_Set_Cursor@y,w
  3278     0494  120A  118A  266C  120A  118A  	fcall	_Lcd_Cmd
  3279     0499                     l64:
  3280     0499  0008               	return
  3281     049A                     __end_of_Lcd_Set_Cursor:
  3282                           
  3283                           	psect	text13
  3284     0378                     __ptext13:	
  3285 ;; *************** function _Lcd_Init *****************
  3286 ;; Defined at:
  3287 ;;		line 41 in file "../00-Librerie.X/lcd.c"
  3288 ;; Parameters:    Size  Location     Type
  3289 ;;		None
  3290 ;; Auto vars:     Size  Location     Type
  3291 ;;		None
  3292 ;; Return value:  Size  Location     Type
  3293 ;;                  1    wreg      void 
  3294 ;; Registers used:
  3295 ;;		wreg, status,2, status,0, pclath, cstack
  3296 ;; Tracked objects:
  3297 ;;		On entry : 0/0
  3298 ;;		On exit  : 0/0
  3299 ;;		Unchanged: 0/0
  3300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3301 ;;      Params:         0       0       0       0       0
  3302 ;;      Locals:         0       0       0       0       0
  3303 ;;      Temps:          0       2       0       0       0
  3304 ;;      Totals:         0       2       0       0       0
  3305 ;;Total ram usage:        2 bytes
  3306 ;; Hardware stack levels used: 1
  3307 ;; Hardware stack levels required when called: 3
  3308 ;; This function calls:
  3309 ;;		_Lcd_Cmd
  3310 ;;		_Lcd_Port
  3311 ;; This function is called by:
  3312 ;;		_main
  3313 ;; This function uses a non-reentrant model
  3314 ;;
  3315                           
  3316     0378                     _Lcd_Init:	
  3317                           ;psect for function _Lcd_Init
  3318                           
  3319     0378                     l2304:	
  3320                           ;incstack = 0
  3321                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3322                           
  3323                           
  3324                           ;../00-Librerie.X/lcd.c: 42:     TRISD &= ~0xff;
  3325     0378  1683               	bsf	3,5	;RP0=1, select bank1
  3326     0379  1303               	bcf	3,6	;RP1=0, select bank1
  3327     037A  0188               	clrf	8	;volatile
  3328     037B                     l2306:
  3329                           
  3330                           ;../00-Librerie.X/lcd.c: 43:     TRISE &= ~0x06;
  3331     037B  30F9               	movlw	249
  3332     037C  1283               	bcf	3,5	;RP0=0, select bank0
  3333     037D  1303               	bcf	3,6	;RP1=0, select bank0
  3334     037E  00A1               	movwf	??_Lcd_Init
  3335     037F  0821               	movf	??_Lcd_Init,w
  3336     0380  1683               	bsf	3,5	;RP0=1, select bank1
  3337     0381  1303               	bcf	3,6	;RP1=0, select bank1
  3338     0382  0589               	andwf	9,f	;volatile
  3339     0383                     l2308:
  3340                           
  3341                           ;../00-Librerie.X/lcd.c: 44:     Lcd_Port(0x00);
  3342     0383  3000               	movlw	0
  3343     0384  120A  118A  26B1  120A  118A  	fcall	_Lcd_Port
  3344     0389                     l2310:
  3345                           
  3346                           ;../00-Librerie.X/lcd.c: 45:     _delay((unsigned long)((20)*(20*1000000/4000.0)));
  3347     0389  3082               	movlw	130
  3348     038A  1283               	bcf	3,5	;RP0=0, select bank0
  3349     038B  1303               	bcf	3,6	;RP1=0, select bank0
  3350     038C  00A2               	movwf	??_Lcd_Init+1
  3351     038D  30DD               	movlw	221
  3352     038E  00A1               	movwf	??_Lcd_Init
  3353     038F                     u3027:
  3354     038F  0BA1               	decfsz	??_Lcd_Init,f
  3355     0390  2B8F               	goto	u3027
  3356     0391  0BA2               	decfsz	??_Lcd_Init+1,f
  3357     0392  2B8F               	goto	u3027
  3358     0393                     l2312:
  3359                           
  3360                           ;../00-Librerie.X/lcd.c: 46:     Lcd_Cmd(0x03);
  3361     0393  3003               	movlw	3
  3362     0394  120A  118A  266C  120A  118A  	fcall	_Lcd_Cmd
  3363     0399                     l2314:
  3364                           
  3365                           ;../00-Librerie.X/lcd.c: 47:     _delay((unsigned long)((5)*(20*1000000/4000.0)));
  3366     0399  3021               	movlw	33
  3367     039A  1283               	bcf	3,5	;RP0=0, select bank0
  3368     039B  1303               	bcf	3,6	;RP1=0, select bank0
  3369     039C  00A2               	movwf	??_Lcd_Init+1
  3370     039D  3075               	movlw	117
  3371     039E  00A1               	movwf	??_Lcd_Init
  3372     039F                     u3037:
  3373     039F  0BA1               	decfsz	??_Lcd_Init,f
  3374     03A0  2B9F               	goto	u3037
  3375     03A1  0BA2               	decfsz	??_Lcd_Init+1,f
  3376     03A2  2B9F               	goto	u3037
  3377     03A3  2BA4               	nop2
  3378     03A4                     l2316:
  3379                           
  3380                           ;../00-Librerie.X/lcd.c: 48:     Lcd_Cmd(0x03);
  3381     03A4  3003               	movlw	3
  3382     03A5  120A  118A  266C  120A  118A  	fcall	_Lcd_Cmd
  3383     03AA                     l2318:
  3384                           
  3385                           ;../00-Librerie.X/lcd.c: 49:     _delay((unsigned long)((10)*(20*1000000/4000.0)));
  3386     03AA  3041               	movlw	65
  3387     03AB  1283               	bcf	3,5	;RP0=0, select bank0
  3388     03AC  1303               	bcf	3,6	;RP1=0, select bank0
  3389     03AD  00A2               	movwf	??_Lcd_Init+1
  3390     03AE  30ED               	movlw	237
  3391     03AF  00A1               	movwf	??_Lcd_Init
  3392     03B0                     u3047:
  3393     03B0  0BA1               	decfsz	??_Lcd_Init,f
  3394     03B1  2BB0               	goto	u3047
  3395     03B2  0BA2               	decfsz	??_Lcd_Init+1,f
  3396     03B3  2BB0               	goto	u3047
  3397     03B4  2BB5               	nop2
  3398     03B5                     l2320:
  3399                           
  3400                           ;../00-Librerie.X/lcd.c: 50:     Lcd_Cmd(0x03);
  3401     03B5  3003               	movlw	3
  3402     03B6  120A  118A  266C  120A  118A  	fcall	_Lcd_Cmd
  3403     03BB                     l2322:
  3404                           
  3405                           ;../00-Librerie.X/lcd.c: 52:     Lcd_Cmd(0x02);
  3406     03BB  3002               	movlw	2
  3407     03BC  120A  118A  266C  120A  118A  	fcall	_Lcd_Cmd
  3408     03C1                     l2324:
  3409                           
  3410                           ;../00-Librerie.X/lcd.c: 54:     Lcd_Cmd(0x02);
  3411     03C1  3002               	movlw	2
  3412     03C2  120A  118A  266C  120A  118A  	fcall	_Lcd_Cmd
  3413     03C7                     l2326:
  3414                           
  3415                           ;../00-Librerie.X/lcd.c: 55:     Lcd_Cmd(0x08);
  3416     03C7  3008               	movlw	8
  3417     03C8  120A  118A  266C  120A  118A  	fcall	_Lcd_Cmd
  3418     03CD                     l2328:
  3419                           
  3420                           ;../00-Librerie.X/lcd.c: 57:     Lcd_Cmd(0x00);
  3421     03CD  3000               	movlw	0
  3422     03CE  120A  118A  266C  120A  118A  	fcall	_Lcd_Cmd
  3423     03D3                     l2330:
  3424                           
  3425                           ;../00-Librerie.X/lcd.c: 58:     Lcd_Cmd(0x0C);
  3426     03D3  300C               	movlw	12
  3427     03D4  120A  118A  266C  120A  118A  	fcall	_Lcd_Cmd
  3428     03D9                     l2332:
  3429                           
  3430                           ;../00-Librerie.X/lcd.c: 60:     Lcd_Cmd(0x00);
  3431     03D9  3000               	movlw	0
  3432     03DA  120A  118A  266C  120A  118A  	fcall	_Lcd_Cmd
  3433     03DF                     l2334:
  3434                           
  3435                           ;../00-Librerie.X/lcd.c: 61:     Lcd_Cmd(0x06);
  3436     03DF  3006               	movlw	6
  3437     03E0  120A  118A  266C  120A  118A  	fcall	_Lcd_Cmd
  3438     03E5                     l55:
  3439     03E5  0008               	return
  3440     03E6                     __end_of_Lcd_Init:
  3441                           
  3442                           	psect	text14
  3443     066C                     __ptext14:	
  3444 ;; *************** function _Lcd_Cmd *****************
  3445 ;; Defined at:
  3446 ;;		line 29 in file "../00-Librerie.X/lcd.c"
  3447 ;; Parameters:    Size  Location     Type
  3448 ;;  a               1    wreg     unsigned char 
  3449 ;; Auto vars:     Size  Location     Type
  3450 ;;  a               1    0[BANK0 ] unsigned char 
  3451 ;; Return value:  Size  Location     Type
  3452 ;;                  1    wreg      void 
  3453 ;; Registers used:
  3454 ;;		wreg, status,2, status,0, pclath, cstack
  3455 ;; Tracked objects:
  3456 ;;		On entry : 0/0
  3457 ;;		On exit  : 0/0
  3458 ;;		Unchanged: 0/0
  3459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3460 ;;      Params:         0       0       0       0       0
  3461 ;;      Locals:         0       1       0       0       0
  3462 ;;      Temps:          2       0       0       0       0
  3463 ;;      Totals:         2       1       0       0       0
  3464 ;;Total ram usage:        3 bytes
  3465 ;; Hardware stack levels used: 1
  3466 ;; Hardware stack levels required when called: 2
  3467 ;; This function calls:
  3468 ;;		_Lcd_Port
  3469 ;; This function is called by:
  3470 ;;		_Lcd_Init
  3471 ;;		_Lcd_Set_Cursor
  3472 ;;		_Lcd_Clear
  3473 ;;		_Lcd_Shift_Right
  3474 ;;		_Lcd_Shift_Left
  3475 ;; This function uses a non-reentrant model
  3476 ;;
  3477                           
  3478     066C                     _Lcd_Cmd:	
  3479                           ;psect for function _Lcd_Cmd
  3480                           
  3481                           
  3482                           ;incstack = 0
  3483                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3484                           ;Lcd_Cmd@a stored from wreg
  3485     066C  1283               	bcf	3,5	;RP0=0, select bank0
  3486     066D  1303               	bcf	3,6	;RP1=0, select bank0
  3487     066E  00A0               	movwf	Lcd_Cmd@a
  3488     066F                     l2182:
  3489                           
  3490                           ;../00-Librerie.X/lcd.c: 30:     TRISD &= ~0xff;
  3491     066F  1683               	bsf	3,5	;RP0=1, select bank1
  3492     0670  1303               	bcf	3,6	;RP1=0, select bank1
  3493     0671  0188               	clrf	8	;volatile
  3494     0672                     l2184:
  3495                           
  3496                           ;../00-Librerie.X/lcd.c: 31:     TRISE &= ~0x06;
  3497     0672  30F9               	movlw	249
  3498     0673  00F5               	movwf	??_Lcd_Cmd
  3499     0674  0875               	movf	??_Lcd_Cmd,w
  3500     0675  0589               	andwf	9,f	;volatile
  3501     0676                     l2186:
  3502                           
  3503                           ;../00-Librerie.X/lcd.c: 34:     PORTEbits.RE2 = 0;
  3504     0676  1283               	bcf	3,5	;RP0=0, select bank0
  3505     0677  1303               	bcf	3,6	;RP1=0, select bank0
  3506     0678  1109               	bcf	9,2	;volatile
  3507     0679                     l2188:
  3508                           
  3509                           ;../00-Librerie.X/lcd.c: 35:     Lcd_Port(a);
  3510     0679  0820               	movf	Lcd_Cmd@a,w
  3511     067A  120A  118A  26B1  120A  118A  	fcall	_Lcd_Port
  3512     067F                     l2190:
  3513                           
  3514                           ;../00-Librerie.X/lcd.c: 36:     PORTEbits.RE1 = 1;
  3515     067F  1283               	bcf	3,5	;RP0=0, select bank0
  3516     0680  1303               	bcf	3,6	;RP1=0, select bank0
  3517     0681  1489               	bsf	9,1	;volatile
  3518     0682                     l2192:
  3519                           
  3520                           ;../00-Librerie.X/lcd.c: 37:     _delay((unsigned long)((4)*(20*1000000/4000.0)));
  3521     0682  301A               	movlw	26
  3522     0683  00F6               	movwf	??_Lcd_Cmd+1
  3523     0684  30F8               	movlw	248
  3524     0685  00F5               	movwf	??_Lcd_Cmd
  3525     0686                     u3057:
  3526     0686  0BF5               	decfsz	??_Lcd_Cmd,f
  3527     0687  2E86               	goto	u3057
  3528     0688  0BF6               	decfsz	??_Lcd_Cmd+1,f
  3529     0689  2E86               	goto	u3057
  3530     068A  0000               	nop
  3531     068B                     l2194:
  3532                           
  3533                           ;../00-Librerie.X/lcd.c: 38:     PORTEbits.RE1 = 0;
  3534     068B  1283               	bcf	3,5	;RP0=0, select bank0
  3535     068C  1303               	bcf	3,6	;RP1=0, select bank0
  3536     068D  1089               	bcf	9,1	;volatile
  3537     068E                     l52:
  3538     068E  0008               	return
  3539     068F                     __end_of_Lcd_Cmd:
  3540                           
  3541                           	psect	text15
  3542     06B1                     __ptext15:	
  3543 ;; *************** function _Lcd_Port *****************
  3544 ;; Defined at:
  3545 ;;		line 14 in file "../00-Librerie.X/lcd.c"
  3546 ;; Parameters:    Size  Location     Type
  3547 ;;  a               1    wreg     unsigned char 
  3548 ;; Auto vars:     Size  Location     Type
  3549 ;;  a               1    4[COMMON] unsigned char 
  3550 ;; Return value:  Size  Location     Type
  3551 ;;                  1    wreg      void 
  3552 ;; Registers used:
  3553 ;;		wreg
  3554 ;; Tracked objects:
  3555 ;;		On entry : 0/0
  3556 ;;		On exit  : 0/0
  3557 ;;		Unchanged: 0/0
  3558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3559 ;;      Params:         0       0       0       0       0
  3560 ;;      Locals:         1       0       0       0       0
  3561 ;;      Temps:          0       0       0       0       0
  3562 ;;      Totals:         1       0       0       0       0
  3563 ;;Total ram usage:        1 bytes
  3564 ;; Hardware stack levels used: 1
  3565 ;; Hardware stack levels required when called: 1
  3566 ;; This function calls:
  3567 ;;		Nothing
  3568 ;; This function is called by:
  3569 ;;		_Lcd_Cmd
  3570 ;;		_Lcd_Init
  3571 ;;		_Lcd_Write_Char
  3572 ;; This function uses a non-reentrant model
  3573 ;;
  3574                           
  3575     06B1                     _Lcd_Port:	
  3576                           ;psect for function _Lcd_Port
  3577                           
  3578                           
  3579                           ;incstack = 0
  3580                           ; Regs used in _Lcd_Port: [wreg]
  3581                           ;Lcd_Port@a stored from wreg
  3582     06B1  00F4               	movwf	Lcd_Port@a
  3583     06B2                     l2144:
  3584                           
  3585                           ;../00-Librerie.X/lcd.c: 16:     if (a & 1) PORTDbits.RD4 = 1;
  3586     06B2  1C74               	btfss	Lcd_Port@a,0
  3587     06B3  2EB5               	goto	u2451
  3588     06B4  2EB6               	goto	u2450
  3589     06B5                     u2451:
  3590     06B5  2EBA               	goto	l41
  3591     06B6                     u2450:
  3592     06B6                     l2146:
  3593     06B6  1283               	bcf	3,5	;RP0=0, select bank0
  3594     06B7  1303               	bcf	3,6	;RP1=0, select bank0
  3595     06B8  1608               	bsf	8,4	;volatile
  3596     06B9  2EBD               	goto	l42
  3597     06BA                     l41:	
  3598                           ;../00-Librerie.X/lcd.c: 17:     else PORTDbits.RD4 = 0;
  3599                           
  3600     06BA  1283               	bcf	3,5	;RP0=0, select bank0
  3601     06BB  1303               	bcf	3,6	;RP1=0, select bank0
  3602     06BC  1208               	bcf	8,4	;volatile
  3603     06BD                     l42:
  3604                           
  3605                           ;../00-Librerie.X/lcd.c: 19:     if (a & 2) PORTDbits.RD5 = 1;
  3606     06BD  1CF4               	btfss	Lcd_Port@a,1
  3607     06BE  2EC0               	goto	u2461
  3608     06BF  2EC1               	goto	u2460
  3609     06C0                     u2461:
  3610     06C0  2EC3               	goto	l43
  3611     06C1                     u2460:
  3612     06C1                     l2148:
  3613     06C1  1688               	bsf	8,5	;volatile
  3614     06C2  2EC4               	goto	l44
  3615     06C3                     l43:	
  3616                           ;../00-Librerie.X/lcd.c: 20:     else PORTDbits.RD5 = 0;
  3617                           
  3618     06C3  1288               	bcf	8,5	;volatile
  3619     06C4                     l44:
  3620                           
  3621                           ;../00-Librerie.X/lcd.c: 22:     if (a & 4) PORTDbits.RD6 = 1;
  3622     06C4  1D74               	btfss	Lcd_Port@a,2
  3623     06C5  2EC7               	goto	u2471
  3624     06C6  2EC8               	goto	u2470
  3625     06C7                     u2471:
  3626     06C7  2ECA               	goto	l45
  3627     06C8                     u2470:
  3628     06C8                     l2150:
  3629     06C8  1708               	bsf	8,6	;volatile
  3630     06C9  2ECB               	goto	l46
  3631     06CA                     l45:	
  3632                           ;../00-Librerie.X/lcd.c: 23:     else PORTDbits.RD6 = 0;
  3633                           
  3634     06CA  1308               	bcf	8,6	;volatile
  3635     06CB                     l46:
  3636                           
  3637                           ;../00-Librerie.X/lcd.c: 25:     if (a & 8) PORTDbits.RD7 = 1;
  3638     06CB  1DF4               	btfss	Lcd_Port@a,3
  3639     06CC  2ECE               	goto	u2481
  3640     06CD  2ECF               	goto	u2480
  3641     06CE                     u2481:
  3642     06CE  2ED1               	goto	l47
  3643     06CF                     u2480:
  3644     06CF                     l2152:
  3645     06CF  1788               	bsf	8,7	;volatile
  3646     06D0  2ED2               	goto	l49
  3647     06D1                     l47:	
  3648                           ;../00-Librerie.X/lcd.c: 26:     else PORTDbits.RD7 = 0;
  3649                           
  3650     06D1  1388               	bcf	8,7	;volatile
  3651     06D2                     l49:
  3652     06D2  0008               	return
  3653     06D3                     __end_of_Lcd_Port:
  3654                           
  3655                           	psect	text16
  3656     0526                     __ptext16:	
  3657 ;; *************** function _ISR *****************
  3658 ;; Defined at:
  3659 ;;		line 56 in file "main.c"
  3660 ;; Parameters:    Size  Location     Type
  3661 ;;		None
  3662 ;; Auto vars:     Size  Location     Type
  3663 ;;		None
  3664 ;; Return value:  Size  Location     Type
  3665 ;;                  1    wreg      void 
  3666 ;; Registers used:
  3667 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3668 ;; Tracked objects:
  3669 ;;		On entry : 0/0
  3670 ;;		On exit  : 0/0
  3671 ;;		Unchanged: 0/0
  3672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3673 ;;      Params:         0       0       0       0       0
  3674 ;;      Locals:         0       0       0       0       0
  3675 ;;      Temps:          4       0       0       0       0
  3676 ;;      Totals:         4       0       0       0       0
  3677 ;;Total ram usage:        4 bytes
  3678 ;; Hardware stack levels used: 1
  3679 ;; This function calls:
  3680 ;;		Nothing
  3681 ;; This function is called by:
  3682 ;;		Interrupt level 1
  3683 ;; This function uses a non-reentrant model
  3684 ;;
  3685                           
  3686     0526                     _ISR:	
  3687                           ;psect for function _ISR
  3688                           
  3689     0526                     i1l1938:
  3690                           
  3691                           ;main.c: 57:     if (RCIF) {
  3692     0526  1283               	bcf	3,5	;RP0=0, select bank0
  3693     0527  1303               	bcf	3,6	;RP1=0, select bank0
  3694     0528  1E8C               	btfss	12,5	;volatile
  3695     0529  2D2B               	goto	u195_21
  3696     052A  2D2C               	goto	u195_20
  3697     052B                     u195_21:
  3698     052B  2D3D               	goto	i1l1950
  3699     052C                     u195_20:
  3700     052C                     i1l1940:
  3701                           
  3702                           ;main.c: 58:         dato[i++] = RCREG;
  3703     052C  086C               	movf	_i,w
  3704     052D  3EA0               	addlw	(low (_dato| 0))& (0+255)
  3705     052E  0084               	movwf	4
  3706     052F  081A               	movf	26,w	;volatile
  3707     0530  1383               	bcf	3,7	;select IRP bank1
  3708     0531  0080               	movwf	0
  3709     0532                     i1l1942:
  3710     0532  3001               	movlw	1
  3711     0533  00F0               	movwf	??_ISR
  3712     0534  0870               	movf	??_ISR,w
  3713     0535  07EC               	addwf	_i,f
  3714     0536                     i1l1944:
  3715                           
  3716                           ;main.c: 59:         dato[i] = '\0';
  3717     0536  086C               	movf	_i,w
  3718     0537  3EA0               	addlw	(low (_dato| 0))& (0+255)
  3719     0538  0084               	movwf	4
  3720     0539  0180               	clrf	0
  3721     053A                     i1l1946:
  3722                           
  3723                           ;main.c: 60:         received = 1;
  3724     053A  01EF               	clrf	_received
  3725     053B  0AEF               	incf	_received,f
  3726     053C                     i1l1948:
  3727                           
  3728                           ;main.c: 61:         RCIF = 0;
  3729     053C  128C               	bcf	12,5	;volatile
  3730     053D                     i1l1950:
  3731                           
  3732                           ;main.c: 63:     if (T0IF) {
  3733     053D  1D0B               	btfss	11,2	;volatile
  3734     053E  2D40               	goto	u196_21
  3735     053F  2D41               	goto	u196_20
  3736     0540                     u196_21:
  3737     0540  2D62               	goto	i1l234
  3738     0541                     u196_20:
  3739     0541                     i1l1952:
  3740                           
  3741                           ;main.c: 64:         static unsigned int interruptCounter;;main.c: 65:         interrupt
      +                          Counter++;
  3742     0541  3001               	movlw	1
  3743     0542  1683               	bsf	3,5	;RP0=1, select bank1
  3744     0543  1303               	bcf	3,6	;RP1=0, select bank1
  3745     0544  07B4               	addwf	ISR@interruptCounter^(0+128),f
  3746     0545  1803               	skipnc
  3747     0546  0AB5               	incf	(ISR@interruptCounter+1)^(0+128),f
  3748     0547  3000               	movlw	0
  3749     0548  07B5               	addwf	(ISR@interruptCounter+1)^(0+128),f
  3750     0549                     i1l1954:
  3751                           
  3752                           ;main.c: 66:         T0IF = 0;
  3753     0549  110B               	bcf	11,2	;volatile
  3754                           
  3755                           ;main.c: 67:         if (interruptCounter > 625) {
  3756     054A  3002               	movlw	2
  3757     054B  0235               	subwf	(ISR@interruptCounter+1)^(0+128),w
  3758     054C  3072               	movlw	114
  3759     054D  1903               	skipnz
  3760     054E  0234               	subwf	ISR@interruptCounter^(0+128),w
  3761     054F  1C03               	skipc
  3762     0550  2D52               	goto	u197_21
  3763     0551  2D53               	goto	u197_20
  3764     0552                     u197_21:
  3765     0552  2D5F               	goto	i1l1962
  3766     0553                     u197_20:
  3767     0553                     i1l1956:
  3768                           
  3769                           ;main.c: 68:             Counter++;
  3770     0553  3001               	movlw	1
  3771     0554  07F7               	addwf	_Counter,f
  3772     0555  1803               	skipnc
  3773     0556  0AF8               	incf	_Counter+1,f
  3774     0557  3000               	movlw	0
  3775     0558  07F8               	addwf	_Counter+1,f
  3776     0559                     i1l1958:
  3777                           
  3778                           ;main.c: 69:             interruptCounter = 0;
  3779     0559  01B4               	clrf	ISR@interruptCounter^(0+128)
  3780     055A  01B5               	clrf	(ISR@interruptCounter+1)^(0+128)
  3781     055B                     i1l1960:
  3782                           
  3783                           ;main.c: 70:             counterFinished = 1;
  3784     055B  1283               	bcf	3,5	;RP0=0, select bank0
  3785     055C  1303               	bcf	3,6	;RP1=0, select bank0
  3786     055D  01EE               	clrf	_counterFinished
  3787     055E  0AEE               	incf	_counterFinished,f
  3788     055F                     i1l1962:
  3789                           
  3790                           ;main.c: 73:         TMR0 = 131;
  3791     055F  3083               	movlw	131
  3792     0560  1283               	bcf	3,5	;RP0=0, select bank0
  3793     0561  0081               	movwf	1	;volatile
  3794     0562                     i1l234:
  3795     0562  0873               	movf	??_ISR+3,w
  3796     0563  008A               	movwf	10
  3797     0564  0872               	movf	??_ISR+2,w
  3798     0565  0084               	movwf	4
  3799     0566  0E71               	swapf	??_ISR+1,w
  3800     0567  0083               	movwf	3
  3801     0568  0EFE               	swapf	btemp,f
  3802     0569  0E7E               	swapf	btemp,w
  3803     056A  0009               	retfie
  3804     056B                     __end_of_ISR:
  3805     007E                     btemp	set	126	;btemp
  3806     007E                     wtemp0	set	126
  3807                           
  3808                           	psect	intentry
  3809     0004                     __pintentry:	
  3810                           ;incstack = 0
  3811                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0]
  3812                           
  3813     0004                     interrupt_function:
  3814     007E                     saved_w	set	btemp
  3815     0004  00FE               	movwf	btemp
  3816     0005  0E03               	swapf	3,w
  3817     0006  00F1               	movwf	??_ISR+1
  3818     0007  0804               	movf	4,w
  3819     0008  00F2               	movwf	??_ISR+2
  3820     0009  080A               	movf	10,w
  3821     000A  00F3               	movwf	??_ISR+3
  3822     000B  120A  118A  2D26   	ljmp	_ISR
  3823                           
  3824                           	psect	idloc
  3825                           
  3826                           ;Config register IDLOC0 @ 0x2000
  3827                           ;	unspecified, using default values
  3828     2000                     	org	8192
  3829     2000  3FFF               	dw	16383
  3830                           
  3831                           ;Config register IDLOC1 @ 0x2001
  3832                           ;	unspecified, using default values
  3833     2001                     	org	8193
  3834     2001  3FFF               	dw	16383
  3835                           
  3836                           ;Config register IDLOC2 @ 0x2002
  3837                           ;	unspecified, using default values
  3838     2002                     	org	8194
  3839     2002  3FFF               	dw	16383
  3840                           
  3841                           ;Config register IDLOC3 @ 0x2003
  3842                           ;	unspecified, using default values
  3843     2003                     	org	8195
  3844     2003  3FFF               	dw	16383
  3845                           
  3846                           	psect	config
  3847                           
  3848                           ;Config register CONFIG @ 0x2007
  3849                           ;	Oscillator Selection bits
  3850                           ;	FOSC = HS, HS oscillator
  3851                           ;	Watchdog Timer Enable bit
  3852                           ;	WDTE = OFF, WDT disabled
  3853                           ;	Power-up Timer Enable bit
  3854                           ;	PWRTE = ON, PWRT enabled
  3855                           ;	Brown-out Reset Enable bit
  3856                           ;	BOREN = ON, BOR enabled
  3857                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3858                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  3859                           ;	Data EEPROM Memory Code Protection bit
  3860                           ;	CPD = OFF, Data EEPROM code protection off
  3861                           ;	Flash Program Memory Write Enable bits
  3862                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  3863                           ;	In-Circuit Debugger Mode bit
  3864                           ;	DEBUG = 0x1, unprogrammed default
  3865                           ;	Flash Program Memory Code Protection bit
  3866                           ;	CP = OFF, Code protection off
  3867     2007                     	org	8199
  3868     2007  3FF2               	dw	16370

Data Sizes:
    Strings     17
    Constant    22
    Data        0
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     72      80
    BANK1            80      1      23
    BANK3            96     59      59
    BANK2            96      0       0

Pointer List with Targets:

    UART_TxString@str	PTR const unsigned char  size(1) Largest target is 50
		 -> UART_TxInt@buffer(BANK0[50]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 50
		 -> STR_1(CODE[17]), Lcd_Write_Int@buffer(BANK3[50]), 


Critical Paths under _main in COMMON

    _UART_init->___aldiv
    _UART_TxInt->_UART_TxString
    _UART_TxString->_UART_TxChar
    _Lcd_Write_Int->___lwmod
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_UART_TxInt
    _UART_init->___aldiv
    _UART_TxInt->___awdiv
    _Lcd_Write_Int->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_Lcd_Write_Int

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    9862
                                              0 BANK1      1     1      0
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                      _Lcd_Write_Int
                   _Lcd_Write_String
                         _UART_TxInt
                          _UART_init
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            8     4      4     573
                                             14 BANK0      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              4 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _UART_TxInt                                          64    62      2    3460
                                              8 BANK0     64    62      2
                      _UART_TxString
                            ___awdiv
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) _UART_TxString                                        3     3      0     197
                                              6 COMMON     1     1      0
                                              0 BANK0      2     2      0
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (3) _UART_TxChar                                          2     2      0      31
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_Int                                       64    62      2    3827
                                             10 BANK0      5     3      2
                                              0 BANK3     59    59      0
                   _Lcd_Write_String
                            ___awdiv
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     592
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     601
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     564
                                              3 BANK0      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     254
                                              5 COMMON     1     1      0
                                              0 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     905
                                              1 BANK0      6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                              1 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     155
                                              5 COMMON     2     2      0
                                              0 BANK0      1     1      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_Int
     _Lcd_Write_String
       _Lcd_Write_Char
     ___awdiv
     ___lwdiv
     ___lwmod
   _Lcd_Write_String
   _UART_TxInt
     _UART_TxString
       _UART_TxChar
     ___awdiv
     ___lwdiv
     ___lwmod
   _UART_init
     ___aldiv

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      AC       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     48      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      1      17       7       28.7%
BITBANK3            60      0       0       8        0.0%
BANK3               60     3B      3B       9       61.5%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      AC      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Jan 26 10:18:12 2023

                                   _i 006C                                     pc 0002  
                                  l41 06BA                                    l42 06BD  
                                  l43 06C3                                    l44 06C4  
                                  l52 068E                                    l45 06CA  
                                  l46 06CB                                    l47 06D1  
                                  l55 03E5                                    l64 0499  
                                  l49 06D2                                    l73 0525  
                                  l67 066B                                    l94 016D  
__end_ofSevenSeg_Write@displayPattern 0626          SevenSeg_Write@displayPattern 061C  
                        ___awdiv@sign 0025                                    fsr 0004  
                                 l151 06DB                                   l160 06B0  
                                 l154 06E6                                   l218 0307  
                                 l148 05A7                                   l175 024B  
                                 l602 05E3                                   l473 044E  
                                 l385 0260                                   l395 02E8  
                                 l592 04DF                                   _ISR 0526  
                                 u920 0253                                   u921 0252  
                                 u930 0264                                   u931 0263  
                                 u940 0283                                   u941 0282  
                                 u960 0297                                   u961 0296  
                                 u955 0288                                   u980 02B2  
                                 u981 02B1                                   u975 0299  
                                 u985 02AE                                   u995 02C2  
                                 fsr0 0004                                   indf 0000  
                                ?_ISR 0070                                  l2200 0501  
                                l1400 026F                                  l2202 0509  
                                l2210 06A5                                  l1410 0293  
                                l1402 0273                                  l2220 03F4  
                                l2212 03E6                                  l2300 05DF  
                                l2204 0692                                  l1420 02C1  
                                l1412 0297                                  l1404 027B  
                                l2150 06C8                                  l2310 0389  
                                l2230 0409                                  l2222 03F8  
                                l2214 03E9                                  l2206 0694  
                                l1422 02CA                                  l1414 02A0  
                                l1406 0283                                  l2152 06CF  
                                l2144 06B2                                  l2320 03B5  
                                l2312 0393                                  l2304 0378  
                                l2160 064F                                  l2240 042C  
                                l2232 040C                                  l2224 03FD  
                                l2216 03ED                                  l2208 069F  
                                l1416 02B2                                  l1408 0286  
                                l1424 02D0                                  l2400 056B  
                                l2146 06B6                                  l2330 03D3  
                                l2322 03BB                                  l2314 0399  
                                l2306 037B                                  l2170 0663  
                                l2162 0652                                  l2154 063A  
                                l2250 0445                                  l2242 0432  
                                l2234 0413                                  l2226 0401  
                                l2218 03F2                                  l1426 02D5  
                                l1418 02C0                                  l2410 05A6  
                                l2402 0573                                  l2148 06C1  
                                l2332 03D9                                  l2324 03C1  
                                l2316 03A4                                  l2308 0383  
                                l2340 0464                                  l2172 0668  
                                l2164 0657                                  l2156 0640  
                                l2252 044A                                  l2244 0433  
                                l2236 0417                                  l2228 0403  
                                l2260 04A4                                  l2180 06E4  
                                l2420 0182                                  l2412 016E  
                                l1428 02E0                                  l2404 0577  
                                l2190 067F                                  l2182 066F  
                                l2334 03DF                                  l2326 03C7  
                                l2318 03AA                                  l2350 0488  
                                l2342 0467                                  l2166 065A  
                                l2158 0641                                  l2246 043A  
                                l2238 041B                                  l2270 04C7  
                                l2262 04A7                                  l2174 06D4  
                                l2430 01C2                                  l2422 0187  
                                l2414 0174                                  l2406 05A4  
                                l2192 0682                                  l2184 0672  
                                l2328 03CD                                  l2352 048B  
                                l2344 046D                                  l2336 0452  
                                l2168 0660                                  l2248 0440  
                                l2272 04CD                                  l2264 04AE  
                                l2256 049A                                  l2360 0037  
                                l2176 06DA                                  l2440 01DE  
                                l2432 01C8                                  l2424 0193  
                                l2416 0176                                  l1392 024C  
                                l2408 05A5                                  l2194 068B  
                                l2186 0676                                  l2354 0491  
                                l2338 0457                                  l2346 0476  
                                l2274 04CE                                  l2266 04B2  
                                l2258 049E                                  l2290 05BE  
                                l2282 05A8                                  l2370 0080  
                                l2362 003E                                  l2178 06E0  
                                l2450 0242                                  l2442 01E1  
                                l2434 01CD                                  l2426 01A9  
                                l2418 017D                                  l1394 024F  
                                l2188 0679                                  l2348 047B  
                                l2196 04E0                                  l2276 04D5  
                                l2268 04B6                                  l2292 05C2  
                                l2284 05B0                                  l2380 00BC  
                                l2372 0088                                  l2364 0043  
                                l2356 0029                                  l2452 0244  
                                l2444 0217                                  l2436 01D3  
                                l2428 01AF                                  l1396 0253  
                                l2198 04E5                                  l2278 04DB  
                                l2294 05CC                                  l2286 05B3  
                                l2390 012C                                  l2382 00C2  
                                l2374 00AB                                  l2366 0048  
                                l2358 0035                                  l2454 0245  
                                l2446 021D                                  l2438 01D9  
                                l1398 0264                                  l2470 0316  
                                l2462 02E9                                  l2296 05D2  
                                l2288 05BA                                  l2392 0157  
                                l2384 00C7                                  l2376 00B1  
                                l2368 0060                                  l2448 023A  
                                l2480 033F                                  l2472 031E  
                                l2464 02F3                                  l2298 05D9  
                                l2394 015F                                  l2386 00CA  
                                l2378 00B6                                  l2490 0354  
                                l2474 0324                                  l2482 0343  
                                l2466 0302                                  l2396 0161  
                                l2388 0124                                  l2492 035B  
                                l2484 034B                                  l2476 032B  
                                l2468 030E                                  l2398 0162  
                                l2494 0366                                  l2486 034E  
                                l2478 0336                                  l2496 0371  
                                l2488 034F                                  STR_1 0626  
                                u1000 02D0                                  _T0IF 005A  
                                u1001 02CF                                  u1010 02D5  
                                u1011 02D4                                  u3007 0654  
                                u3017 0665                                  u3027 038F  
                                u2500 06E0                                  u3037 039F  
                                u2501 06DF                                  u2510 04EF  
                                u3047 03B0                                  u2520 0513  
                                u3057 0686                                  u2450 06B6  
                                u2530 0525                                  u2610 042C  
                                u2451 06B5                                  u2531 0524  
                                u2611 042B                                  u2460 06C1  
                                u2540 06B0                                  u2461 06C0  
                                u2605 041C                                  u2541 06AF  
                                u2470 06C8                                  u2630 0440  
                                u2550 03ED                                  u2710 04DB  
                                u2471 06C7                                  u2631 043F  
                                u2615 0428                                  u2551 03EC  
                                u2711 04DA                                  _PIE1 008C  
                                u2480 06CF                                  u2800 047B  
                                u2640 0445                                  u2560 03F8  
                                u2720 05B0                                  u2481 06CE  
                                u2801 047A                                  u2641 0444  
                                u2625 0434                                  u2561 03F7  
                                u2705 04CF                                  u2721 05AF  
                                u2570 0409                                  u2650 04A4  
                                u2571 0408                                  u2651 04A3  
                                u2740 05C2                                  u2820 003C  
                                u2900 017B                                  u2741 05C1  
                                u2821 003A                                  u2901 0179  
                                u2590 041B                                  u2670 04B6  
                                u2750 05CC                                  u2830 003D  
                                u2910 017C                                  u2815 0481  
                                u2495 0644                                  u2591 041A  
                                u2671 04B5                                  u2751 05CB  
                                u2735 05B4                                  u2840 0043  
                                u2920 0182                                  u2585 040D  
                                u2665 04A8                                  u2841 0042  
                                u2921 0181                                  u2690 04C7  
                                u2770 05DF                                  u2850 00B1  
                                u2930 01C8                                  u2691 04C6  
                                u2771 05DE                                  u2755 05C8  
                                u2851 00B0                                  u2931 01C7  
                                u2780 0457                                  u2860 00B6  
                                u2940 01CD                                  u2781 0456  
                                u2685 04B7                                  u2765 05D3  
                                u2861 00B5                                  u2941 01CC  
                                u2870 0157                                  u2950 023A  
                                u2695 04C3                                  u2871 0156  
                                u2951 0239                                  u2880 015F  
                                u2960 0242                                  u2881 015E  
                                u2961 0241                                  u2890 0585  
                                u2970 030E                                  u2795 045D  
                                u2875 0153                                  u2955 0236  
                                u2971 030D                                  u2980 0324  
                                _RCIF 0065                                  u2981 0323  
                                u2990 0354                                  u2895 0580  
                                u2991 0353                                  _PIR1 000C  
                                _TMR0 0001                     ?_Lcd_Write_String 0023  
                                _dato 00A0                                  _main 02E9  
                                btemp 007E                                  start 000E  
                  ??_Lcd_Write_String 0025                       __end_of_Lcd_Cmd 068F  
                               ??_ISR 0070                       __end_of___aldiv 02E9  
                               ?_main 0070                       __end_of___awdiv 044F  
                     ___awdiv@divisor 0020                       __end_of___lwdiv 04E0  
                               i1l234 0562                       __end_of___lwmod 05E4  
                     ___awdiv@counter 0024                                 _RCREG 001A  
                               _RCSTA 0018                                 _SPBRG 0099  
                               _PORTB 0006                                 _PORTD 0008  
                               _TRISA 0085                                 _TRISB 0086  
                               _TRISC 0087                                 _TRISD 0088  
                               _TRISE 0089                                 _TXREG 0019  
                               _TXSTA 0098                           ?_UART_TxInt 0028  
                               pclath 000A                                 status 0003  
                               wtemp0 007E                      __end_of_Lcd_Init 03E6  
                    __end_of_Lcd_Port 06D3                       __initialization 0011  
                        __end_of_main 0378          pid_controller@previous_error 00B0  
                              ??_main 00B6                                _ADCON0 001F  
                              _ADCON1 009F                                _ADRESH 001E  
                              _ADRESL 009E                      ___awdiv@dividend 0022  
                              i1l1940 052C                                i1l1942 0532  
                              i1l1950 053D                                i1l1960 055B  
                              i1l1952 0541                                i1l1944 0536  
                              i1l1962 055F                                i1l1954 0549  
                              i1l1946 053A                                i1l1938 0526  
                              i1l1956 0553                                i1l1948 053C  
                              i1l1958 0559                                _INTCON 000B  
                              u195_20 052C                                u195_21 052B  
                              u196_20 0541                                u196_21 0540  
                              u197_20 0553                                u197_21 0552  
                           ??_Lcd_Cmd 0075                          ?_UART_TxChar 0070  
                           ??___aldiv 0074                     __end_of_UART_init 05A8  
                           ??___awdiv 0074                             ??___lwdiv 0074  
              pid_controller@integral 0068                             ??___lwmod 0074  
                              _keypad 0610                      ___awdiv@quotient 0026  
               __end_of_Lcd_Write_Int 016E                                saved_w 007E  
                    Lcd_Write_Int@val 002A                       Lcd_Set_Cursor@y 0025  
                     Lcd_Set_Cursor@z 0024               __end_of__initialization 0025  
               __end_of_UART_TxString 06B1                        __pcstackCOMMON 0070  
                 ISR@interruptCounter 00B4                        _Lcd_Set_Cursor 044F  
                           ?_Lcd_Init 0070                             ?_Lcd_Port 0070  
                      Lcd_Write_Int@i 01C9                        Lcd_Write_Int@n 01C5  
                      Lcd_Write_Int@t 01C7                            __pbssBANK0 0068  
                          __pbssBANK1 00A0                            __pmaintext 02E9  
                          __pintentry 0004                __end_of_Lcd_Set_Cursor 049A  
                        ??_UART_TxInt 002A                            ??_Lcd_Init 0021  
                          ??_Lcd_Port 0074                            __stringtab 0600  
                      _Lcd_Write_Char 0637                               _Lcd_Cmd 066C  
                             _Counter 0077                               ___aldiv 024C  
                  __end_of_UART_TxInt 024C                               ___awdiv 03E6  
                             ___lwdiv 049A                               ___lwmod 05A8  
                     ?_Lcd_Set_Cursor 0021                               __ptext1 056B  
                             __ptext2 024C                               __ptext3 016E  
                             __ptext4 068F                               __ptext5 06D3  
                             __ptext6 0029                               __ptext7 05A8  
                             __ptext8 049A                               __ptext9 03E6  
                         UART_TxInt@i 0066                           UART_TxInt@n 0062  
                         UART_TxInt@t 0064                      ___aldiv@dividend 0024  
                Numpad_Read@oldKeyVal 0079                         _receivedBytes 006D  
                             clrloop0 06E8                __end_of_Lcd_Write_Char 066C  
                end_of_initialization 0025                        UART_TxString@i 0021  
                    ___aldiv@quotient 002A                             Lcd_Port@a 0074  
                           _UART_init 056B                             _PORTDbits 0008  
                           _PORTEbits 0009                       ?_Lcd_Write_Char 0070  
                   Lcd_Write_String@a 0023                     Lcd_Write_String@i 0028  
                    _Lcd_Write_String 04E0                            ?_UART_init 002E  
                      __end_of_keypad 061C                   start_initialization 0011  
                         __end_of_ISR 056B                 Lcd_Set_Cursor@colonna 0021  
                     Lcd_Write_Char@a 0022                       Lcd_Write_Char@y 0021  
                     Lcd_Write_Int@n1 01C3                       _counterFinished 006E  
                         __pbssCOMMON 0077                             ___latbits 0002  
                       __pcstackBANK0 0020                         __pcstackBANK1 00B6  
                       __pcstackBANK3 0190                              ?_Lcd_Cmd 0070  
                    ___lwdiv@dividend 0022                      ??_Lcd_Set_Cursor 0022  
                            ?___aldiv 0020                              ?___awdiv 0020  
                            ?___lwdiv 0020                              ?___lwmod 0020  
                           __pstrings 0600                           ??_UART_init 0032  
                       _Lcd_Write_Int 0029                      UART_TxInt@buffer 002D  
                       UART_TxChar@ch 0075                      ___lwdiv@quotient 0025  
                       UART_TxInt@val 0028                       ___aldiv@divisor 0020  
                   interrupt_function 0004                       ___aldiv@counter 0028  
                           clear_ram0 06E7                         ??_UART_TxChar 0074  
                       _UART_TxString 068F                              Lcd_Cmd@a 0020  
                         __stringbase 060F                        ?_Lcd_Write_Int 002A  
                    ??_Lcd_Write_Char 0075                              _Lcd_Init 0378  
                            _Lcd_Port 06B1              __end_of_Lcd_Write_String 0526  
                      ?_UART_TxString 0070                   __end_of_UART_TxChar 06E7  
                  __end_of__stringtab 0610                       ___lwdiv@divisor 0020  
                     ___lwdiv@counter 0024                              __ptext10 04E0  
                            __ptext11 0637                              __ptext12 044F  
                            __ptext13 0378                              __ptext14 066C  
                            __ptext15 06B1                              __ptext16 0526  
                    UART_TxString@str 0020                       UART_TxInt@isNeg 005F  
                        UART_TxInt@n1 0060                              _received 006F  
                     ??_Lcd_Write_Int 002C                   Lcd_Write_Int@buffer 0190  
                  Lcd_Write_Char@temp 0020                              intlevel1 0000  
                   UART_init@baudrate 002E                      ___lwmod@dividend 0022  
                     ??_UART_TxString 0076                             stringcode 060A  
                         _UART_TxChar 06D3                    Lcd_Set_Cursor@riga 0023  
                  Lcd_Set_Cursor@temp 0026                    Lcd_Write_Int@isNeg 01C2  
                          _OPTION_REG 0081                       ___lwmod@divisor 0020  
                     ___lwmod@counter 0075                              stringdir 060A  
                            stringtab 0600                            _UART_TxInt 016E  
                        ___aldiv@sign 0029  
